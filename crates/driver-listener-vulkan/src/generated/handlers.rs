//! THIS FILE IS GENERATED BY TOOL, DO NOT MODIFY.

use crate::Packet;
use ash::vk;
use std::ffi::c_void;

pub(crate) fn register_handlers_to(map: &mut crate::HandlerMap) {
    map.insert(1000001000, Box::new(vk_create_instance));
    map.insert(1000001001, Box::new(vk_destroy_instance));
    map.insert(1000001002, Box::new(vk_enumerate_physical_devices));
    map.insert(1000001003, Box::new(vk_get_device_proc_addr));
    map.insert(1000001004, Box::new(vk_get_instance_proc_addr));
    map.insert(1000001005, Box::new(vk_get_physical_device_properties));
    map.insert(
        1000001006,
        Box::new(vk_get_physical_device_queue_family_properties),
    );
    map.insert(
        1000001007,
        Box::new(vk_get_physical_device_memory_properties),
    );
    map.insert(1000001008, Box::new(vk_get_physical_device_features));
    map.insert(
        1000001009,
        Box::new(vk_get_physical_device_format_properties),
    );
    map.insert(
        1000001010,
        Box::new(vk_get_physical_device_image_format_properties),
    );
    map.insert(1000001011, Box::new(vk_create_device));
    map.insert(1000001012, Box::new(vk_destroy_device));
    map.insert(1000001013, Box::new(vk_enumerate_instance_version));
    map.insert(1000001014, Box::new(vk_enumerate_instance_layer_properties));
    map.insert(
        1000001015,
        Box::new(vk_enumerate_instance_extension_properties),
    );
    map.insert(1000001016, Box::new(vk_enumerate_device_layer_properties));
    map.insert(
        1000001017,
        Box::new(vk_enumerate_device_extension_properties),
    );
    map.insert(1000001018, Box::new(vk_get_device_queue));
    map.insert(1000001019, Box::new(vk_queue_submit));
    map.insert(1000001020, Box::new(vk_queue_wait_idle));
    map.insert(1000001021, Box::new(vk_device_wait_idle));
    map.insert(1000001022, Box::new(vk_allocate_memory));
    map.insert(1000001023, Box::new(vk_free_memory));
    map.insert(1000001024, Box::new(vk_map_memory));
    map.insert(1000001025, Box::new(vk_unmap_memory));
    map.insert(1000001026, Box::new(vk_flush_mapped_memory_ranges));
    map.insert(1000001027, Box::new(vk_invalidate_mapped_memory_ranges));
    map.insert(1000001028, Box::new(vk_get_device_memory_commitment));
    map.insert(1000001029, Box::new(vk_get_buffer_memory_requirements));
    map.insert(1000001030, Box::new(vk_bind_buffer_memory));
    map.insert(1000001031, Box::new(vk_get_image_memory_requirements));
    map.insert(1000001032, Box::new(vk_bind_image_memory));
    map.insert(
        1000001033,
        Box::new(vk_get_image_sparse_memory_requirements),
    );
    map.insert(
        1000001034,
        Box::new(vk_get_physical_device_sparse_image_format_properties),
    );
    map.insert(1000001035, Box::new(vk_queue_bind_sparse));
    map.insert(1000001036, Box::new(vk_create_fence));
    map.insert(1000001037, Box::new(vk_destroy_fence));
    map.insert(1000001038, Box::new(vk_reset_fences));
    map.insert(1000001039, Box::new(vk_get_fence_status));
    map.insert(1000001040, Box::new(vk_wait_for_fences));
    map.insert(1000001041, Box::new(vk_create_semaphore));
    map.insert(1000001042, Box::new(vk_destroy_semaphore));
    map.insert(1000001043, Box::new(vk_create_event));
    map.insert(1000001044, Box::new(vk_destroy_event));
    map.insert(1000001045, Box::new(vk_get_event_status));
    map.insert(1000001046, Box::new(vk_set_event));
    map.insert(1000001047, Box::new(vk_reset_event));
    map.insert(1000001048, Box::new(vk_create_query_pool));
    map.insert(1000001049, Box::new(vk_destroy_query_pool));
    map.insert(1000001050, Box::new(vk_get_query_pool_results));
    map.insert(1000001051, Box::new(vk_reset_query_pool));
    map.insert(1000001052, Box::new(vk_create_buffer));
    map.insert(1000001053, Box::new(vk_destroy_buffer));
    map.insert(1000001054, Box::new(vk_create_buffer_view));
    map.insert(1000001055, Box::new(vk_destroy_buffer_view));
    map.insert(1000001056, Box::new(vk_create_image));
    map.insert(1000001057, Box::new(vk_destroy_image));
    map.insert(1000001058, Box::new(vk_get_image_subresource_layout));
    map.insert(1000001059, Box::new(vk_create_image_view));
    map.insert(1000001060, Box::new(vk_destroy_image_view));
    map.insert(1000001061, Box::new(vk_create_shader_module));
    map.insert(1000001062, Box::new(vk_destroy_shader_module));
    map.insert(1000001063, Box::new(vk_create_pipeline_cache));
    map.insert(1000001064, Box::new(vk_destroy_pipeline_cache));
    map.insert(1000001065, Box::new(vk_get_pipeline_cache_data));
    map.insert(1000001066, Box::new(vk_merge_pipeline_caches));
    map.insert(1000001067, Box::new(vk_create_graphics_pipelines));
    map.insert(1000001068, Box::new(vk_create_compute_pipelines));
    map.insert(
        1000001069,
        Box::new(vk_get_device_subpass_shading_max_workgroup_size_huawei),
    );
    map.insert(1000001070, Box::new(vk_destroy_pipeline));
    map.insert(1000001071, Box::new(vk_create_pipeline_layout));
    map.insert(1000001072, Box::new(vk_destroy_pipeline_layout));
    map.insert(1000001073, Box::new(vk_create_sampler));
    map.insert(1000001074, Box::new(vk_destroy_sampler));
    map.insert(1000001075, Box::new(vk_create_descriptor_set_layout));
    map.insert(1000001076, Box::new(vk_destroy_descriptor_set_layout));
    map.insert(1000001077, Box::new(vk_create_descriptor_pool));
    map.insert(1000001078, Box::new(vk_destroy_descriptor_pool));
    map.insert(1000001079, Box::new(vk_reset_descriptor_pool));
    map.insert(1000001080, Box::new(vk_allocate_descriptor_sets));
    map.insert(1000001081, Box::new(vk_free_descriptor_sets));
    map.insert(1000001082, Box::new(vk_update_descriptor_sets));
    map.insert(1000001083, Box::new(vk_create_framebuffer));
    map.insert(1000001084, Box::new(vk_destroy_framebuffer));
    map.insert(1000001085, Box::new(vk_create_render_pass));
    map.insert(1000001086, Box::new(vk_destroy_render_pass));
    map.insert(1000001087, Box::new(vk_get_render_area_granularity));
    map.insert(1000001088, Box::new(vk_get_rendering_area_granularity_khr));
    map.insert(1000001089, Box::new(vk_create_command_pool));
    map.insert(1000001090, Box::new(vk_destroy_command_pool));
    map.insert(1000001091, Box::new(vk_reset_command_pool));
    map.insert(1000001092, Box::new(vk_allocate_command_buffers));
    map.insert(1000001093, Box::new(vk_free_command_buffers));
    map.insert(1000001094, Box::new(vk_begin_command_buffer));
    map.insert(1000001095, Box::new(vk_end_command_buffer));
    map.insert(1000001096, Box::new(vk_reset_command_buffer));
    map.insert(1000001097, Box::new(vk_cmd_bind_pipeline));
    map.insert(
        1000001098,
        Box::new(vk_cmd_set_attachment_feedback_loop_enable_ext),
    );
    map.insert(1000001099, Box::new(vk_cmd_set_viewport));
    map.insert(1000001100, Box::new(vk_cmd_set_scissor));
    map.insert(1000001101, Box::new(vk_cmd_set_line_width));
    map.insert(1000001102, Box::new(vk_cmd_set_depth_bias));
    map.insert(1000001103, Box::new(vk_cmd_set_blend_constants));
    map.insert(1000001104, Box::new(vk_cmd_set_depth_bounds));
    map.insert(1000001105, Box::new(vk_cmd_set_stencil_compare_mask));
    map.insert(1000001106, Box::new(vk_cmd_set_stencil_write_mask));
    map.insert(1000001107, Box::new(vk_cmd_set_stencil_reference));
    map.insert(1000001108, Box::new(vk_cmd_bind_descriptor_sets));
    map.insert(1000001109, Box::new(vk_cmd_bind_index_buffer));
    map.insert(1000001110, Box::new(vk_cmd_bind_vertex_buffers));
    map.insert(1000001111, Box::new(vk_cmd_draw));
    map.insert(1000001112, Box::new(vk_cmd_draw_indexed));
    map.insert(1000001113, Box::new(vk_cmd_draw_multi_ext));
    map.insert(1000001114, Box::new(vk_cmd_draw_multi_indexed_ext));
    map.insert(1000001115, Box::new(vk_cmd_draw_indirect));
    map.insert(1000001116, Box::new(vk_cmd_draw_indexed_indirect));
    map.insert(1000001117, Box::new(vk_cmd_dispatch));
    map.insert(1000001118, Box::new(vk_cmd_dispatch_indirect));
    map.insert(1000001119, Box::new(vk_cmd_subpass_shading_huawei));
    map.insert(1000001120, Box::new(vk_cmd_draw_cluster_huawei));
    map.insert(1000001121, Box::new(vk_cmd_draw_cluster_indirect_huawei));
    map.insert(
        1000001122,
        Box::new(vk_cmd_update_pipeline_indirect_buffer_nv),
    );
    map.insert(1000001123, Box::new(vk_cmd_copy_buffer));
    map.insert(1000001124, Box::new(vk_cmd_copy_image));
    map.insert(1000001125, Box::new(vk_cmd_blit_image));
    map.insert(1000001126, Box::new(vk_cmd_copy_buffer_to_image));
    map.insert(1000001127, Box::new(vk_cmd_copy_image_to_buffer));
    map.insert(1000001128, Box::new(vk_cmd_copy_memory_indirect_nv));
    map.insert(
        1000001129,
        Box::new(vk_cmd_copy_memory_to_image_indirect_nv),
    );
    map.insert(1000001130, Box::new(vk_cmd_update_buffer));
    map.insert(1000001131, Box::new(vk_cmd_fill_buffer));
    map.insert(1000001132, Box::new(vk_cmd_clear_color_image));
    map.insert(1000001133, Box::new(vk_cmd_clear_depth_stencil_image));
    map.insert(1000001134, Box::new(vk_cmd_clear_attachments));
    map.insert(1000001135, Box::new(vk_cmd_resolve_image));
    map.insert(1000001136, Box::new(vk_cmd_set_event));
    map.insert(1000001137, Box::new(vk_cmd_reset_event));
    map.insert(1000001138, Box::new(vk_cmd_wait_events));
    map.insert(1000001139, Box::new(vk_cmd_pipeline_barrier));
    map.insert(1000001140, Box::new(vk_cmd_begin_query));
    map.insert(1000001141, Box::new(vk_cmd_end_query));
    map.insert(1000001142, Box::new(vk_cmd_begin_conditional_rendering_ext));
    map.insert(1000001143, Box::new(vk_cmd_end_conditional_rendering_ext));
    map.insert(1000001144, Box::new(vk_cmd_reset_query_pool));
    map.insert(1000001145, Box::new(vk_cmd_write_timestamp));
    map.insert(1000001146, Box::new(vk_cmd_copy_query_pool_results));
    map.insert(1000001147, Box::new(vk_cmd_push_constants));
    map.insert(1000001148, Box::new(vk_cmd_begin_render_pass));
    map.insert(1000001149, Box::new(vk_cmd_next_subpass));
    map.insert(1000001150, Box::new(vk_cmd_end_render_pass));
    map.insert(1000001151, Box::new(vk_cmd_execute_commands));
    map.insert(1000001152, Box::new(vk_create_android_surface_khr));
    map.insert(
        1000001153,
        Box::new(vk_get_physical_device_display_properties_khr),
    );
    map.insert(
        1000001154,
        Box::new(vk_get_physical_device_display_plane_properties_khr),
    );
    map.insert(
        1000001155,
        Box::new(vk_get_display_plane_supported_displays_khr),
    );
    map.insert(1000001156, Box::new(vk_get_display_mode_properties_khr));
    map.insert(1000001157, Box::new(vk_create_display_mode_khr));
    map.insert(1000001158, Box::new(vk_get_display_plane_capabilities_khr));
    map.insert(1000001159, Box::new(vk_create_display_plane_surface_khr));
    map.insert(1000001160, Box::new(vk_create_shared_swapchains_khr));
    map.insert(1000001161, Box::new(vk_destroy_surface_khr));
    map.insert(
        1000001162,
        Box::new(vk_get_physical_device_surface_support_khr),
    );
    map.insert(
        1000001163,
        Box::new(vk_get_physical_device_surface_capabilities_khr),
    );
    map.insert(
        1000001164,
        Box::new(vk_get_physical_device_surface_formats_khr),
    );
    map.insert(
        1000001165,
        Box::new(vk_get_physical_device_surface_present_modes_khr),
    );
    map.insert(1000001166, Box::new(vk_create_swapchain_khr));
    map.insert(1000001167, Box::new(vk_destroy_swapchain_khr));
    map.insert(1000001168, Box::new(vk_get_swapchain_images_khr));
    map.insert(1000001169, Box::new(vk_acquire_next_image_khr));
    map.insert(1000001170, Box::new(vk_queue_present_khr));
    map.insert(1000001171, Box::new(vk_create_vi_surface_nn));
    map.insert(1000001172, Box::new(vk_create_wayland_surface_khr));
    map.insert(
        1000001173,
        Box::new(vk_get_physical_device_wayland_presentation_support_khr),
    );
    map.insert(1000001174, Box::new(vk_create_win32_surface_khr));
    map.insert(
        1000001175,
        Box::new(vk_get_physical_device_win32_presentation_support_khr),
    );
    map.insert(1000001176, Box::new(vk_create_xlib_surface_khr));
    map.insert(
        1000001177,
        Box::new(vk_get_physical_device_xlib_presentation_support_khr),
    );
    map.insert(1000001178, Box::new(vk_create_xcb_surface_khr));
    map.insert(
        1000001179,
        Box::new(vk_get_physical_device_xcb_presentation_support_khr),
    );
    map.insert(1000001180, Box::new(vk_create_direct_fbsurface_ext));
    map.insert(
        1000001181,
        Box::new(vk_get_physical_device_direct_fbpresentation_support_ext),
    );
    map.insert(1000001182, Box::new(vk_create_image_pipe_surface_fuchsia));
    map.insert(
        1000001183,
        Box::new(vk_create_stream_descriptor_surface_ggp),
    );
    map.insert(1000001184, Box::new(vk_create_screen_surface_qnx));
    map.insert(
        1000001185,
        Box::new(vk_get_physical_device_screen_presentation_support_qnx),
    );
    map.insert(1000001186, Box::new(vk_create_debug_report_callback_ext));
    map.insert(1000001187, Box::new(vk_destroy_debug_report_callback_ext));
    map.insert(1000001188, Box::new(vk_debug_report_message_ext));
    map.insert(1000001189, Box::new(vk_debug_marker_set_object_name_ext));
    map.insert(1000001190, Box::new(vk_debug_marker_set_object_tag_ext));
    map.insert(1000001191, Box::new(vk_cmd_debug_marker_begin_ext));
    map.insert(1000001192, Box::new(vk_cmd_debug_marker_end_ext));
    map.insert(1000001193, Box::new(vk_cmd_debug_marker_insert_ext));
    map.insert(
        1000001194,
        Box::new(vk_get_physical_device_external_image_format_properties_nv),
    );
    map.insert(1000001195, Box::new(vk_get_memory_win32_handle_nv));
    map.insert(1000001196, Box::new(vk_cmd_execute_generated_commands_nv));
    map.insert(
        1000001197,
        Box::new(vk_cmd_preprocess_generated_commands_nv),
    );
    map.insert(1000001198, Box::new(vk_cmd_bind_pipeline_shader_group_nv));
    map.insert(
        1000001199,
        Box::new(vk_get_generated_commands_memory_requirements_nv),
    );
    map.insert(1000001200, Box::new(vk_create_indirect_commands_layout_nv));
    map.insert(1000001201, Box::new(vk_destroy_indirect_commands_layout_nv));
    map.insert(1000001202, Box::new(vk_get_physical_device_features2));
    map.insert(1000001203, Box::new(vk_get_physical_device_properties2));
    map.insert(
        1000001204,
        Box::new(vk_get_physical_device_format_properties2),
    );
    map.insert(
        1000001205,
        Box::new(vk_get_physical_device_image_format_properties2),
    );
    map.insert(
        1000001206,
        Box::new(vk_get_physical_device_queue_family_properties2),
    );
    map.insert(
        1000001207,
        Box::new(vk_get_physical_device_memory_properties2),
    );
    map.insert(
        1000001208,
        Box::new(vk_get_physical_device_sparse_image_format_properties2),
    );
    map.insert(1000001209, Box::new(vk_cmd_push_descriptor_set_khr));
    map.insert(1000001210, Box::new(vk_trim_command_pool));
    map.insert(
        1000001211,
        Box::new(vk_get_physical_device_external_buffer_properties),
    );
    map.insert(1000001212, Box::new(vk_get_memory_win32_handle_khr));
    map.insert(
        1000001213,
        Box::new(vk_get_memory_win32_handle_properties_khr),
    );
    map.insert(1000001214, Box::new(vk_get_memory_fd_khr));
    map.insert(1000001215, Box::new(vk_get_memory_fd_properties_khr));
    map.insert(1000001216, Box::new(vk_get_memory_zircon_handle_fuchsia));
    map.insert(
        1000001217,
        Box::new(vk_get_memory_zircon_handle_properties_fuchsia),
    );
    map.insert(1000001218, Box::new(vk_get_memory_remote_address_nv));
    map.insert(
        1000001219,
        Box::new(vk_get_physical_device_external_semaphore_properties),
    );
    map.insert(1000001220, Box::new(vk_get_semaphore_win32_handle_khr));
    map.insert(1000001221, Box::new(vk_import_semaphore_win32_handle_khr));
    map.insert(1000001222, Box::new(vk_get_semaphore_fd_khr));
    map.insert(1000001223, Box::new(vk_import_semaphore_fd_khr));
    map.insert(1000001224, Box::new(vk_get_semaphore_zircon_handle_fuchsia));
    map.insert(
        1000001225,
        Box::new(vk_import_semaphore_zircon_handle_fuchsia),
    );
    map.insert(
        1000001226,
        Box::new(vk_get_physical_device_external_fence_properties),
    );
    map.insert(1000001227, Box::new(vk_get_fence_win32_handle_khr));
    map.insert(1000001228, Box::new(vk_import_fence_win32_handle_khr));
    map.insert(1000001229, Box::new(vk_get_fence_fd_khr));
    map.insert(1000001230, Box::new(vk_import_fence_fd_khr));
    map.insert(1000001231, Box::new(vk_release_display_ext));
    map.insert(1000001232, Box::new(vk_acquire_xlib_display_ext));
    map.insert(1000001233, Box::new(vk_get_rand_routput_display_ext));
    map.insert(1000001234, Box::new(vk_acquire_winrt_display_nv));
    map.insert(1000001235, Box::new(vk_get_winrt_display_nv));
    map.insert(1000001236, Box::new(vk_display_power_control_ext));
    map.insert(1000001237, Box::new(vk_register_device_event_ext));
    map.insert(1000001238, Box::new(vk_register_display_event_ext));
    map.insert(1000001239, Box::new(vk_get_swapchain_counter_ext));
    map.insert(
        1000001240,
        Box::new(vk_get_physical_device_surface_capabilities2_ext),
    );
    map.insert(1000001241, Box::new(vk_enumerate_physical_device_groups));
    map.insert(
        1000001242,
        Box::new(vk_get_device_group_peer_memory_features),
    );
    map.insert(1000001243, Box::new(vk_bind_buffer_memory2));
    map.insert(1000001244, Box::new(vk_bind_image_memory2));
    map.insert(1000001245, Box::new(vk_cmd_set_device_mask));
    map.insert(
        1000001246,
        Box::new(vk_get_device_group_present_capabilities_khr),
    );
    map.insert(
        1000001247,
        Box::new(vk_get_device_group_surface_present_modes_khr),
    );
    map.insert(1000001248, Box::new(vk_acquire_next_image2_khr));
    map.insert(1000001249, Box::new(vk_cmd_dispatch_base));
    map.insert(
        1000001250,
        Box::new(vk_get_physical_device_present_rectangles_khr),
    );
    map.insert(1000001251, Box::new(vk_create_descriptor_update_template));
    map.insert(1000001252, Box::new(vk_destroy_descriptor_update_template));
    map.insert(1000001253, Box::new(vk_update_descriptor_set_with_template));
    map.insert(
        1000001254,
        Box::new(vk_cmd_push_descriptor_set_with_template_khr),
    );
    map.insert(1000001255, Box::new(vk_set_hdr_metadata_ext));
    map.insert(1000001256, Box::new(vk_get_swapchain_status_khr));
    map.insert(1000001257, Box::new(vk_get_refresh_cycle_duration_google));
    map.insert(1000001258, Box::new(vk_get_past_presentation_timing_google));
    map.insert(1000001259, Box::new(vk_create_iossurface_mvk));
    map.insert(1000001260, Box::new(vk_create_mac_ossurface_mvk));
    map.insert(1000001261, Box::new(vk_create_metal_surface_ext));
    map.insert(1000001262, Box::new(vk_cmd_set_viewport_wscaling_nv));
    map.insert(1000001263, Box::new(vk_cmd_set_discard_rectangle_ext));
    map.insert(
        1000001264,
        Box::new(vk_cmd_set_discard_rectangle_enable_ext),
    );
    map.insert(1000001265, Box::new(vk_cmd_set_discard_rectangle_mode_ext));
    map.insert(1000001266, Box::new(vk_cmd_set_sample_locations_ext));
    map.insert(
        1000001267,
        Box::new(vk_get_physical_device_multisample_properties_ext),
    );
    map.insert(
        1000001268,
        Box::new(vk_get_physical_device_surface_capabilities2_khr),
    );
    map.insert(
        1000001269,
        Box::new(vk_get_physical_device_surface_formats2_khr),
    );
    map.insert(
        1000001270,
        Box::new(vk_get_physical_device_display_properties2_khr),
    );
    map.insert(
        1000001271,
        Box::new(vk_get_physical_device_display_plane_properties2_khr),
    );
    map.insert(1000001272, Box::new(vk_get_display_mode_properties2_khr));
    map.insert(1000001273, Box::new(vk_get_display_plane_capabilities2_khr));
    map.insert(1000001274, Box::new(vk_get_buffer_memory_requirements2));
    map.insert(1000001275, Box::new(vk_get_image_memory_requirements2));
    map.insert(
        1000001276,
        Box::new(vk_get_image_sparse_memory_requirements2),
    );
    map.insert(
        1000001277,
        Box::new(vk_get_device_buffer_memory_requirements),
    );
    map.insert(
        1000001278,
        Box::new(vk_get_device_image_memory_requirements),
    );
    map.insert(
        1000001279,
        Box::new(vk_get_device_image_sparse_memory_requirements),
    );
    map.insert(1000001280, Box::new(vk_create_sampler_ycbcr_conversion));
    map.insert(1000001281, Box::new(vk_destroy_sampler_ycbcr_conversion));
    map.insert(1000001282, Box::new(vk_get_device_queue2));
    map.insert(1000001283, Box::new(vk_create_validation_cache_ext));
    map.insert(1000001284, Box::new(vk_destroy_validation_cache_ext));
    map.insert(1000001285, Box::new(vk_get_validation_cache_data_ext));
    map.insert(1000001286, Box::new(vk_merge_validation_caches_ext));
    map.insert(1000001287, Box::new(vk_get_descriptor_set_layout_support));
    map.insert(1000001288, Box::new(vk_get_swapchain_gralloc_usage_android));
    map.insert(
        1000001289,
        Box::new(vk_get_swapchain_gralloc_usage2_android),
    );
    map.insert(1000001290, Box::new(vk_acquire_image_android));
    map.insert(1000001291, Box::new(vk_queue_signal_release_image_android));
    map.insert(1000001292, Box::new(vk_get_shader_info_amd));
    map.insert(1000001293, Box::new(vk_set_local_dimming_amd));
    map.insert(
        1000001294,
        Box::new(vk_get_physical_device_calibrateable_time_domains_khr),
    );
    map.insert(1000001295, Box::new(vk_get_calibrated_timestamps_khr));
    map.insert(1000001296, Box::new(vk_set_debug_utils_object_name_ext));
    map.insert(1000001297, Box::new(vk_set_debug_utils_object_tag_ext));
    map.insert(1000001298, Box::new(vk_queue_begin_debug_utils_label_ext));
    map.insert(1000001299, Box::new(vk_queue_end_debug_utils_label_ext));
    map.insert(1000001300, Box::new(vk_queue_insert_debug_utils_label_ext));
    map.insert(1000001301, Box::new(vk_cmd_begin_debug_utils_label_ext));
    map.insert(1000001302, Box::new(vk_cmd_end_debug_utils_label_ext));
    map.insert(1000001303, Box::new(vk_cmd_insert_debug_utils_label_ext));
    map.insert(1000001304, Box::new(vk_create_debug_utils_messenger_ext));
    map.insert(1000001305, Box::new(vk_destroy_debug_utils_messenger_ext));
    map.insert(1000001306, Box::new(vk_submit_debug_utils_message_ext));
    map.insert(
        1000001307,
        Box::new(vk_get_memory_host_pointer_properties_ext),
    );
    map.insert(1000001308, Box::new(vk_cmd_write_buffer_marker_amd));
    map.insert(1000001309, Box::new(vk_create_render_pass2));
    map.insert(1000001310, Box::new(vk_cmd_begin_render_pass2));
    map.insert(1000001311, Box::new(vk_cmd_next_subpass2));
    map.insert(1000001312, Box::new(vk_cmd_end_render_pass2));
    map.insert(1000001313, Box::new(vk_get_semaphore_counter_value));
    map.insert(1000001314, Box::new(vk_wait_semaphores));
    map.insert(1000001315, Box::new(vk_signal_semaphore));
    map.insert(
        1000001316,
        Box::new(vk_get_android_hardware_buffer_properties_android),
    );
    map.insert(
        1000001317,
        Box::new(vk_get_memory_android_hardware_buffer_android),
    );
    map.insert(1000001318, Box::new(vk_cmd_draw_indirect_count));
    map.insert(1000001319, Box::new(vk_cmd_draw_indexed_indirect_count));
    map.insert(1000001320, Box::new(vk_cmd_set_checkpoint_nv));
    map.insert(1000001321, Box::new(vk_get_queue_checkpoint_data_nv));
    map.insert(
        1000001322,
        Box::new(vk_cmd_bind_transform_feedback_buffers_ext),
    );
    map.insert(1000001323, Box::new(vk_cmd_begin_transform_feedback_ext));
    map.insert(1000001324, Box::new(vk_cmd_end_transform_feedback_ext));
    map.insert(1000001325, Box::new(vk_cmd_begin_query_indexed_ext));
    map.insert(1000001326, Box::new(vk_cmd_end_query_indexed_ext));
    map.insert(1000001327, Box::new(vk_cmd_draw_indirect_byte_count_ext));
    map.insert(1000001328, Box::new(vk_cmd_set_exclusive_scissor_nv));
    map.insert(1000001329, Box::new(vk_cmd_set_exclusive_scissor_enable_nv));
    map.insert(1000001330, Box::new(vk_cmd_bind_shading_rate_image_nv));
    map.insert(
        1000001331,
        Box::new(vk_cmd_set_viewport_shading_rate_palette_nv),
    );
    map.insert(1000001332, Box::new(vk_cmd_set_coarse_sample_order_nv));
    map.insert(1000001333, Box::new(vk_cmd_draw_mesh_tasks_nv));
    map.insert(1000001334, Box::new(vk_cmd_draw_mesh_tasks_indirect_nv));
    map.insert(
        1000001335,
        Box::new(vk_cmd_draw_mesh_tasks_indirect_count_nv),
    );
    map.insert(1000001336, Box::new(vk_cmd_draw_mesh_tasks_ext));
    map.insert(1000001337, Box::new(vk_cmd_draw_mesh_tasks_indirect_ext));
    map.insert(
        1000001338,
        Box::new(vk_cmd_draw_mesh_tasks_indirect_count_ext),
    );
    map.insert(1000001339, Box::new(vk_compile_deferred_nv));
    map.insert(1000001340, Box::new(vk_create_acceleration_structure_nv));
    map.insert(1000001341, Box::new(vk_cmd_bind_invocation_mask_huawei));
    map.insert(1000001342, Box::new(vk_destroy_acceleration_structure_khr));
    map.insert(1000001343, Box::new(vk_destroy_acceleration_structure_nv));
    map.insert(
        1000001344,
        Box::new(vk_get_acceleration_structure_memory_requirements_nv),
    );
    map.insert(
        1000001345,
        Box::new(vk_bind_acceleration_structure_memory_nv),
    );
    map.insert(1000001346, Box::new(vk_cmd_copy_acceleration_structure_nv));
    map.insert(1000001347, Box::new(vk_cmd_copy_acceleration_structure_khr));
    map.insert(1000001348, Box::new(vk_copy_acceleration_structure_khr));
    map.insert(
        1000001349,
        Box::new(vk_cmd_copy_acceleration_structure_to_memory_khr),
    );
    map.insert(
        1000001350,
        Box::new(vk_copy_acceleration_structure_to_memory_khr),
    );
    map.insert(
        1000001351,
        Box::new(vk_cmd_copy_memory_to_acceleration_structure_khr),
    );
    map.insert(
        1000001352,
        Box::new(vk_copy_memory_to_acceleration_structure_khr),
    );
    map.insert(
        1000001353,
        Box::new(vk_cmd_write_acceleration_structures_properties_khr),
    );
    map.insert(
        1000001354,
        Box::new(vk_cmd_write_acceleration_structures_properties_nv),
    );
    map.insert(1000001355, Box::new(vk_cmd_build_acceleration_structure_nv));
    map.insert(
        1000001356,
        Box::new(vk_write_acceleration_structures_properties_khr),
    );
    map.insert(1000001357, Box::new(vk_cmd_trace_rays_khr));
    map.insert(1000001358, Box::new(vk_cmd_trace_rays_nv));
    map.insert(
        1000001359,
        Box::new(vk_get_ray_tracing_shader_group_handles_khr),
    );
    map.insert(
        1000001360,
        Box::new(vk_get_ray_tracing_capture_replay_shader_group_handles_khr),
    );
    map.insert(
        1000001361,
        Box::new(vk_get_acceleration_structure_handle_nv),
    );
    map.insert(1000001362, Box::new(vk_create_ray_tracing_pipelines_nv));
    map.insert(1000001363, Box::new(vk_create_ray_tracing_pipelines_khr));
    map.insert(
        1000001364,
        Box::new(vk_get_physical_device_cooperative_matrix_properties_nv),
    );
    map.insert(1000001365, Box::new(vk_cmd_trace_rays_indirect_khr));
    map.insert(1000001366, Box::new(vk_cmd_trace_rays_indirect2_khr));
    map.insert(
        1000001367,
        Box::new(vk_get_device_acceleration_structure_compatibility_khr),
    );
    map.insert(
        1000001368,
        Box::new(vk_get_ray_tracing_shader_group_stack_size_khr),
    );
    map.insert(
        1000001369,
        Box::new(vk_cmd_set_ray_tracing_pipeline_stack_size_khr),
    );
    map.insert(1000001370, Box::new(vk_get_image_view_handle_nvx));
    map.insert(1000001371, Box::new(vk_get_image_view_address_nvx));
    map.insert(
        1000001372,
        Box::new(vk_get_physical_device_surface_present_modes2_ext),
    );
    map.insert(
        1000001373,
        Box::new(vk_get_device_group_surface_present_modes2_ext),
    );
    map.insert(
        1000001374,
        Box::new(vk_acquire_full_screen_exclusive_mode_ext),
    );
    map.insert(
        1000001375,
        Box::new(vk_release_full_screen_exclusive_mode_ext),
    );
    map.insert(
        1000001376,
        Box::new(vk_enumerate_physical_device_queue_family_performance_query_counters_khr),
    );
    map.insert(
        1000001377,
        Box::new(vk_get_physical_device_queue_family_performance_query_passes_khr),
    );
    map.insert(1000001378, Box::new(vk_acquire_profiling_lock_khr));
    map.insert(1000001379, Box::new(vk_release_profiling_lock_khr));
    map.insert(
        1000001380,
        Box::new(vk_get_image_drm_format_modifier_properties_ext),
    );
    map.insert(1000001381, Box::new(vk_get_buffer_opaque_capture_address));
    map.insert(1000001382, Box::new(vk_get_buffer_device_address));
    map.insert(1000001383, Box::new(vk_create_headless_surface_ext));
    map.insert(
        1000001384,
        Box::new(vk_get_physical_device_supported_framebuffer_mixed_samples_combinations_nv),
    );
    map.insert(1000001385, Box::new(vk_initialize_performance_api_intel));
    map.insert(1000001386, Box::new(vk_uninitialize_performance_api_intel));
    map.insert(1000001387, Box::new(vk_cmd_set_performance_marker_intel));
    map.insert(
        1000001388,
        Box::new(vk_cmd_set_performance_stream_marker_intel),
    );
    map.insert(1000001389, Box::new(vk_cmd_set_performance_override_intel));
    map.insert(
        1000001390,
        Box::new(vk_acquire_performance_configuration_intel),
    );
    map.insert(
        1000001391,
        Box::new(vk_release_performance_configuration_intel),
    );
    map.insert(
        1000001392,
        Box::new(vk_queue_set_performance_configuration_intel),
    );
    map.insert(1000001393, Box::new(vk_get_performance_parameter_intel));
    map.insert(
        1000001394,
        Box::new(vk_get_device_memory_opaque_capture_address),
    );
    map.insert(
        1000001395,
        Box::new(vk_get_pipeline_executable_properties_khr),
    );
    map.insert(
        1000001396,
        Box::new(vk_get_pipeline_executable_statistics_khr),
    );
    map.insert(
        1000001397,
        Box::new(vk_get_pipeline_executable_internal_representations_khr),
    );
    map.insert(1000001398, Box::new(vk_cmd_set_line_stipple_khr));
    map.insert(1000001399, Box::new(vk_get_physical_device_tool_properties));
    map.insert(1000001400, Box::new(vk_create_acceleration_structure_khr));
    map.insert(
        1000001401,
        Box::new(vk_cmd_build_acceleration_structures_khr),
    );
    map.insert(
        1000001402,
        Box::new(vk_cmd_build_acceleration_structures_indirect_khr),
    );
    map.insert(1000001403, Box::new(vk_build_acceleration_structures_khr));
    map.insert(
        1000001404,
        Box::new(vk_get_acceleration_structure_device_address_khr),
    );
    map.insert(1000001405, Box::new(vk_create_deferred_operation_khr));
    map.insert(1000001406, Box::new(vk_destroy_deferred_operation_khr));
    map.insert(
        1000001407,
        Box::new(vk_get_deferred_operation_max_concurrency_khr),
    );
    map.insert(1000001408, Box::new(vk_get_deferred_operation_result_khr));
    map.insert(1000001409, Box::new(vk_deferred_operation_join_khr));
    map.insert(
        1000001410,
        Box::new(vk_get_pipeline_indirect_memory_requirements_nv),
    );
    map.insert(
        1000001411,
        Box::new(vk_get_pipeline_indirect_device_address_nv),
    );
    map.insert(1000001412, Box::new(vk_cmd_set_cull_mode));
    map.insert(1000001413, Box::new(vk_cmd_set_front_face));
    map.insert(1000001414, Box::new(vk_cmd_set_primitive_topology));
    map.insert(1000001415, Box::new(vk_cmd_set_viewport_with_count));
    map.insert(1000001416, Box::new(vk_cmd_set_scissor_with_count));
    map.insert(1000001417, Box::new(vk_cmd_bind_index_buffer2_khr));
    map.insert(1000001418, Box::new(vk_cmd_bind_vertex_buffers2));
    map.insert(1000001419, Box::new(vk_cmd_set_depth_test_enable));
    map.insert(1000001420, Box::new(vk_cmd_set_depth_write_enable));
    map.insert(1000001421, Box::new(vk_cmd_set_depth_compare_op));
    map.insert(1000001422, Box::new(vk_cmd_set_depth_bounds_test_enable));
    map.insert(1000001423, Box::new(vk_cmd_set_stencil_test_enable));
    map.insert(1000001424, Box::new(vk_cmd_set_stencil_op));
    map.insert(1000001425, Box::new(vk_cmd_set_patch_control_points_ext));
    map.insert(1000001426, Box::new(vk_cmd_set_rasterizer_discard_enable));
    map.insert(1000001427, Box::new(vk_cmd_set_depth_bias_enable));
    map.insert(1000001428, Box::new(vk_cmd_set_logic_op_ext));
    map.insert(1000001429, Box::new(vk_cmd_set_primitive_restart_enable));
    map.insert(
        1000001430,
        Box::new(vk_cmd_set_tessellation_domain_origin_ext),
    );
    map.insert(1000001431, Box::new(vk_cmd_set_depth_clamp_enable_ext));
    map.insert(1000001432, Box::new(vk_cmd_set_polygon_mode_ext));
    map.insert(1000001433, Box::new(vk_cmd_set_rasterization_samples_ext));
    map.insert(1000001434, Box::new(vk_cmd_set_sample_mask_ext));
    map.insert(
        1000001435,
        Box::new(vk_cmd_set_alpha_to_coverage_enable_ext),
    );
    map.insert(1000001436, Box::new(vk_cmd_set_alpha_to_one_enable_ext));
    map.insert(1000001437, Box::new(vk_cmd_set_logic_op_enable_ext));
    map.insert(1000001438, Box::new(vk_cmd_set_color_blend_enable_ext));
    map.insert(1000001439, Box::new(vk_cmd_set_color_blend_equation_ext));
    map.insert(1000001440, Box::new(vk_cmd_set_color_write_mask_ext));
    map.insert(1000001441, Box::new(vk_cmd_set_rasterization_stream_ext));
    map.insert(
        1000001442,
        Box::new(vk_cmd_set_conservative_rasterization_mode_ext),
    );
    map.insert(
        1000001443,
        Box::new(vk_cmd_set_extra_primitive_overestimation_size_ext),
    );
    map.insert(1000001444, Box::new(vk_cmd_set_depth_clip_enable_ext));
    map.insert(1000001445, Box::new(vk_cmd_set_sample_locations_enable_ext));
    map.insert(1000001446, Box::new(vk_cmd_set_color_blend_advanced_ext));
    map.insert(1000001447, Box::new(vk_cmd_set_provoking_vertex_mode_ext));
    map.insert(1000001448, Box::new(vk_cmd_set_line_rasterization_mode_ext));
    map.insert(1000001449, Box::new(vk_cmd_set_line_stipple_enable_ext));
    map.insert(
        1000001450,
        Box::new(vk_cmd_set_depth_clip_negative_one_to_one_ext),
    );
    map.insert(1000001451, Box::new(vk_cmd_set_viewport_wscaling_enable_nv));
    map.insert(1000001452, Box::new(vk_cmd_set_viewport_swizzle_nv));
    map.insert(1000001453, Box::new(vk_cmd_set_coverage_to_color_enable_nv));
    map.insert(
        1000001454,
        Box::new(vk_cmd_set_coverage_to_color_location_nv),
    );
    map.insert(1000001455, Box::new(vk_cmd_set_coverage_modulation_mode_nv));
    map.insert(
        1000001456,
        Box::new(vk_cmd_set_coverage_modulation_table_enable_nv),
    );
    map.insert(
        1000001457,
        Box::new(vk_cmd_set_coverage_modulation_table_nv),
    );
    map.insert(
        1000001458,
        Box::new(vk_cmd_set_shading_rate_image_enable_nv),
    );
    map.insert(1000001459, Box::new(vk_cmd_set_coverage_reduction_mode_nv));
    map.insert(
        1000001460,
        Box::new(vk_cmd_set_representative_fragment_test_enable_nv),
    );
    map.insert(1000001461, Box::new(vk_create_private_data_slot));
    map.insert(1000001462, Box::new(vk_destroy_private_data_slot));
    map.insert(1000001463, Box::new(vk_set_private_data));
    map.insert(1000001464, Box::new(vk_get_private_data));
    map.insert(1000001465, Box::new(vk_cmd_copy_buffer2));
    map.insert(1000001466, Box::new(vk_cmd_copy_image2));
    map.insert(1000001467, Box::new(vk_cmd_blit_image2));
    map.insert(1000001468, Box::new(vk_cmd_copy_buffer_to_image2));
    map.insert(1000001469, Box::new(vk_cmd_copy_image_to_buffer2));
    map.insert(1000001470, Box::new(vk_cmd_resolve_image2));
    map.insert(1000001471, Box::new(vk_cmd_set_fragment_shading_rate_khr));
    map.insert(
        1000001472,
        Box::new(vk_get_physical_device_fragment_shading_rates_khr),
    );
    map.insert(
        1000001473,
        Box::new(vk_cmd_set_fragment_shading_rate_enum_nv),
    );
    map.insert(
        1000001474,
        Box::new(vk_get_acceleration_structure_build_sizes_khr),
    );
    map.insert(1000001475, Box::new(vk_cmd_set_vertex_input_ext));
    map.insert(1000001476, Box::new(vk_cmd_set_color_write_enable_ext));
    map.insert(1000001477, Box::new(vk_cmd_set_event2));
    map.insert(1000001478, Box::new(vk_cmd_reset_event2));
    map.insert(1000001479, Box::new(vk_cmd_wait_events2));
    map.insert(1000001480, Box::new(vk_cmd_pipeline_barrier2));
    map.insert(1000001481, Box::new(vk_queue_submit2));
    map.insert(1000001482, Box::new(vk_cmd_write_timestamp2));
    map.insert(1000001483, Box::new(vk_cmd_write_buffer_marker2_amd));
    map.insert(1000001484, Box::new(vk_get_queue_checkpoint_data2_nv));
    map.insert(1000001485, Box::new(vk_copy_memory_to_image_ext));
    map.insert(1000001486, Box::new(vk_copy_image_to_memory_ext));
    map.insert(1000001487, Box::new(vk_copy_image_to_image_ext));
    map.insert(1000001488, Box::new(vk_transition_image_layout_ext));
    map.insert(
        1000001489,
        Box::new(vk_get_physical_device_video_capabilities_khr),
    );
    map.insert(
        1000001490,
        Box::new(vk_get_physical_device_video_format_properties_khr),
    );
    map.insert(
        1000001491,
        Box::new(vk_get_physical_device_video_encode_quality_level_properties_khr),
    );
    map.insert(1000001492, Box::new(vk_create_video_session_khr));
    map.insert(1000001493, Box::new(vk_destroy_video_session_khr));
    map.insert(1000001494, Box::new(vk_create_video_session_parameters_khr));
    map.insert(1000001495, Box::new(vk_update_video_session_parameters_khr));
    map.insert(
        1000001496,
        Box::new(vk_get_encoded_video_session_parameters_khr),
    );
    map.insert(
        1000001497,
        Box::new(vk_destroy_video_session_parameters_khr),
    );
    map.insert(
        1000001498,
        Box::new(vk_get_video_session_memory_requirements_khr),
    );
    map.insert(1000001499, Box::new(vk_bind_video_session_memory_khr));
    map.insert(1000001500, Box::new(vk_cmd_decode_video_khr));
    map.insert(1000001501, Box::new(vk_cmd_begin_video_coding_khr));
    map.insert(1000001502, Box::new(vk_cmd_control_video_coding_khr));
    map.insert(1000001503, Box::new(vk_cmd_end_video_coding_khr));
    map.insert(1000001504, Box::new(vk_cmd_encode_video_khr));
    map.insert(1000001505, Box::new(vk_cmd_decompress_memory_nv));
    map.insert(
        1000001506,
        Box::new(vk_cmd_decompress_memory_indirect_count_nv),
    );
    map.insert(1000001507, Box::new(vk_create_cu_module_nvx));
    map.insert(1000001508, Box::new(vk_create_cu_function_nvx));
    map.insert(1000001509, Box::new(vk_destroy_cu_module_nvx));
    map.insert(1000001510, Box::new(vk_destroy_cu_function_nvx));
    map.insert(1000001511, Box::new(vk_cmd_cu_launch_kernel_nvx));
    map.insert(1000001512, Box::new(vk_get_descriptor_set_layout_size_ext));
    map.insert(
        1000001513,
        Box::new(vk_get_descriptor_set_layout_binding_offset_ext),
    );
    map.insert(1000001514, Box::new(vk_get_descriptor_ext));
    map.insert(1000001515, Box::new(vk_cmd_bind_descriptor_buffers_ext));
    map.insert(
        1000001516,
        Box::new(vk_cmd_set_descriptor_buffer_offsets_ext),
    );
    map.insert(
        1000001517,
        Box::new(vk_cmd_bind_descriptor_buffer_embedded_samplers_ext),
    );
    map.insert(
        1000001518,
        Box::new(vk_get_buffer_opaque_capture_descriptor_data_ext),
    );
    map.insert(
        1000001519,
        Box::new(vk_get_image_opaque_capture_descriptor_data_ext),
    );
    map.insert(
        1000001520,
        Box::new(vk_get_image_view_opaque_capture_descriptor_data_ext),
    );
    map.insert(
        1000001521,
        Box::new(vk_get_sampler_opaque_capture_descriptor_data_ext),
    );
    map.insert(
        1000001522,
        Box::new(vk_get_acceleration_structure_opaque_capture_descriptor_data_ext),
    );
    map.insert(1000001523, Box::new(vk_set_device_memory_priority_ext));
    map.insert(1000001524, Box::new(vk_acquire_drm_display_ext));
    map.insert(1000001525, Box::new(vk_get_drm_display_ext));
    map.insert(1000001526, Box::new(vk_wait_for_present_khr));
    map.insert(1000001527, Box::new(vk_create_buffer_collection_fuchsia));
    map.insert(
        1000001528,
        Box::new(vk_set_buffer_collection_buffer_constraints_fuchsia),
    );
    map.insert(
        1000001529,
        Box::new(vk_set_buffer_collection_image_constraints_fuchsia),
    );
    map.insert(1000001530, Box::new(vk_destroy_buffer_collection_fuchsia));
    map.insert(
        1000001531,
        Box::new(vk_get_buffer_collection_properties_fuchsia),
    );
    map.insert(1000001532, Box::new(vk_create_cuda_module_nv));
    map.insert(1000001533, Box::new(vk_get_cuda_module_cache_nv));
    map.insert(1000001534, Box::new(vk_create_cuda_function_nv));
    map.insert(1000001535, Box::new(vk_destroy_cuda_module_nv));
    map.insert(1000001536, Box::new(vk_destroy_cuda_function_nv));
    map.insert(1000001537, Box::new(vk_cmd_cuda_launch_kernel_nv));
    map.insert(1000001538, Box::new(vk_cmd_begin_rendering));
    map.insert(1000001539, Box::new(vk_cmd_end_rendering));
    map.insert(
        1000001540,
        Box::new(vk_get_descriptor_set_layout_host_mapping_info_valve),
    );
    map.insert(
        1000001541,
        Box::new(vk_get_descriptor_set_host_mapping_valve),
    );
    map.insert(1000001542, Box::new(vk_create_micromap_ext));
    map.insert(1000001543, Box::new(vk_cmd_build_micromaps_ext));
    map.insert(1000001544, Box::new(vk_build_micromaps_ext));
    map.insert(1000001545, Box::new(vk_destroy_micromap_ext));
    map.insert(1000001546, Box::new(vk_cmd_copy_micromap_ext));
    map.insert(1000001547, Box::new(vk_copy_micromap_ext));
    map.insert(1000001548, Box::new(vk_cmd_copy_micromap_to_memory_ext));
    map.insert(1000001549, Box::new(vk_copy_micromap_to_memory_ext));
    map.insert(1000001550, Box::new(vk_cmd_copy_memory_to_micromap_ext));
    map.insert(1000001551, Box::new(vk_copy_memory_to_micromap_ext));
    map.insert(1000001552, Box::new(vk_cmd_write_micromaps_properties_ext));
    map.insert(1000001553, Box::new(vk_write_micromaps_properties_ext));
    map.insert(
        1000001554,
        Box::new(vk_get_device_micromap_compatibility_ext),
    );
    map.insert(1000001555, Box::new(vk_get_micromap_build_sizes_ext));
    map.insert(1000001556, Box::new(vk_get_shader_module_identifier_ext));
    map.insert(
        1000001557,
        Box::new(vk_get_shader_module_create_info_identifier_ext),
    );
    map.insert(1000001558, Box::new(vk_get_image_subresource_layout2_khr));
    map.insert(1000001559, Box::new(vk_get_pipeline_properties_ext));
    map.insert(1000001560, Box::new(vk_export_metal_objects_ext));
    map.insert(
        1000001561,
        Box::new(vk_get_framebuffer_tile_properties_qcom),
    );
    map.insert(
        1000001562,
        Box::new(vk_get_dynamic_rendering_tile_properties_qcom),
    );
    map.insert(
        1000001563,
        Box::new(vk_get_physical_device_optical_flow_image_formats_nv),
    );
    map.insert(1000001564, Box::new(vk_create_optical_flow_session_nv));
    map.insert(1000001565, Box::new(vk_destroy_optical_flow_session_nv));
    map.insert(1000001566, Box::new(vk_bind_optical_flow_session_image_nv));
    map.insert(1000001567, Box::new(vk_cmd_optical_flow_execute_nv));
    map.insert(1000001568, Box::new(vk_get_device_fault_info_ext));
    map.insert(1000001569, Box::new(vk_cmd_set_depth_bias2_ext));
    map.insert(1000001570, Box::new(vk_release_swapchain_images_ext));
    map.insert(
        1000001571,
        Box::new(vk_get_device_image_subresource_layout_khr),
    );
    map.insert(1000001572, Box::new(vk_map_memory2_khr));
    map.insert(1000001573, Box::new(vk_unmap_memory2_khr));
    map.insert(1000001574, Box::new(vk_create_shaders_ext));
    map.insert(1000001575, Box::new(vk_destroy_shader_ext));
    map.insert(1000001576, Box::new(vk_get_shader_binary_data_ext));
    map.insert(1000001577, Box::new(vk_cmd_bind_shaders_ext));
    map.insert(1000001578, Box::new(vk_get_screen_buffer_properties_qnx));
    map.insert(
        1000001579,
        Box::new(vk_get_physical_device_cooperative_matrix_properties_khr),
    );
    map.insert(
        1000001580,
        Box::new(vk_get_execution_graph_pipeline_scratch_size_amdx),
    );
    map.insert(
        1000001581,
        Box::new(vk_get_execution_graph_pipeline_node_index_amdx),
    );
    map.insert(
        1000001582,
        Box::new(vk_create_execution_graph_pipelines_amdx),
    );
    map.insert(
        1000001583,
        Box::new(vk_cmd_initialize_graph_scratch_memory_amdx),
    );
    map.insert(1000001584, Box::new(vk_cmd_dispatch_graph_amdx));
    map.insert(1000001585, Box::new(vk_cmd_dispatch_graph_indirect_amdx));
    map.insert(
        1000001586,
        Box::new(vk_cmd_dispatch_graph_indirect_count_amdx),
    );
    map.insert(1000001587, Box::new(vk_cmd_bind_descriptor_sets2_khr));
    map.insert(1000001588, Box::new(vk_cmd_push_constants2_khr));
    map.insert(1000001589, Box::new(vk_cmd_push_descriptor_set2_khr));
    map.insert(
        1000001590,
        Box::new(vk_cmd_push_descriptor_set_with_template2_khr),
    );
    map.insert(
        1000001591,
        Box::new(vk_cmd_set_descriptor_buffer_offsets2_ext),
    );
    map.insert(
        1000001592,
        Box::new(vk_cmd_bind_descriptor_buffer_embedded_samplers2_ext),
    );
    map.insert(1000001593, Box::new(vk_set_latency_sleep_mode_nv));
    map.insert(1000001594, Box::new(vk_latency_sleep_nv));
    map.insert(1000001595, Box::new(vk_set_latency_marker_nv));
    map.insert(1000001596, Box::new(vk_get_latency_timings_nv));
    map.insert(1000001597, Box::new(vk_queue_notify_out_of_band_nv));
    map.insert(
        1000001598,
        Box::new(vk_cmd_set_rendering_attachment_locations_khr),
    );
    map.insert(
        1000001599,
        Box::new(vk_cmd_set_rendering_input_attachment_indices_khr),
    );
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateInstance.html>"]
fn vk_create_instance(mut packet: Packet) {
    trace!("called vkCreateInstance");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyInstance.html>"]
fn vk_destroy_instance(mut packet: Packet) {
    trace!("called vkDestroyInstance");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkEnumeratePhysicalDevices.html>"]
fn vk_enumerate_physical_devices(mut packet: Packet) {
    trace!("called vkEnumeratePhysicalDevices");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDeviceProcAddr.html>"]
fn vk_get_device_proc_addr(mut packet: Packet) {
    trace!("called vkGetDeviceProcAddr");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetInstanceProcAddr.html>"]
fn vk_get_instance_proc_addr(mut packet: Packet) {
    trace!("called vkGetInstanceProcAddr");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceProperties.html>"]
fn vk_get_physical_device_properties(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceProperties");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceQueueFamilyProperties.html>"]
fn vk_get_physical_device_queue_family_properties(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceQueueFamilyProperties");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceMemoryProperties.html>"]
fn vk_get_physical_device_memory_properties(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceMemoryProperties");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceFeatures.html>"]
fn vk_get_physical_device_features(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceFeatures");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceFormatProperties.html>"]
fn vk_get_physical_device_format_properties(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceFormatProperties");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceImageFormatProperties.html>"]
fn vk_get_physical_device_image_format_properties(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceImageFormatProperties");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateDevice.html>"]
fn vk_create_device(mut packet: Packet) {
    trace!("called vkCreateDevice");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyDevice.html>"]
fn vk_destroy_device(mut packet: Packet) {
    trace!("called vkDestroyDevice");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkEnumerateInstanceVersion.html>"]
fn vk_enumerate_instance_version(mut packet: Packet) {
    trace!("called vkEnumerateInstanceVersion");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkEnumerateInstanceLayerProperties.html>"]
fn vk_enumerate_instance_layer_properties(mut packet: Packet) {
    trace!("called vkEnumerateInstanceLayerProperties");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkEnumerateInstanceExtensionProperties.html>"]
fn vk_enumerate_instance_extension_properties(mut packet: Packet) {
    trace!("called vkEnumerateInstanceExtensionProperties");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkEnumerateDeviceLayerProperties.html>"]
fn vk_enumerate_device_layer_properties(mut packet: Packet) {
    trace!("called vkEnumerateDeviceLayerProperties");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkEnumerateDeviceExtensionProperties.html>"]
fn vk_enumerate_device_extension_properties(mut packet: Packet) {
    trace!("called vkEnumerateDeviceExtensionProperties");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDeviceQueue.html>"]
fn vk_get_device_queue(mut packet: Packet) {
    trace!("called vkGetDeviceQueue");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkQueueSubmit.html>"]
fn vk_queue_submit(mut packet: Packet) {
    trace!("called vkQueueSubmit");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkQueueWaitIdle.html>"]
fn vk_queue_wait_idle(mut packet: Packet) {
    trace!("called vkQueueWaitIdle");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDeviceWaitIdle.html>"]
fn vk_device_wait_idle(mut packet: Packet) {
    trace!("called vkDeviceWaitIdle");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkAllocateMemory.html>"]
fn vk_allocate_memory(mut packet: Packet) {
    trace!("called vkAllocateMemory");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkFreeMemory.html>"]
fn vk_free_memory(mut packet: Packet) {
    trace!("called vkFreeMemory");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkMapMemory.html>"]
fn vk_map_memory(mut packet: Packet) {
    trace!("called vkMapMemory");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkUnmapMemory.html>"]
fn vk_unmap_memory(mut packet: Packet) {
    trace!("called vkUnmapMemory");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkFlushMappedMemoryRanges.html>"]
fn vk_flush_mapped_memory_ranges(mut packet: Packet) {
    trace!("called vkFlushMappedMemoryRanges");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkInvalidateMappedMemoryRanges.html>"]
fn vk_invalidate_mapped_memory_ranges(mut packet: Packet) {
    trace!("called vkInvalidateMappedMemoryRanges");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDeviceMemoryCommitment.html>"]
fn vk_get_device_memory_commitment(mut packet: Packet) {
    trace!("called vkGetDeviceMemoryCommitment");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetBufferMemoryRequirements.html>"]
fn vk_get_buffer_memory_requirements(mut packet: Packet) {
    trace!("called vkGetBufferMemoryRequirements");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkBindBufferMemory.html>"]
fn vk_bind_buffer_memory(mut packet: Packet) {
    trace!("called vkBindBufferMemory");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetImageMemoryRequirements.html>"]
fn vk_get_image_memory_requirements(mut packet: Packet) {
    trace!("called vkGetImageMemoryRequirements");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkBindImageMemory.html>"]
fn vk_bind_image_memory(mut packet: Packet) {
    trace!("called vkBindImageMemory");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetImageSparseMemoryRequirements.html>"]
fn vk_get_image_sparse_memory_requirements(mut packet: Packet) {
    trace!("called vkGetImageSparseMemoryRequirements");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceSparseImageFormatProperties.html>"]
fn vk_get_physical_device_sparse_image_format_properties(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceSparseImageFormatProperties");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkQueueBindSparse.html>"]
fn vk_queue_bind_sparse(mut packet: Packet) {
    trace!("called vkQueueBindSparse");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateFence.html>"]
fn vk_create_fence(mut packet: Packet) {
    trace!("called vkCreateFence");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyFence.html>"]
fn vk_destroy_fence(mut packet: Packet) {
    trace!("called vkDestroyFence");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkResetFences.html>"]
fn vk_reset_fences(mut packet: Packet) {
    trace!("called vkResetFences");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetFenceStatus.html>"]
fn vk_get_fence_status(mut packet: Packet) {
    trace!("called vkGetFenceStatus");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkWaitForFences.html>"]
fn vk_wait_for_fences(mut packet: Packet) {
    trace!("called vkWaitForFences");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateSemaphore.html>"]
fn vk_create_semaphore(mut packet: Packet) {
    trace!("called vkCreateSemaphore");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroySemaphore.html>"]
fn vk_destroy_semaphore(mut packet: Packet) {
    trace!("called vkDestroySemaphore");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateEvent.html>"]
fn vk_create_event(mut packet: Packet) {
    trace!("called vkCreateEvent");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyEvent.html>"]
fn vk_destroy_event(mut packet: Packet) {
    trace!("called vkDestroyEvent");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetEventStatus.html>"]
fn vk_get_event_status(mut packet: Packet) {
    trace!("called vkGetEventStatus");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkSetEvent.html>"]
fn vk_set_event(mut packet: Packet) {
    trace!("called vkSetEvent");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkResetEvent.html>"]
fn vk_reset_event(mut packet: Packet) {
    trace!("called vkResetEvent");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateQueryPool.html>"]
fn vk_create_query_pool(mut packet: Packet) {
    trace!("called vkCreateQueryPool");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyQueryPool.html>"]
fn vk_destroy_query_pool(mut packet: Packet) {
    trace!("called vkDestroyQueryPool");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetQueryPoolResults.html>"]
fn vk_get_query_pool_results(mut packet: Packet) {
    trace!("called vkGetQueryPoolResults");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkResetQueryPool.html>"]
fn vk_reset_query_pool(mut packet: Packet) {
    trace!("called vkResetQueryPool");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateBuffer.html>"]
fn vk_create_buffer(mut packet: Packet) {
    trace!("called vkCreateBuffer");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyBuffer.html>"]
fn vk_destroy_buffer(mut packet: Packet) {
    trace!("called vkDestroyBuffer");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateBufferView.html>"]
fn vk_create_buffer_view(mut packet: Packet) {
    trace!("called vkCreateBufferView");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyBufferView.html>"]
fn vk_destroy_buffer_view(mut packet: Packet) {
    trace!("called vkDestroyBufferView");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateImage.html>"]
fn vk_create_image(mut packet: Packet) {
    trace!("called vkCreateImage");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyImage.html>"]
fn vk_destroy_image(mut packet: Packet) {
    trace!("called vkDestroyImage");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetImageSubresourceLayout.html>"]
fn vk_get_image_subresource_layout(mut packet: Packet) {
    trace!("called vkGetImageSubresourceLayout");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateImageView.html>"]
fn vk_create_image_view(mut packet: Packet) {
    trace!("called vkCreateImageView");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyImageView.html>"]
fn vk_destroy_image_view(mut packet: Packet) {
    trace!("called vkDestroyImageView");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateShaderModule.html>"]
fn vk_create_shader_module(mut packet: Packet) {
    trace!("called vkCreateShaderModule");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyShaderModule.html>"]
fn vk_destroy_shader_module(mut packet: Packet) {
    trace!("called vkDestroyShaderModule");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreatePipelineCache.html>"]
fn vk_create_pipeline_cache(mut packet: Packet) {
    trace!("called vkCreatePipelineCache");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyPipelineCache.html>"]
fn vk_destroy_pipeline_cache(mut packet: Packet) {
    trace!("called vkDestroyPipelineCache");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPipelineCacheData.html>"]
fn vk_get_pipeline_cache_data(mut packet: Packet) {
    trace!("called vkGetPipelineCacheData");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkMergePipelineCaches.html>"]
fn vk_merge_pipeline_caches(mut packet: Packet) {
    trace!("called vkMergePipelineCaches");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateGraphicsPipelines.html>"]
fn vk_create_graphics_pipelines(mut packet: Packet) {
    trace!("called vkCreateGraphicsPipelines");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateComputePipelines.html>"]
fn vk_create_compute_pipelines(mut packet: Packet) {
    trace!("called vkCreateComputePipelines");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI.html>"]
fn vk_get_device_subpass_shading_max_workgroup_size_huawei(mut packet: Packet) {
    trace!("called vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyPipeline.html>"]
fn vk_destroy_pipeline(mut packet: Packet) {
    trace!("called vkDestroyPipeline");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreatePipelineLayout.html>"]
fn vk_create_pipeline_layout(mut packet: Packet) {
    trace!("called vkCreatePipelineLayout");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyPipelineLayout.html>"]
fn vk_destroy_pipeline_layout(mut packet: Packet) {
    trace!("called vkDestroyPipelineLayout");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateSampler.html>"]
fn vk_create_sampler(mut packet: Packet) {
    trace!("called vkCreateSampler");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroySampler.html>"]
fn vk_destroy_sampler(mut packet: Packet) {
    trace!("called vkDestroySampler");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateDescriptorSetLayout.html>"]
fn vk_create_descriptor_set_layout(mut packet: Packet) {
    trace!("called vkCreateDescriptorSetLayout");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyDescriptorSetLayout.html>"]
fn vk_destroy_descriptor_set_layout(mut packet: Packet) {
    trace!("called vkDestroyDescriptorSetLayout");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateDescriptorPool.html>"]
fn vk_create_descriptor_pool(mut packet: Packet) {
    trace!("called vkCreateDescriptorPool");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyDescriptorPool.html>"]
fn vk_destroy_descriptor_pool(mut packet: Packet) {
    trace!("called vkDestroyDescriptorPool");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkResetDescriptorPool.html>"]
fn vk_reset_descriptor_pool(mut packet: Packet) {
    trace!("called vkResetDescriptorPool");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkAllocateDescriptorSets.html>"]
fn vk_allocate_descriptor_sets(mut packet: Packet) {
    trace!("called vkAllocateDescriptorSets");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkFreeDescriptorSets.html>"]
fn vk_free_descriptor_sets(mut packet: Packet) {
    trace!("called vkFreeDescriptorSets");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkUpdateDescriptorSets.html>"]
fn vk_update_descriptor_sets(mut packet: Packet) {
    trace!("called vkUpdateDescriptorSets");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateFramebuffer.html>"]
fn vk_create_framebuffer(mut packet: Packet) {
    trace!("called vkCreateFramebuffer");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyFramebuffer.html>"]
fn vk_destroy_framebuffer(mut packet: Packet) {
    trace!("called vkDestroyFramebuffer");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateRenderPass.html>"]
fn vk_create_render_pass(mut packet: Packet) {
    trace!("called vkCreateRenderPass");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyRenderPass.html>"]
fn vk_destroy_render_pass(mut packet: Packet) {
    trace!("called vkDestroyRenderPass");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetRenderAreaGranularity.html>"]
fn vk_get_render_area_granularity(mut packet: Packet) {
    trace!("called vkGetRenderAreaGranularity");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetRenderingAreaGranularityKHR.html>"]
fn vk_get_rendering_area_granularity_khr(mut packet: Packet) {
    trace!("called vkGetRenderingAreaGranularityKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateCommandPool.html>"]
fn vk_create_command_pool(mut packet: Packet) {
    trace!("called vkCreateCommandPool");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyCommandPool.html>"]
fn vk_destroy_command_pool(mut packet: Packet) {
    trace!("called vkDestroyCommandPool");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkResetCommandPool.html>"]
fn vk_reset_command_pool(mut packet: Packet) {
    trace!("called vkResetCommandPool");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkAllocateCommandBuffers.html>"]
fn vk_allocate_command_buffers(mut packet: Packet) {
    trace!("called vkAllocateCommandBuffers");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkFreeCommandBuffers.html>"]
fn vk_free_command_buffers(mut packet: Packet) {
    trace!("called vkFreeCommandBuffers");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkBeginCommandBuffer.html>"]
fn vk_begin_command_buffer(mut packet: Packet) {
    trace!("called vkBeginCommandBuffer");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkEndCommandBuffer.html>"]
fn vk_end_command_buffer(mut packet: Packet) {
    trace!("called vkEndCommandBuffer");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkResetCommandBuffer.html>"]
fn vk_reset_command_buffer(mut packet: Packet) {
    trace!("called vkResetCommandBuffer");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBindPipeline.html>"]
fn vk_cmd_bind_pipeline(mut packet: Packet) {
    trace!("called vkCmdBindPipeline");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetAttachmentFeedbackLoopEnableEXT.html>"]
fn vk_cmd_set_attachment_feedback_loop_enable_ext(mut packet: Packet) {
    trace!("called vkCmdSetAttachmentFeedbackLoopEnableEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetViewport.html>"]
fn vk_cmd_set_viewport(mut packet: Packet) {
    trace!("called vkCmdSetViewport");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetScissor.html>"]
fn vk_cmd_set_scissor(mut packet: Packet) {
    trace!("called vkCmdSetScissor");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetLineWidth.html>"]
fn vk_cmd_set_line_width(mut packet: Packet) {
    trace!("called vkCmdSetLineWidth");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetDepthBias.html>"]
fn vk_cmd_set_depth_bias(mut packet: Packet) {
    trace!("called vkCmdSetDepthBias");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetBlendConstants.html>"]
fn vk_cmd_set_blend_constants(mut packet: Packet) {
    trace!("called vkCmdSetBlendConstants");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetDepthBounds.html>"]
fn vk_cmd_set_depth_bounds(mut packet: Packet) {
    trace!("called vkCmdSetDepthBounds");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetStencilCompareMask.html>"]
fn vk_cmd_set_stencil_compare_mask(mut packet: Packet) {
    trace!("called vkCmdSetStencilCompareMask");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetStencilWriteMask.html>"]
fn vk_cmd_set_stencil_write_mask(mut packet: Packet) {
    trace!("called vkCmdSetStencilWriteMask");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetStencilReference.html>"]
fn vk_cmd_set_stencil_reference(mut packet: Packet) {
    trace!("called vkCmdSetStencilReference");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBindDescriptorSets.html>"]
fn vk_cmd_bind_descriptor_sets(mut packet: Packet) {
    trace!("called vkCmdBindDescriptorSets");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBindIndexBuffer.html>"]
fn vk_cmd_bind_index_buffer(mut packet: Packet) {
    trace!("called vkCmdBindIndexBuffer");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBindVertexBuffers.html>"]
fn vk_cmd_bind_vertex_buffers(mut packet: Packet) {
    trace!("called vkCmdBindVertexBuffers");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDraw.html>"]
fn vk_cmd_draw(mut packet: Packet) {
    trace!("called vkCmdDraw");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDrawIndexed.html>"]
fn vk_cmd_draw_indexed(mut packet: Packet) {
    trace!("called vkCmdDrawIndexed");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDrawMultiEXT.html>"]
fn vk_cmd_draw_multi_ext(mut packet: Packet) {
    trace!("called vkCmdDrawMultiEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDrawMultiIndexedEXT.html>"]
fn vk_cmd_draw_multi_indexed_ext(mut packet: Packet) {
    trace!("called vkCmdDrawMultiIndexedEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDrawIndirect.html>"]
fn vk_cmd_draw_indirect(mut packet: Packet) {
    trace!("called vkCmdDrawIndirect");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDrawIndexedIndirect.html>"]
fn vk_cmd_draw_indexed_indirect(mut packet: Packet) {
    trace!("called vkCmdDrawIndexedIndirect");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDispatch.html>"]
fn vk_cmd_dispatch(mut packet: Packet) {
    trace!("called vkCmdDispatch");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDispatchIndirect.html>"]
fn vk_cmd_dispatch_indirect(mut packet: Packet) {
    trace!("called vkCmdDispatchIndirect");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSubpassShadingHUAWEI.html>"]
fn vk_cmd_subpass_shading_huawei(mut packet: Packet) {
    trace!("called vkCmdSubpassShadingHUAWEI");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDrawClusterHUAWEI.html>"]
fn vk_cmd_draw_cluster_huawei(mut packet: Packet) {
    trace!("called vkCmdDrawClusterHUAWEI");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDrawClusterIndirectHUAWEI.html>"]
fn vk_cmd_draw_cluster_indirect_huawei(mut packet: Packet) {
    trace!("called vkCmdDrawClusterIndirectHUAWEI");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdUpdatePipelineIndirectBufferNV.html>"]
fn vk_cmd_update_pipeline_indirect_buffer_nv(mut packet: Packet) {
    trace!("called vkCmdUpdatePipelineIndirectBufferNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCopyBuffer.html>"]
fn vk_cmd_copy_buffer(mut packet: Packet) {
    trace!("called vkCmdCopyBuffer");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCopyImage.html>"]
fn vk_cmd_copy_image(mut packet: Packet) {
    trace!("called vkCmdCopyImage");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBlitImage.html>"]
fn vk_cmd_blit_image(mut packet: Packet) {
    trace!("called vkCmdBlitImage");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCopyBufferToImage.html>"]
fn vk_cmd_copy_buffer_to_image(mut packet: Packet) {
    trace!("called vkCmdCopyBufferToImage");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCopyImageToBuffer.html>"]
fn vk_cmd_copy_image_to_buffer(mut packet: Packet) {
    trace!("called vkCmdCopyImageToBuffer");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCopyMemoryIndirectNV.html>"]
fn vk_cmd_copy_memory_indirect_nv(mut packet: Packet) {
    trace!("called vkCmdCopyMemoryIndirectNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCopyMemoryToImageIndirectNV.html>"]
fn vk_cmd_copy_memory_to_image_indirect_nv(mut packet: Packet) {
    trace!("called vkCmdCopyMemoryToImageIndirectNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdUpdateBuffer.html>"]
fn vk_cmd_update_buffer(mut packet: Packet) {
    trace!("called vkCmdUpdateBuffer");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdFillBuffer.html>"]
fn vk_cmd_fill_buffer(mut packet: Packet) {
    trace!("called vkCmdFillBuffer");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdClearColorImage.html>"]
fn vk_cmd_clear_color_image(mut packet: Packet) {
    trace!("called vkCmdClearColorImage");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdClearDepthStencilImage.html>"]
fn vk_cmd_clear_depth_stencil_image(mut packet: Packet) {
    trace!("called vkCmdClearDepthStencilImage");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdClearAttachments.html>"]
fn vk_cmd_clear_attachments(mut packet: Packet) {
    trace!("called vkCmdClearAttachments");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdResolveImage.html>"]
fn vk_cmd_resolve_image(mut packet: Packet) {
    trace!("called vkCmdResolveImage");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetEvent.html>"]
fn vk_cmd_set_event(mut packet: Packet) {
    trace!("called vkCmdSetEvent");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdResetEvent.html>"]
fn vk_cmd_reset_event(mut packet: Packet) {
    trace!("called vkCmdResetEvent");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdWaitEvents.html>"]
fn vk_cmd_wait_events(mut packet: Packet) {
    trace!("called vkCmdWaitEvents");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdPipelineBarrier.html>"]
fn vk_cmd_pipeline_barrier(mut packet: Packet) {
    trace!("called vkCmdPipelineBarrier");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBeginQuery.html>"]
fn vk_cmd_begin_query(mut packet: Packet) {
    trace!("called vkCmdBeginQuery");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdEndQuery.html>"]
fn vk_cmd_end_query(mut packet: Packet) {
    trace!("called vkCmdEndQuery");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBeginConditionalRenderingEXT.html>"]
fn vk_cmd_begin_conditional_rendering_ext(mut packet: Packet) {
    trace!("called vkCmdBeginConditionalRenderingEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdEndConditionalRenderingEXT.html>"]
fn vk_cmd_end_conditional_rendering_ext(mut packet: Packet) {
    trace!("called vkCmdEndConditionalRenderingEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdResetQueryPool.html>"]
fn vk_cmd_reset_query_pool(mut packet: Packet) {
    trace!("called vkCmdResetQueryPool");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdWriteTimestamp.html>"]
fn vk_cmd_write_timestamp(mut packet: Packet) {
    trace!("called vkCmdWriteTimestamp");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCopyQueryPoolResults.html>"]
fn vk_cmd_copy_query_pool_results(mut packet: Packet) {
    trace!("called vkCmdCopyQueryPoolResults");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdPushConstants.html>"]
fn vk_cmd_push_constants(mut packet: Packet) {
    trace!("called vkCmdPushConstants");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBeginRenderPass.html>"]
fn vk_cmd_begin_render_pass(mut packet: Packet) {
    trace!("called vkCmdBeginRenderPass");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdNextSubpass.html>"]
fn vk_cmd_next_subpass(mut packet: Packet) {
    trace!("called vkCmdNextSubpass");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdEndRenderPass.html>"]
fn vk_cmd_end_render_pass(mut packet: Packet) {
    trace!("called vkCmdEndRenderPass");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdExecuteCommands.html>"]
fn vk_cmd_execute_commands(mut packet: Packet) {
    trace!("called vkCmdExecuteCommands");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateAndroidSurfaceKHR.html>"]
fn vk_create_android_surface_khr(mut packet: Packet) {
    trace!("called vkCreateAndroidSurfaceKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceDisplayPropertiesKHR.html>"]
fn vk_get_physical_device_display_properties_khr(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceDisplayPropertiesKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceDisplayPlanePropertiesKHR.html>"]
fn vk_get_physical_device_display_plane_properties_khr(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceDisplayPlanePropertiesKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDisplayPlaneSupportedDisplaysKHR.html>"]
fn vk_get_display_plane_supported_displays_khr(mut packet: Packet) {
    trace!("called vkGetDisplayPlaneSupportedDisplaysKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDisplayModePropertiesKHR.html>"]
fn vk_get_display_mode_properties_khr(mut packet: Packet) {
    trace!("called vkGetDisplayModePropertiesKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateDisplayModeKHR.html>"]
fn vk_create_display_mode_khr(mut packet: Packet) {
    trace!("called vkCreateDisplayModeKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDisplayPlaneCapabilitiesKHR.html>"]
fn vk_get_display_plane_capabilities_khr(mut packet: Packet) {
    trace!("called vkGetDisplayPlaneCapabilitiesKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateDisplayPlaneSurfaceKHR.html>"]
fn vk_create_display_plane_surface_khr(mut packet: Packet) {
    trace!("called vkCreateDisplayPlaneSurfaceKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateSharedSwapchainsKHR.html>"]
fn vk_create_shared_swapchains_khr(mut packet: Packet) {
    trace!("called vkCreateSharedSwapchainsKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroySurfaceKHR.html>"]
fn vk_destroy_surface_khr(mut packet: Packet) {
    trace!("called vkDestroySurfaceKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceSurfaceSupportKHR.html>"]
fn vk_get_physical_device_surface_support_khr(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceSurfaceSupportKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceSurfaceCapabilitiesKHR.html>"]
fn vk_get_physical_device_surface_capabilities_khr(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceSurfaceCapabilitiesKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceSurfaceFormatsKHR.html>"]
fn vk_get_physical_device_surface_formats_khr(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceSurfaceFormatsKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceSurfacePresentModesKHR.html>"]
fn vk_get_physical_device_surface_present_modes_khr(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceSurfacePresentModesKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateSwapchainKHR.html>"]
fn vk_create_swapchain_khr(mut packet: Packet) {
    trace!("called vkCreateSwapchainKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroySwapchainKHR.html>"]
fn vk_destroy_swapchain_khr(mut packet: Packet) {
    trace!("called vkDestroySwapchainKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetSwapchainImagesKHR.html>"]
fn vk_get_swapchain_images_khr(mut packet: Packet) {
    trace!("called vkGetSwapchainImagesKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkAcquireNextImageKHR.html>"]
fn vk_acquire_next_image_khr(mut packet: Packet) {
    trace!("called vkAcquireNextImageKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkQueuePresentKHR.html>"]
fn vk_queue_present_khr(mut packet: Packet) {
    trace!("called vkQueuePresentKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateViSurfaceNN.html>"]
fn vk_create_vi_surface_nn(mut packet: Packet) {
    trace!("called vkCreateViSurfaceNN");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateWaylandSurfaceKHR.html>"]
fn vk_create_wayland_surface_khr(mut packet: Packet) {
    trace!("called vkCreateWaylandSurfaceKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceWaylandPresentationSupportKHR.html>"]
fn vk_get_physical_device_wayland_presentation_support_khr(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceWaylandPresentationSupportKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateWin32SurfaceKHR.html>"]
fn vk_create_win32_surface_khr(mut packet: Packet) {
    trace!("called vkCreateWin32SurfaceKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceWin32PresentationSupportKHR.html>"]
fn vk_get_physical_device_win32_presentation_support_khr(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceWin32PresentationSupportKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateXlibSurfaceKHR.html>"]
fn vk_create_xlib_surface_khr(mut packet: Packet) {
    trace!("called vkCreateXlibSurfaceKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceXlibPresentationSupportKHR.html>"]
fn vk_get_physical_device_xlib_presentation_support_khr(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceXlibPresentationSupportKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateXcbSurfaceKHR.html>"]
fn vk_create_xcb_surface_khr(mut packet: Packet) {
    trace!("called vkCreateXcbSurfaceKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceXcbPresentationSupportKHR.html>"]
fn vk_get_physical_device_xcb_presentation_support_khr(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceXcbPresentationSupportKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateDirectFBSurfaceEXT.html>"]
fn vk_create_direct_fbsurface_ext(mut packet: Packet) {
    trace!("called vkCreateDirectFBSurfaceEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceDirectFBPresentationSupportEXT.html>"]
fn vk_get_physical_device_direct_fbpresentation_support_ext(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceDirectFBPresentationSupportEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateImagePipeSurfaceFUCHSIA.html>"]
fn vk_create_image_pipe_surface_fuchsia(mut packet: Packet) {
    trace!("called vkCreateImagePipeSurfaceFUCHSIA");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateStreamDescriptorSurfaceGGP.html>"]
fn vk_create_stream_descriptor_surface_ggp(mut packet: Packet) {
    trace!("called vkCreateStreamDescriptorSurfaceGGP");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateScreenSurfaceQNX.html>"]
fn vk_create_screen_surface_qnx(mut packet: Packet) {
    trace!("called vkCreateScreenSurfaceQNX");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceScreenPresentationSupportQNX.html>"]
fn vk_get_physical_device_screen_presentation_support_qnx(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceScreenPresentationSupportQNX");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateDebugReportCallbackEXT.html>"]
fn vk_create_debug_report_callback_ext(mut packet: Packet) {
    trace!("called vkCreateDebugReportCallbackEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyDebugReportCallbackEXT.html>"]
fn vk_destroy_debug_report_callback_ext(mut packet: Packet) {
    trace!("called vkDestroyDebugReportCallbackEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDebugReportMessageEXT.html>"]
fn vk_debug_report_message_ext(mut packet: Packet) {
    trace!("called vkDebugReportMessageEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDebugMarkerSetObjectNameEXT.html>"]
fn vk_debug_marker_set_object_name_ext(mut packet: Packet) {
    trace!("called vkDebugMarkerSetObjectNameEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDebugMarkerSetObjectTagEXT.html>"]
fn vk_debug_marker_set_object_tag_ext(mut packet: Packet) {
    trace!("called vkDebugMarkerSetObjectTagEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDebugMarkerBeginEXT.html>"]
fn vk_cmd_debug_marker_begin_ext(mut packet: Packet) {
    trace!("called vkCmdDebugMarkerBeginEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDebugMarkerEndEXT.html>"]
fn vk_cmd_debug_marker_end_ext(mut packet: Packet) {
    trace!("called vkCmdDebugMarkerEndEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDebugMarkerInsertEXT.html>"]
fn vk_cmd_debug_marker_insert_ext(mut packet: Packet) {
    trace!("called vkCmdDebugMarkerInsertEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceExternalImageFormatPropertiesNV.html>"]
fn vk_get_physical_device_external_image_format_properties_nv(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceExternalImageFormatPropertiesNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetMemoryWin32HandleNV.html>"]
fn vk_get_memory_win32_handle_nv(mut packet: Packet) {
    trace!("called vkGetMemoryWin32HandleNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdExecuteGeneratedCommandsNV.html>"]
fn vk_cmd_execute_generated_commands_nv(mut packet: Packet) {
    trace!("called vkCmdExecuteGeneratedCommandsNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdPreprocessGeneratedCommandsNV.html>"]
fn vk_cmd_preprocess_generated_commands_nv(mut packet: Packet) {
    trace!("called vkCmdPreprocessGeneratedCommandsNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBindPipelineShaderGroupNV.html>"]
fn vk_cmd_bind_pipeline_shader_group_nv(mut packet: Packet) {
    trace!("called vkCmdBindPipelineShaderGroupNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetGeneratedCommandsMemoryRequirementsNV.html>"]
fn vk_get_generated_commands_memory_requirements_nv(mut packet: Packet) {
    trace!("called vkGetGeneratedCommandsMemoryRequirementsNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateIndirectCommandsLayoutNV.html>"]
fn vk_create_indirect_commands_layout_nv(mut packet: Packet) {
    trace!("called vkCreateIndirectCommandsLayoutNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyIndirectCommandsLayoutNV.html>"]
fn vk_destroy_indirect_commands_layout_nv(mut packet: Packet) {
    trace!("called vkDestroyIndirectCommandsLayoutNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceFeatures2.html>"]
fn vk_get_physical_device_features2(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceFeatures2");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceProperties2.html>"]
fn vk_get_physical_device_properties2(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceProperties2");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceFormatProperties2.html>"]
fn vk_get_physical_device_format_properties2(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceFormatProperties2");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceImageFormatProperties2.html>"]
fn vk_get_physical_device_image_format_properties2(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceImageFormatProperties2");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceQueueFamilyProperties2.html>"]
fn vk_get_physical_device_queue_family_properties2(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceQueueFamilyProperties2");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceMemoryProperties2.html>"]
fn vk_get_physical_device_memory_properties2(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceMemoryProperties2");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceSparseImageFormatProperties2.html>"]
fn vk_get_physical_device_sparse_image_format_properties2(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceSparseImageFormatProperties2");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdPushDescriptorSetKHR.html>"]
fn vk_cmd_push_descriptor_set_khr(mut packet: Packet) {
    trace!("called vkCmdPushDescriptorSetKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkTrimCommandPool.html>"]
fn vk_trim_command_pool(mut packet: Packet) {
    trace!("called vkTrimCommandPool");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceExternalBufferProperties.html>"]
fn vk_get_physical_device_external_buffer_properties(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceExternalBufferProperties");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetMemoryWin32HandleKHR.html>"]
fn vk_get_memory_win32_handle_khr(mut packet: Packet) {
    trace!("called vkGetMemoryWin32HandleKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetMemoryWin32HandlePropertiesKHR.html>"]
fn vk_get_memory_win32_handle_properties_khr(mut packet: Packet) {
    trace!("called vkGetMemoryWin32HandlePropertiesKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetMemoryFdKHR.html>"]
fn vk_get_memory_fd_khr(mut packet: Packet) {
    trace!("called vkGetMemoryFdKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetMemoryFdPropertiesKHR.html>"]
fn vk_get_memory_fd_properties_khr(mut packet: Packet) {
    trace!("called vkGetMemoryFdPropertiesKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetMemoryZirconHandleFUCHSIA.html>"]
fn vk_get_memory_zircon_handle_fuchsia(mut packet: Packet) {
    trace!("called vkGetMemoryZirconHandleFUCHSIA");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetMemoryZirconHandlePropertiesFUCHSIA.html>"]
fn vk_get_memory_zircon_handle_properties_fuchsia(mut packet: Packet) {
    trace!("called vkGetMemoryZirconHandlePropertiesFUCHSIA");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetMemoryRemoteAddressNV.html>"]
fn vk_get_memory_remote_address_nv(mut packet: Packet) {
    trace!("called vkGetMemoryRemoteAddressNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceExternalSemaphoreProperties.html>"]
fn vk_get_physical_device_external_semaphore_properties(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceExternalSemaphoreProperties");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetSemaphoreWin32HandleKHR.html>"]
fn vk_get_semaphore_win32_handle_khr(mut packet: Packet) {
    trace!("called vkGetSemaphoreWin32HandleKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkImportSemaphoreWin32HandleKHR.html>"]
fn vk_import_semaphore_win32_handle_khr(mut packet: Packet) {
    trace!("called vkImportSemaphoreWin32HandleKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetSemaphoreFdKHR.html>"]
fn vk_get_semaphore_fd_khr(mut packet: Packet) {
    trace!("called vkGetSemaphoreFdKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkImportSemaphoreFdKHR.html>"]
fn vk_import_semaphore_fd_khr(mut packet: Packet) {
    trace!("called vkImportSemaphoreFdKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetSemaphoreZirconHandleFUCHSIA.html>"]
fn vk_get_semaphore_zircon_handle_fuchsia(mut packet: Packet) {
    trace!("called vkGetSemaphoreZirconHandleFUCHSIA");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkImportSemaphoreZirconHandleFUCHSIA.html>"]
fn vk_import_semaphore_zircon_handle_fuchsia(mut packet: Packet) {
    trace!("called vkImportSemaphoreZirconHandleFUCHSIA");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceExternalFenceProperties.html>"]
fn vk_get_physical_device_external_fence_properties(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceExternalFenceProperties");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetFenceWin32HandleKHR.html>"]
fn vk_get_fence_win32_handle_khr(mut packet: Packet) {
    trace!("called vkGetFenceWin32HandleKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkImportFenceWin32HandleKHR.html>"]
fn vk_import_fence_win32_handle_khr(mut packet: Packet) {
    trace!("called vkImportFenceWin32HandleKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetFenceFdKHR.html>"]
fn vk_get_fence_fd_khr(mut packet: Packet) {
    trace!("called vkGetFenceFdKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkImportFenceFdKHR.html>"]
fn vk_import_fence_fd_khr(mut packet: Packet) {
    trace!("called vkImportFenceFdKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkReleaseDisplayEXT.html>"]
fn vk_release_display_ext(mut packet: Packet) {
    trace!("called vkReleaseDisplayEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkAcquireXlibDisplayEXT.html>"]
fn vk_acquire_xlib_display_ext(mut packet: Packet) {
    trace!("called vkAcquireXlibDisplayEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetRandROutputDisplayEXT.html>"]
fn vk_get_rand_routput_display_ext(mut packet: Packet) {
    trace!("called vkGetRandROutputDisplayEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkAcquireWinrtDisplayNV.html>"]
fn vk_acquire_winrt_display_nv(mut packet: Packet) {
    trace!("called vkAcquireWinrtDisplayNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetWinrtDisplayNV.html>"]
fn vk_get_winrt_display_nv(mut packet: Packet) {
    trace!("called vkGetWinrtDisplayNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDisplayPowerControlEXT.html>"]
fn vk_display_power_control_ext(mut packet: Packet) {
    trace!("called vkDisplayPowerControlEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkRegisterDeviceEventEXT.html>"]
fn vk_register_device_event_ext(mut packet: Packet) {
    trace!("called vkRegisterDeviceEventEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkRegisterDisplayEventEXT.html>"]
fn vk_register_display_event_ext(mut packet: Packet) {
    trace!("called vkRegisterDisplayEventEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetSwapchainCounterEXT.html>"]
fn vk_get_swapchain_counter_ext(mut packet: Packet) {
    trace!("called vkGetSwapchainCounterEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceSurfaceCapabilities2EXT.html>"]
fn vk_get_physical_device_surface_capabilities2_ext(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceSurfaceCapabilities2EXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkEnumeratePhysicalDeviceGroups.html>"]
fn vk_enumerate_physical_device_groups(mut packet: Packet) {
    trace!("called vkEnumeratePhysicalDeviceGroups");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDeviceGroupPeerMemoryFeatures.html>"]
fn vk_get_device_group_peer_memory_features(mut packet: Packet) {
    trace!("called vkGetDeviceGroupPeerMemoryFeatures");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkBindBufferMemory2.html>"]
fn vk_bind_buffer_memory2(mut packet: Packet) {
    trace!("called vkBindBufferMemory2");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkBindImageMemory2.html>"]
fn vk_bind_image_memory2(mut packet: Packet) {
    trace!("called vkBindImageMemory2");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetDeviceMask.html>"]
fn vk_cmd_set_device_mask(mut packet: Packet) {
    trace!("called vkCmdSetDeviceMask");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDeviceGroupPresentCapabilitiesKHR.html>"]
fn vk_get_device_group_present_capabilities_khr(mut packet: Packet) {
    trace!("called vkGetDeviceGroupPresentCapabilitiesKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDeviceGroupSurfacePresentModesKHR.html>"]
fn vk_get_device_group_surface_present_modes_khr(mut packet: Packet) {
    trace!("called vkGetDeviceGroupSurfacePresentModesKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkAcquireNextImage2KHR.html>"]
fn vk_acquire_next_image2_khr(mut packet: Packet) {
    trace!("called vkAcquireNextImage2KHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDispatchBase.html>"]
fn vk_cmd_dispatch_base(mut packet: Packet) {
    trace!("called vkCmdDispatchBase");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDevicePresentRectanglesKHR.html>"]
fn vk_get_physical_device_present_rectangles_khr(mut packet: Packet) {
    trace!("called vkGetPhysicalDevicePresentRectanglesKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateDescriptorUpdateTemplate.html>"]
fn vk_create_descriptor_update_template(mut packet: Packet) {
    trace!("called vkCreateDescriptorUpdateTemplate");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyDescriptorUpdateTemplate.html>"]
fn vk_destroy_descriptor_update_template(mut packet: Packet) {
    trace!("called vkDestroyDescriptorUpdateTemplate");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkUpdateDescriptorSetWithTemplate.html>"]
fn vk_update_descriptor_set_with_template(mut packet: Packet) {
    trace!("called vkUpdateDescriptorSetWithTemplate");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdPushDescriptorSetWithTemplateKHR.html>"]
fn vk_cmd_push_descriptor_set_with_template_khr(mut packet: Packet) {
    trace!("called vkCmdPushDescriptorSetWithTemplateKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkSetHdrMetadataEXT.html>"]
fn vk_set_hdr_metadata_ext(mut packet: Packet) {
    trace!("called vkSetHdrMetadataEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetSwapchainStatusKHR.html>"]
fn vk_get_swapchain_status_khr(mut packet: Packet) {
    trace!("called vkGetSwapchainStatusKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetRefreshCycleDurationGOOGLE.html>"]
fn vk_get_refresh_cycle_duration_google(mut packet: Packet) {
    trace!("called vkGetRefreshCycleDurationGOOGLE");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPastPresentationTimingGOOGLE.html>"]
fn vk_get_past_presentation_timing_google(mut packet: Packet) {
    trace!("called vkGetPastPresentationTimingGOOGLE");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateIOSSurfaceMVK.html>"]
fn vk_create_iossurface_mvk(mut packet: Packet) {
    trace!("called vkCreateIOSSurfaceMVK");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateMacOSSurfaceMVK.html>"]
fn vk_create_mac_ossurface_mvk(mut packet: Packet) {
    trace!("called vkCreateMacOSSurfaceMVK");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateMetalSurfaceEXT.html>"]
fn vk_create_metal_surface_ext(mut packet: Packet) {
    trace!("called vkCreateMetalSurfaceEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetViewportWScalingNV.html>"]
fn vk_cmd_set_viewport_wscaling_nv(mut packet: Packet) {
    trace!("called vkCmdSetViewportWScalingNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetDiscardRectangleEXT.html>"]
fn vk_cmd_set_discard_rectangle_ext(mut packet: Packet) {
    trace!("called vkCmdSetDiscardRectangleEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetDiscardRectangleEnableEXT.html>"]
fn vk_cmd_set_discard_rectangle_enable_ext(mut packet: Packet) {
    trace!("called vkCmdSetDiscardRectangleEnableEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetDiscardRectangleModeEXT.html>"]
fn vk_cmd_set_discard_rectangle_mode_ext(mut packet: Packet) {
    trace!("called vkCmdSetDiscardRectangleModeEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetSampleLocationsEXT.html>"]
fn vk_cmd_set_sample_locations_ext(mut packet: Packet) {
    trace!("called vkCmdSetSampleLocationsEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceMultisamplePropertiesEXT.html>"]
fn vk_get_physical_device_multisample_properties_ext(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceMultisamplePropertiesEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceSurfaceCapabilities2KHR.html>"]
fn vk_get_physical_device_surface_capabilities2_khr(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceSurfaceCapabilities2KHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceSurfaceFormats2KHR.html>"]
fn vk_get_physical_device_surface_formats2_khr(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceSurfaceFormats2KHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceDisplayProperties2KHR.html>"]
fn vk_get_physical_device_display_properties2_khr(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceDisplayProperties2KHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceDisplayPlaneProperties2KHR.html>"]
fn vk_get_physical_device_display_plane_properties2_khr(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceDisplayPlaneProperties2KHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDisplayModeProperties2KHR.html>"]
fn vk_get_display_mode_properties2_khr(mut packet: Packet) {
    trace!("called vkGetDisplayModeProperties2KHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDisplayPlaneCapabilities2KHR.html>"]
fn vk_get_display_plane_capabilities2_khr(mut packet: Packet) {
    trace!("called vkGetDisplayPlaneCapabilities2KHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetBufferMemoryRequirements2.html>"]
fn vk_get_buffer_memory_requirements2(mut packet: Packet) {
    trace!("called vkGetBufferMemoryRequirements2");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetImageMemoryRequirements2.html>"]
fn vk_get_image_memory_requirements2(mut packet: Packet) {
    trace!("called vkGetImageMemoryRequirements2");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetImageSparseMemoryRequirements2.html>"]
fn vk_get_image_sparse_memory_requirements2(mut packet: Packet) {
    trace!("called vkGetImageSparseMemoryRequirements2");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDeviceBufferMemoryRequirements.html>"]
fn vk_get_device_buffer_memory_requirements(mut packet: Packet) {
    trace!("called vkGetDeviceBufferMemoryRequirements");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDeviceImageMemoryRequirements.html>"]
fn vk_get_device_image_memory_requirements(mut packet: Packet) {
    trace!("called vkGetDeviceImageMemoryRequirements");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDeviceImageSparseMemoryRequirements.html>"]
fn vk_get_device_image_sparse_memory_requirements(mut packet: Packet) {
    trace!("called vkGetDeviceImageSparseMemoryRequirements");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateSamplerYcbcrConversion.html>"]
fn vk_create_sampler_ycbcr_conversion(mut packet: Packet) {
    trace!("called vkCreateSamplerYcbcrConversion");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroySamplerYcbcrConversion.html>"]
fn vk_destroy_sampler_ycbcr_conversion(mut packet: Packet) {
    trace!("called vkDestroySamplerYcbcrConversion");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDeviceQueue2.html>"]
fn vk_get_device_queue2(mut packet: Packet) {
    trace!("called vkGetDeviceQueue2");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateValidationCacheEXT.html>"]
fn vk_create_validation_cache_ext(mut packet: Packet) {
    trace!("called vkCreateValidationCacheEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyValidationCacheEXT.html>"]
fn vk_destroy_validation_cache_ext(mut packet: Packet) {
    trace!("called vkDestroyValidationCacheEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetValidationCacheDataEXT.html>"]
fn vk_get_validation_cache_data_ext(mut packet: Packet) {
    trace!("called vkGetValidationCacheDataEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkMergeValidationCachesEXT.html>"]
fn vk_merge_validation_caches_ext(mut packet: Packet) {
    trace!("called vkMergeValidationCachesEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDescriptorSetLayoutSupport.html>"]
fn vk_get_descriptor_set_layout_support(mut packet: Packet) {
    trace!("called vkGetDescriptorSetLayoutSupport");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetSwapchainGrallocUsageANDROID.html>"]
fn vk_get_swapchain_gralloc_usage_android(mut packet: Packet) {
    trace!("called vkGetSwapchainGrallocUsageANDROID");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetSwapchainGrallocUsage2ANDROID.html>"]
fn vk_get_swapchain_gralloc_usage2_android(mut packet: Packet) {
    trace!("called vkGetSwapchainGrallocUsage2ANDROID");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkAcquireImageANDROID.html>"]
fn vk_acquire_image_android(mut packet: Packet) {
    trace!("called vkAcquireImageANDROID");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkQueueSignalReleaseImageANDROID.html>"]
fn vk_queue_signal_release_image_android(mut packet: Packet) {
    trace!("called vkQueueSignalReleaseImageANDROID");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetShaderInfoAMD.html>"]
fn vk_get_shader_info_amd(mut packet: Packet) {
    trace!("called vkGetShaderInfoAMD");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkSetLocalDimmingAMD.html>"]
fn vk_set_local_dimming_amd(mut packet: Packet) {
    trace!("called vkSetLocalDimmingAMD");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceCalibrateableTimeDomainsKHR.html>"]
fn vk_get_physical_device_calibrateable_time_domains_khr(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceCalibrateableTimeDomainsKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetCalibratedTimestampsKHR.html>"]
fn vk_get_calibrated_timestamps_khr(mut packet: Packet) {
    trace!("called vkGetCalibratedTimestampsKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkSetDebugUtilsObjectNameEXT.html>"]
fn vk_set_debug_utils_object_name_ext(mut packet: Packet) {
    trace!("called vkSetDebugUtilsObjectNameEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkSetDebugUtilsObjectTagEXT.html>"]
fn vk_set_debug_utils_object_tag_ext(mut packet: Packet) {
    trace!("called vkSetDebugUtilsObjectTagEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkQueueBeginDebugUtilsLabelEXT.html>"]
fn vk_queue_begin_debug_utils_label_ext(mut packet: Packet) {
    trace!("called vkQueueBeginDebugUtilsLabelEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkQueueEndDebugUtilsLabelEXT.html>"]
fn vk_queue_end_debug_utils_label_ext(mut packet: Packet) {
    trace!("called vkQueueEndDebugUtilsLabelEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkQueueInsertDebugUtilsLabelEXT.html>"]
fn vk_queue_insert_debug_utils_label_ext(mut packet: Packet) {
    trace!("called vkQueueInsertDebugUtilsLabelEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBeginDebugUtilsLabelEXT.html>"]
fn vk_cmd_begin_debug_utils_label_ext(mut packet: Packet) {
    trace!("called vkCmdBeginDebugUtilsLabelEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdEndDebugUtilsLabelEXT.html>"]
fn vk_cmd_end_debug_utils_label_ext(mut packet: Packet) {
    trace!("called vkCmdEndDebugUtilsLabelEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdInsertDebugUtilsLabelEXT.html>"]
fn vk_cmd_insert_debug_utils_label_ext(mut packet: Packet) {
    trace!("called vkCmdInsertDebugUtilsLabelEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateDebugUtilsMessengerEXT.html>"]
fn vk_create_debug_utils_messenger_ext(mut packet: Packet) {
    trace!("called vkCreateDebugUtilsMessengerEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyDebugUtilsMessengerEXT.html>"]
fn vk_destroy_debug_utils_messenger_ext(mut packet: Packet) {
    trace!("called vkDestroyDebugUtilsMessengerEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkSubmitDebugUtilsMessageEXT.html>"]
fn vk_submit_debug_utils_message_ext(mut packet: Packet) {
    trace!("called vkSubmitDebugUtilsMessageEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetMemoryHostPointerPropertiesEXT.html>"]
fn vk_get_memory_host_pointer_properties_ext(mut packet: Packet) {
    trace!("called vkGetMemoryHostPointerPropertiesEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdWriteBufferMarkerAMD.html>"]
fn vk_cmd_write_buffer_marker_amd(mut packet: Packet) {
    trace!("called vkCmdWriteBufferMarkerAMD");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateRenderPass2.html>"]
fn vk_create_render_pass2(mut packet: Packet) {
    trace!("called vkCreateRenderPass2");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBeginRenderPass2.html>"]
fn vk_cmd_begin_render_pass2(mut packet: Packet) {
    trace!("called vkCmdBeginRenderPass2");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdNextSubpass2.html>"]
fn vk_cmd_next_subpass2(mut packet: Packet) {
    trace!("called vkCmdNextSubpass2");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdEndRenderPass2.html>"]
fn vk_cmd_end_render_pass2(mut packet: Packet) {
    trace!("called vkCmdEndRenderPass2");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetSemaphoreCounterValue.html>"]
fn vk_get_semaphore_counter_value(mut packet: Packet) {
    trace!("called vkGetSemaphoreCounterValue");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkWaitSemaphores.html>"]
fn vk_wait_semaphores(mut packet: Packet) {
    trace!("called vkWaitSemaphores");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkSignalSemaphore.html>"]
fn vk_signal_semaphore(mut packet: Packet) {
    trace!("called vkSignalSemaphore");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetAndroidHardwareBufferPropertiesANDROID.html>"]
fn vk_get_android_hardware_buffer_properties_android(mut packet: Packet) {
    trace!("called vkGetAndroidHardwareBufferPropertiesANDROID");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetMemoryAndroidHardwareBufferANDROID.html>"]
fn vk_get_memory_android_hardware_buffer_android(mut packet: Packet) {
    trace!("called vkGetMemoryAndroidHardwareBufferANDROID");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDrawIndirectCount.html>"]
fn vk_cmd_draw_indirect_count(mut packet: Packet) {
    trace!("called vkCmdDrawIndirectCount");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDrawIndexedIndirectCount.html>"]
fn vk_cmd_draw_indexed_indirect_count(mut packet: Packet) {
    trace!("called vkCmdDrawIndexedIndirectCount");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetCheckpointNV.html>"]
fn vk_cmd_set_checkpoint_nv(mut packet: Packet) {
    trace!("called vkCmdSetCheckpointNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetQueueCheckpointDataNV.html>"]
fn vk_get_queue_checkpoint_data_nv(mut packet: Packet) {
    trace!("called vkGetQueueCheckpointDataNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBindTransformFeedbackBuffersEXT.html>"]
fn vk_cmd_bind_transform_feedback_buffers_ext(mut packet: Packet) {
    trace!("called vkCmdBindTransformFeedbackBuffersEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBeginTransformFeedbackEXT.html>"]
fn vk_cmd_begin_transform_feedback_ext(mut packet: Packet) {
    trace!("called vkCmdBeginTransformFeedbackEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdEndTransformFeedbackEXT.html>"]
fn vk_cmd_end_transform_feedback_ext(mut packet: Packet) {
    trace!("called vkCmdEndTransformFeedbackEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBeginQueryIndexedEXT.html>"]
fn vk_cmd_begin_query_indexed_ext(mut packet: Packet) {
    trace!("called vkCmdBeginQueryIndexedEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdEndQueryIndexedEXT.html>"]
fn vk_cmd_end_query_indexed_ext(mut packet: Packet) {
    trace!("called vkCmdEndQueryIndexedEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDrawIndirectByteCountEXT.html>"]
fn vk_cmd_draw_indirect_byte_count_ext(mut packet: Packet) {
    trace!("called vkCmdDrawIndirectByteCountEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetExclusiveScissorNV.html>"]
fn vk_cmd_set_exclusive_scissor_nv(mut packet: Packet) {
    trace!("called vkCmdSetExclusiveScissorNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetExclusiveScissorEnableNV.html>"]
fn vk_cmd_set_exclusive_scissor_enable_nv(mut packet: Packet) {
    trace!("called vkCmdSetExclusiveScissorEnableNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBindShadingRateImageNV.html>"]
fn vk_cmd_bind_shading_rate_image_nv(mut packet: Packet) {
    trace!("called vkCmdBindShadingRateImageNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetViewportShadingRatePaletteNV.html>"]
fn vk_cmd_set_viewport_shading_rate_palette_nv(mut packet: Packet) {
    trace!("called vkCmdSetViewportShadingRatePaletteNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetCoarseSampleOrderNV.html>"]
fn vk_cmd_set_coarse_sample_order_nv(mut packet: Packet) {
    trace!("called vkCmdSetCoarseSampleOrderNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDrawMeshTasksNV.html>"]
fn vk_cmd_draw_mesh_tasks_nv(mut packet: Packet) {
    trace!("called vkCmdDrawMeshTasksNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDrawMeshTasksIndirectNV.html>"]
fn vk_cmd_draw_mesh_tasks_indirect_nv(mut packet: Packet) {
    trace!("called vkCmdDrawMeshTasksIndirectNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDrawMeshTasksIndirectCountNV.html>"]
fn vk_cmd_draw_mesh_tasks_indirect_count_nv(mut packet: Packet) {
    trace!("called vkCmdDrawMeshTasksIndirectCountNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDrawMeshTasksEXT.html>"]
fn vk_cmd_draw_mesh_tasks_ext(mut packet: Packet) {
    trace!("called vkCmdDrawMeshTasksEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDrawMeshTasksIndirectEXT.html>"]
fn vk_cmd_draw_mesh_tasks_indirect_ext(mut packet: Packet) {
    trace!("called vkCmdDrawMeshTasksIndirectEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDrawMeshTasksIndirectCountEXT.html>"]
fn vk_cmd_draw_mesh_tasks_indirect_count_ext(mut packet: Packet) {
    trace!("called vkCmdDrawMeshTasksIndirectCountEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCompileDeferredNV.html>"]
fn vk_compile_deferred_nv(mut packet: Packet) {
    trace!("called vkCompileDeferredNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateAccelerationStructureNV.html>"]
fn vk_create_acceleration_structure_nv(mut packet: Packet) {
    trace!("called vkCreateAccelerationStructureNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBindInvocationMaskHUAWEI.html>"]
fn vk_cmd_bind_invocation_mask_huawei(mut packet: Packet) {
    trace!("called vkCmdBindInvocationMaskHUAWEI");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyAccelerationStructureKHR.html>"]
fn vk_destroy_acceleration_structure_khr(mut packet: Packet) {
    trace!("called vkDestroyAccelerationStructureKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyAccelerationStructureNV.html>"]
fn vk_destroy_acceleration_structure_nv(mut packet: Packet) {
    trace!("called vkDestroyAccelerationStructureNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetAccelerationStructureMemoryRequirementsNV.html>"]
fn vk_get_acceleration_structure_memory_requirements_nv(mut packet: Packet) {
    trace!("called vkGetAccelerationStructureMemoryRequirementsNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkBindAccelerationStructureMemoryNV.html>"]
fn vk_bind_acceleration_structure_memory_nv(mut packet: Packet) {
    trace!("called vkBindAccelerationStructureMemoryNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCopyAccelerationStructureNV.html>"]
fn vk_cmd_copy_acceleration_structure_nv(mut packet: Packet) {
    trace!("called vkCmdCopyAccelerationStructureNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCopyAccelerationStructureKHR.html>"]
fn vk_cmd_copy_acceleration_structure_khr(mut packet: Packet) {
    trace!("called vkCmdCopyAccelerationStructureKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCopyAccelerationStructureKHR.html>"]
fn vk_copy_acceleration_structure_khr(mut packet: Packet) {
    trace!("called vkCopyAccelerationStructureKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCopyAccelerationStructureToMemoryKHR.html>"]
fn vk_cmd_copy_acceleration_structure_to_memory_khr(mut packet: Packet) {
    trace!("called vkCmdCopyAccelerationStructureToMemoryKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCopyAccelerationStructureToMemoryKHR.html>"]
fn vk_copy_acceleration_structure_to_memory_khr(mut packet: Packet) {
    trace!("called vkCopyAccelerationStructureToMemoryKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCopyMemoryToAccelerationStructureKHR.html>"]
fn vk_cmd_copy_memory_to_acceleration_structure_khr(mut packet: Packet) {
    trace!("called vkCmdCopyMemoryToAccelerationStructureKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCopyMemoryToAccelerationStructureKHR.html>"]
fn vk_copy_memory_to_acceleration_structure_khr(mut packet: Packet) {
    trace!("called vkCopyMemoryToAccelerationStructureKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdWriteAccelerationStructuresPropertiesKHR.html>"]
fn vk_cmd_write_acceleration_structures_properties_khr(mut packet: Packet) {
    trace!("called vkCmdWriteAccelerationStructuresPropertiesKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdWriteAccelerationStructuresPropertiesNV.html>"]
fn vk_cmd_write_acceleration_structures_properties_nv(mut packet: Packet) {
    trace!("called vkCmdWriteAccelerationStructuresPropertiesNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBuildAccelerationStructureNV.html>"]
fn vk_cmd_build_acceleration_structure_nv(mut packet: Packet) {
    trace!("called vkCmdBuildAccelerationStructureNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkWriteAccelerationStructuresPropertiesKHR.html>"]
fn vk_write_acceleration_structures_properties_khr(mut packet: Packet) {
    trace!("called vkWriteAccelerationStructuresPropertiesKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdTraceRaysKHR.html>"]
fn vk_cmd_trace_rays_khr(mut packet: Packet) {
    trace!("called vkCmdTraceRaysKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdTraceRaysNV.html>"]
fn vk_cmd_trace_rays_nv(mut packet: Packet) {
    trace!("called vkCmdTraceRaysNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetRayTracingShaderGroupHandlesKHR.html>"]
fn vk_get_ray_tracing_shader_group_handles_khr(mut packet: Packet) {
    trace!("called vkGetRayTracingShaderGroupHandlesKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetRayTracingCaptureReplayShaderGroupHandlesKHR.html>"]
fn vk_get_ray_tracing_capture_replay_shader_group_handles_khr(mut packet: Packet) {
    trace!("called vkGetRayTracingCaptureReplayShaderGroupHandlesKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetAccelerationStructureHandleNV.html>"]
fn vk_get_acceleration_structure_handle_nv(mut packet: Packet) {
    trace!("called vkGetAccelerationStructureHandleNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateRayTracingPipelinesNV.html>"]
fn vk_create_ray_tracing_pipelines_nv(mut packet: Packet) {
    trace!("called vkCreateRayTracingPipelinesNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateRayTracingPipelinesKHR.html>"]
fn vk_create_ray_tracing_pipelines_khr(mut packet: Packet) {
    trace!("called vkCreateRayTracingPipelinesKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceCooperativeMatrixPropertiesNV.html>"]
fn vk_get_physical_device_cooperative_matrix_properties_nv(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceCooperativeMatrixPropertiesNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdTraceRaysIndirectKHR.html>"]
fn vk_cmd_trace_rays_indirect_khr(mut packet: Packet) {
    trace!("called vkCmdTraceRaysIndirectKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdTraceRaysIndirect2KHR.html>"]
fn vk_cmd_trace_rays_indirect2_khr(mut packet: Packet) {
    trace!("called vkCmdTraceRaysIndirect2KHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDeviceAccelerationStructureCompatibilityKHR.html>"]
fn vk_get_device_acceleration_structure_compatibility_khr(mut packet: Packet) {
    trace!("called vkGetDeviceAccelerationStructureCompatibilityKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetRayTracingShaderGroupStackSizeKHR.html>"]
fn vk_get_ray_tracing_shader_group_stack_size_khr(mut packet: Packet) {
    trace!("called vkGetRayTracingShaderGroupStackSizeKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetRayTracingPipelineStackSizeKHR.html>"]
fn vk_cmd_set_ray_tracing_pipeline_stack_size_khr(mut packet: Packet) {
    trace!("called vkCmdSetRayTracingPipelineStackSizeKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetImageViewHandleNVX.html>"]
fn vk_get_image_view_handle_nvx(mut packet: Packet) {
    trace!("called vkGetImageViewHandleNVX");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetImageViewAddressNVX.html>"]
fn vk_get_image_view_address_nvx(mut packet: Packet) {
    trace!("called vkGetImageViewAddressNVX");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceSurfacePresentModes2EXT.html>"]
fn vk_get_physical_device_surface_present_modes2_ext(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceSurfacePresentModes2EXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDeviceGroupSurfacePresentModes2EXT.html>"]
fn vk_get_device_group_surface_present_modes2_ext(mut packet: Packet) {
    trace!("called vkGetDeviceGroupSurfacePresentModes2EXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkAcquireFullScreenExclusiveModeEXT.html>"]
fn vk_acquire_full_screen_exclusive_mode_ext(mut packet: Packet) {
    trace!("called vkAcquireFullScreenExclusiveModeEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkReleaseFullScreenExclusiveModeEXT.html>"]
fn vk_release_full_screen_exclusive_mode_ext(mut packet: Packet) {
    trace!("called vkReleaseFullScreenExclusiveModeEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR.html>"]
fn vk_enumerate_physical_device_queue_family_performance_query_counters_khr(mut packet: Packet) {
    trace!("called vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR.html>"]
fn vk_get_physical_device_queue_family_performance_query_passes_khr(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkAcquireProfilingLockKHR.html>"]
fn vk_acquire_profiling_lock_khr(mut packet: Packet) {
    trace!("called vkAcquireProfilingLockKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkReleaseProfilingLockKHR.html>"]
fn vk_release_profiling_lock_khr(mut packet: Packet) {
    trace!("called vkReleaseProfilingLockKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetImageDrmFormatModifierPropertiesEXT.html>"]
fn vk_get_image_drm_format_modifier_properties_ext(mut packet: Packet) {
    trace!("called vkGetImageDrmFormatModifierPropertiesEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetBufferOpaqueCaptureAddress.html>"]
fn vk_get_buffer_opaque_capture_address(mut packet: Packet) {
    trace!("called vkGetBufferOpaqueCaptureAddress");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetBufferDeviceAddress.html>"]
fn vk_get_buffer_device_address(mut packet: Packet) {
    trace!("called vkGetBufferDeviceAddress");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateHeadlessSurfaceEXT.html>"]
fn vk_create_headless_surface_ext(mut packet: Packet) {
    trace!("called vkCreateHeadlessSurfaceEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV.html>"]
fn vk_get_physical_device_supported_framebuffer_mixed_samples_combinations_nv(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkInitializePerformanceApiINTEL.html>"]
fn vk_initialize_performance_api_intel(mut packet: Packet) {
    trace!("called vkInitializePerformanceApiINTEL");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkUninitializePerformanceApiINTEL.html>"]
fn vk_uninitialize_performance_api_intel(mut packet: Packet) {
    trace!("called vkUninitializePerformanceApiINTEL");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetPerformanceMarkerINTEL.html>"]
fn vk_cmd_set_performance_marker_intel(mut packet: Packet) {
    trace!("called vkCmdSetPerformanceMarkerINTEL");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetPerformanceStreamMarkerINTEL.html>"]
fn vk_cmd_set_performance_stream_marker_intel(mut packet: Packet) {
    trace!("called vkCmdSetPerformanceStreamMarkerINTEL");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetPerformanceOverrideINTEL.html>"]
fn vk_cmd_set_performance_override_intel(mut packet: Packet) {
    trace!("called vkCmdSetPerformanceOverrideINTEL");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkAcquirePerformanceConfigurationINTEL.html>"]
fn vk_acquire_performance_configuration_intel(mut packet: Packet) {
    trace!("called vkAcquirePerformanceConfigurationINTEL");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkReleasePerformanceConfigurationINTEL.html>"]
fn vk_release_performance_configuration_intel(mut packet: Packet) {
    trace!("called vkReleasePerformanceConfigurationINTEL");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkQueueSetPerformanceConfigurationINTEL.html>"]
fn vk_queue_set_performance_configuration_intel(mut packet: Packet) {
    trace!("called vkQueueSetPerformanceConfigurationINTEL");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPerformanceParameterINTEL.html>"]
fn vk_get_performance_parameter_intel(mut packet: Packet) {
    trace!("called vkGetPerformanceParameterINTEL");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDeviceMemoryOpaqueCaptureAddress.html>"]
fn vk_get_device_memory_opaque_capture_address(mut packet: Packet) {
    trace!("called vkGetDeviceMemoryOpaqueCaptureAddress");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPipelineExecutablePropertiesKHR.html>"]
fn vk_get_pipeline_executable_properties_khr(mut packet: Packet) {
    trace!("called vkGetPipelineExecutablePropertiesKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPipelineExecutableStatisticsKHR.html>"]
fn vk_get_pipeline_executable_statistics_khr(mut packet: Packet) {
    trace!("called vkGetPipelineExecutableStatisticsKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPipelineExecutableInternalRepresentationsKHR.html>"]
fn vk_get_pipeline_executable_internal_representations_khr(mut packet: Packet) {
    trace!("called vkGetPipelineExecutableInternalRepresentationsKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetLineStippleKHR.html>"]
fn vk_cmd_set_line_stipple_khr(mut packet: Packet) {
    trace!("called vkCmdSetLineStippleKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceToolProperties.html>"]
fn vk_get_physical_device_tool_properties(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceToolProperties");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateAccelerationStructureKHR.html>"]
fn vk_create_acceleration_structure_khr(mut packet: Packet) {
    trace!("called vkCreateAccelerationStructureKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBuildAccelerationStructuresKHR.html>"]
fn vk_cmd_build_acceleration_structures_khr(mut packet: Packet) {
    trace!("called vkCmdBuildAccelerationStructuresKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBuildAccelerationStructuresIndirectKHR.html>"]
fn vk_cmd_build_acceleration_structures_indirect_khr(mut packet: Packet) {
    trace!("called vkCmdBuildAccelerationStructuresIndirectKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkBuildAccelerationStructuresKHR.html>"]
fn vk_build_acceleration_structures_khr(mut packet: Packet) {
    trace!("called vkBuildAccelerationStructuresKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetAccelerationStructureDeviceAddressKHR.html>"]
fn vk_get_acceleration_structure_device_address_khr(mut packet: Packet) {
    trace!("called vkGetAccelerationStructureDeviceAddressKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateDeferredOperationKHR.html>"]
fn vk_create_deferred_operation_khr(mut packet: Packet) {
    trace!("called vkCreateDeferredOperationKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyDeferredOperationKHR.html>"]
fn vk_destroy_deferred_operation_khr(mut packet: Packet) {
    trace!("called vkDestroyDeferredOperationKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDeferredOperationMaxConcurrencyKHR.html>"]
fn vk_get_deferred_operation_max_concurrency_khr(mut packet: Packet) {
    trace!("called vkGetDeferredOperationMaxConcurrencyKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDeferredOperationResultKHR.html>"]
fn vk_get_deferred_operation_result_khr(mut packet: Packet) {
    trace!("called vkGetDeferredOperationResultKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDeferredOperationJoinKHR.html>"]
fn vk_deferred_operation_join_khr(mut packet: Packet) {
    trace!("called vkDeferredOperationJoinKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPipelineIndirectMemoryRequirementsNV.html>"]
fn vk_get_pipeline_indirect_memory_requirements_nv(mut packet: Packet) {
    trace!("called vkGetPipelineIndirectMemoryRequirementsNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPipelineIndirectDeviceAddressNV.html>"]
fn vk_get_pipeline_indirect_device_address_nv(mut packet: Packet) {
    trace!("called vkGetPipelineIndirectDeviceAddressNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetCullMode.html>"]
fn vk_cmd_set_cull_mode(mut packet: Packet) {
    trace!("called vkCmdSetCullMode");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetFrontFace.html>"]
fn vk_cmd_set_front_face(mut packet: Packet) {
    trace!("called vkCmdSetFrontFace");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetPrimitiveTopology.html>"]
fn vk_cmd_set_primitive_topology(mut packet: Packet) {
    trace!("called vkCmdSetPrimitiveTopology");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetViewportWithCount.html>"]
fn vk_cmd_set_viewport_with_count(mut packet: Packet) {
    trace!("called vkCmdSetViewportWithCount");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetScissorWithCount.html>"]
fn vk_cmd_set_scissor_with_count(mut packet: Packet) {
    trace!("called vkCmdSetScissorWithCount");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBindIndexBuffer2KHR.html>"]
fn vk_cmd_bind_index_buffer2_khr(mut packet: Packet) {
    trace!("called vkCmdBindIndexBuffer2KHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBindVertexBuffers2.html>"]
fn vk_cmd_bind_vertex_buffers2(mut packet: Packet) {
    trace!("called vkCmdBindVertexBuffers2");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetDepthTestEnable.html>"]
fn vk_cmd_set_depth_test_enable(mut packet: Packet) {
    trace!("called vkCmdSetDepthTestEnable");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetDepthWriteEnable.html>"]
fn vk_cmd_set_depth_write_enable(mut packet: Packet) {
    trace!("called vkCmdSetDepthWriteEnable");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetDepthCompareOp.html>"]
fn vk_cmd_set_depth_compare_op(mut packet: Packet) {
    trace!("called vkCmdSetDepthCompareOp");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetDepthBoundsTestEnable.html>"]
fn vk_cmd_set_depth_bounds_test_enable(mut packet: Packet) {
    trace!("called vkCmdSetDepthBoundsTestEnable");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetStencilTestEnable.html>"]
fn vk_cmd_set_stencil_test_enable(mut packet: Packet) {
    trace!("called vkCmdSetStencilTestEnable");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetStencilOp.html>"]
fn vk_cmd_set_stencil_op(mut packet: Packet) {
    trace!("called vkCmdSetStencilOp");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetPatchControlPointsEXT.html>"]
fn vk_cmd_set_patch_control_points_ext(mut packet: Packet) {
    trace!("called vkCmdSetPatchControlPointsEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetRasterizerDiscardEnable.html>"]
fn vk_cmd_set_rasterizer_discard_enable(mut packet: Packet) {
    trace!("called vkCmdSetRasterizerDiscardEnable");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetDepthBiasEnable.html>"]
fn vk_cmd_set_depth_bias_enable(mut packet: Packet) {
    trace!("called vkCmdSetDepthBiasEnable");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetLogicOpEXT.html>"]
fn vk_cmd_set_logic_op_ext(mut packet: Packet) {
    trace!("called vkCmdSetLogicOpEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetPrimitiveRestartEnable.html>"]
fn vk_cmd_set_primitive_restart_enable(mut packet: Packet) {
    trace!("called vkCmdSetPrimitiveRestartEnable");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetTessellationDomainOriginEXT.html>"]
fn vk_cmd_set_tessellation_domain_origin_ext(mut packet: Packet) {
    trace!("called vkCmdSetTessellationDomainOriginEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetDepthClampEnableEXT.html>"]
fn vk_cmd_set_depth_clamp_enable_ext(mut packet: Packet) {
    trace!("called vkCmdSetDepthClampEnableEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetPolygonModeEXT.html>"]
fn vk_cmd_set_polygon_mode_ext(mut packet: Packet) {
    trace!("called vkCmdSetPolygonModeEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetRasterizationSamplesEXT.html>"]
fn vk_cmd_set_rasterization_samples_ext(mut packet: Packet) {
    trace!("called vkCmdSetRasterizationSamplesEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetSampleMaskEXT.html>"]
fn vk_cmd_set_sample_mask_ext(mut packet: Packet) {
    trace!("called vkCmdSetSampleMaskEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetAlphaToCoverageEnableEXT.html>"]
fn vk_cmd_set_alpha_to_coverage_enable_ext(mut packet: Packet) {
    trace!("called vkCmdSetAlphaToCoverageEnableEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetAlphaToOneEnableEXT.html>"]
fn vk_cmd_set_alpha_to_one_enable_ext(mut packet: Packet) {
    trace!("called vkCmdSetAlphaToOneEnableEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetLogicOpEnableEXT.html>"]
fn vk_cmd_set_logic_op_enable_ext(mut packet: Packet) {
    trace!("called vkCmdSetLogicOpEnableEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetColorBlendEnableEXT.html>"]
fn vk_cmd_set_color_blend_enable_ext(mut packet: Packet) {
    trace!("called vkCmdSetColorBlendEnableEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetColorBlendEquationEXT.html>"]
fn vk_cmd_set_color_blend_equation_ext(mut packet: Packet) {
    trace!("called vkCmdSetColorBlendEquationEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetColorWriteMaskEXT.html>"]
fn vk_cmd_set_color_write_mask_ext(mut packet: Packet) {
    trace!("called vkCmdSetColorWriteMaskEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetRasterizationStreamEXT.html>"]
fn vk_cmd_set_rasterization_stream_ext(mut packet: Packet) {
    trace!("called vkCmdSetRasterizationStreamEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetConservativeRasterizationModeEXT.html>"]
fn vk_cmd_set_conservative_rasterization_mode_ext(mut packet: Packet) {
    trace!("called vkCmdSetConservativeRasterizationModeEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetExtraPrimitiveOverestimationSizeEXT.html>"]
fn vk_cmd_set_extra_primitive_overestimation_size_ext(mut packet: Packet) {
    trace!("called vkCmdSetExtraPrimitiveOverestimationSizeEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetDepthClipEnableEXT.html>"]
fn vk_cmd_set_depth_clip_enable_ext(mut packet: Packet) {
    trace!("called vkCmdSetDepthClipEnableEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetSampleLocationsEnableEXT.html>"]
fn vk_cmd_set_sample_locations_enable_ext(mut packet: Packet) {
    trace!("called vkCmdSetSampleLocationsEnableEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetColorBlendAdvancedEXT.html>"]
fn vk_cmd_set_color_blend_advanced_ext(mut packet: Packet) {
    trace!("called vkCmdSetColorBlendAdvancedEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetProvokingVertexModeEXT.html>"]
fn vk_cmd_set_provoking_vertex_mode_ext(mut packet: Packet) {
    trace!("called vkCmdSetProvokingVertexModeEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetLineRasterizationModeEXT.html>"]
fn vk_cmd_set_line_rasterization_mode_ext(mut packet: Packet) {
    trace!("called vkCmdSetLineRasterizationModeEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetLineStippleEnableEXT.html>"]
fn vk_cmd_set_line_stipple_enable_ext(mut packet: Packet) {
    trace!("called vkCmdSetLineStippleEnableEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetDepthClipNegativeOneToOneEXT.html>"]
fn vk_cmd_set_depth_clip_negative_one_to_one_ext(mut packet: Packet) {
    trace!("called vkCmdSetDepthClipNegativeOneToOneEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetViewportWScalingEnableNV.html>"]
fn vk_cmd_set_viewport_wscaling_enable_nv(mut packet: Packet) {
    trace!("called vkCmdSetViewportWScalingEnableNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetViewportSwizzleNV.html>"]
fn vk_cmd_set_viewport_swizzle_nv(mut packet: Packet) {
    trace!("called vkCmdSetViewportSwizzleNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetCoverageToColorEnableNV.html>"]
fn vk_cmd_set_coverage_to_color_enable_nv(mut packet: Packet) {
    trace!("called vkCmdSetCoverageToColorEnableNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetCoverageToColorLocationNV.html>"]
fn vk_cmd_set_coverage_to_color_location_nv(mut packet: Packet) {
    trace!("called vkCmdSetCoverageToColorLocationNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetCoverageModulationModeNV.html>"]
fn vk_cmd_set_coverage_modulation_mode_nv(mut packet: Packet) {
    trace!("called vkCmdSetCoverageModulationModeNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetCoverageModulationTableEnableNV.html>"]
fn vk_cmd_set_coverage_modulation_table_enable_nv(mut packet: Packet) {
    trace!("called vkCmdSetCoverageModulationTableEnableNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetCoverageModulationTableNV.html>"]
fn vk_cmd_set_coverage_modulation_table_nv(mut packet: Packet) {
    trace!("called vkCmdSetCoverageModulationTableNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetShadingRateImageEnableNV.html>"]
fn vk_cmd_set_shading_rate_image_enable_nv(mut packet: Packet) {
    trace!("called vkCmdSetShadingRateImageEnableNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetCoverageReductionModeNV.html>"]
fn vk_cmd_set_coverage_reduction_mode_nv(mut packet: Packet) {
    trace!("called vkCmdSetCoverageReductionModeNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetRepresentativeFragmentTestEnableNV.html>"]
fn vk_cmd_set_representative_fragment_test_enable_nv(mut packet: Packet) {
    trace!("called vkCmdSetRepresentativeFragmentTestEnableNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreatePrivateDataSlot.html>"]
fn vk_create_private_data_slot(mut packet: Packet) {
    trace!("called vkCreatePrivateDataSlot");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyPrivateDataSlot.html>"]
fn vk_destroy_private_data_slot(mut packet: Packet) {
    trace!("called vkDestroyPrivateDataSlot");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkSetPrivateData.html>"]
fn vk_set_private_data(mut packet: Packet) {
    trace!("called vkSetPrivateData");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPrivateData.html>"]
fn vk_get_private_data(mut packet: Packet) {
    trace!("called vkGetPrivateData");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCopyBuffer2.html>"]
fn vk_cmd_copy_buffer2(mut packet: Packet) {
    trace!("called vkCmdCopyBuffer2");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCopyImage2.html>"]
fn vk_cmd_copy_image2(mut packet: Packet) {
    trace!("called vkCmdCopyImage2");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBlitImage2.html>"]
fn vk_cmd_blit_image2(mut packet: Packet) {
    trace!("called vkCmdBlitImage2");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCopyBufferToImage2.html>"]
fn vk_cmd_copy_buffer_to_image2(mut packet: Packet) {
    trace!("called vkCmdCopyBufferToImage2");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCopyImageToBuffer2.html>"]
fn vk_cmd_copy_image_to_buffer2(mut packet: Packet) {
    trace!("called vkCmdCopyImageToBuffer2");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdResolveImage2.html>"]
fn vk_cmd_resolve_image2(mut packet: Packet) {
    trace!("called vkCmdResolveImage2");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetFragmentShadingRateKHR.html>"]
fn vk_cmd_set_fragment_shading_rate_khr(mut packet: Packet) {
    trace!("called vkCmdSetFragmentShadingRateKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceFragmentShadingRatesKHR.html>"]
fn vk_get_physical_device_fragment_shading_rates_khr(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceFragmentShadingRatesKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetFragmentShadingRateEnumNV.html>"]
fn vk_cmd_set_fragment_shading_rate_enum_nv(mut packet: Packet) {
    trace!("called vkCmdSetFragmentShadingRateEnumNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetAccelerationStructureBuildSizesKHR.html>"]
fn vk_get_acceleration_structure_build_sizes_khr(mut packet: Packet) {
    trace!("called vkGetAccelerationStructureBuildSizesKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetVertexInputEXT.html>"]
fn vk_cmd_set_vertex_input_ext(mut packet: Packet) {
    trace!("called vkCmdSetVertexInputEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetColorWriteEnableEXT.html>"]
fn vk_cmd_set_color_write_enable_ext(mut packet: Packet) {
    trace!("called vkCmdSetColorWriteEnableEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetEvent2.html>"]
fn vk_cmd_set_event2(mut packet: Packet) {
    trace!("called vkCmdSetEvent2");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdResetEvent2.html>"]
fn vk_cmd_reset_event2(mut packet: Packet) {
    trace!("called vkCmdResetEvent2");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdWaitEvents2.html>"]
fn vk_cmd_wait_events2(mut packet: Packet) {
    trace!("called vkCmdWaitEvents2");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdPipelineBarrier2.html>"]
fn vk_cmd_pipeline_barrier2(mut packet: Packet) {
    trace!("called vkCmdPipelineBarrier2");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkQueueSubmit2.html>"]
fn vk_queue_submit2(mut packet: Packet) {
    trace!("called vkQueueSubmit2");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdWriteTimestamp2.html>"]
fn vk_cmd_write_timestamp2(mut packet: Packet) {
    trace!("called vkCmdWriteTimestamp2");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdWriteBufferMarker2AMD.html>"]
fn vk_cmd_write_buffer_marker2_amd(mut packet: Packet) {
    trace!("called vkCmdWriteBufferMarker2AMD");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetQueueCheckpointData2NV.html>"]
fn vk_get_queue_checkpoint_data2_nv(mut packet: Packet) {
    trace!("called vkGetQueueCheckpointData2NV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCopyMemoryToImageEXT.html>"]
fn vk_copy_memory_to_image_ext(mut packet: Packet) {
    trace!("called vkCopyMemoryToImageEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCopyImageToMemoryEXT.html>"]
fn vk_copy_image_to_memory_ext(mut packet: Packet) {
    trace!("called vkCopyImageToMemoryEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCopyImageToImageEXT.html>"]
fn vk_copy_image_to_image_ext(mut packet: Packet) {
    trace!("called vkCopyImageToImageEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkTransitionImageLayoutEXT.html>"]
fn vk_transition_image_layout_ext(mut packet: Packet) {
    trace!("called vkTransitionImageLayoutEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceVideoCapabilitiesKHR.html>"]
fn vk_get_physical_device_video_capabilities_khr(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceVideoCapabilitiesKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceVideoFormatPropertiesKHR.html>"]
fn vk_get_physical_device_video_format_properties_khr(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceVideoFormatPropertiesKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceVideoEncodeQualityLevelPropertiesKHR.html>"]
fn vk_get_physical_device_video_encode_quality_level_properties_khr(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceVideoEncodeQualityLevelPropertiesKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateVideoSessionKHR.html>"]
fn vk_create_video_session_khr(mut packet: Packet) {
    trace!("called vkCreateVideoSessionKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyVideoSessionKHR.html>"]
fn vk_destroy_video_session_khr(mut packet: Packet) {
    trace!("called vkDestroyVideoSessionKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateVideoSessionParametersKHR.html>"]
fn vk_create_video_session_parameters_khr(mut packet: Packet) {
    trace!("called vkCreateVideoSessionParametersKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkUpdateVideoSessionParametersKHR.html>"]
fn vk_update_video_session_parameters_khr(mut packet: Packet) {
    trace!("called vkUpdateVideoSessionParametersKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetEncodedVideoSessionParametersKHR.html>"]
fn vk_get_encoded_video_session_parameters_khr(mut packet: Packet) {
    trace!("called vkGetEncodedVideoSessionParametersKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyVideoSessionParametersKHR.html>"]
fn vk_destroy_video_session_parameters_khr(mut packet: Packet) {
    trace!("called vkDestroyVideoSessionParametersKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetVideoSessionMemoryRequirementsKHR.html>"]
fn vk_get_video_session_memory_requirements_khr(mut packet: Packet) {
    trace!("called vkGetVideoSessionMemoryRequirementsKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkBindVideoSessionMemoryKHR.html>"]
fn vk_bind_video_session_memory_khr(mut packet: Packet) {
    trace!("called vkBindVideoSessionMemoryKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDecodeVideoKHR.html>"]
fn vk_cmd_decode_video_khr(mut packet: Packet) {
    trace!("called vkCmdDecodeVideoKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBeginVideoCodingKHR.html>"]
fn vk_cmd_begin_video_coding_khr(mut packet: Packet) {
    trace!("called vkCmdBeginVideoCodingKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdControlVideoCodingKHR.html>"]
fn vk_cmd_control_video_coding_khr(mut packet: Packet) {
    trace!("called vkCmdControlVideoCodingKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdEndVideoCodingKHR.html>"]
fn vk_cmd_end_video_coding_khr(mut packet: Packet) {
    trace!("called vkCmdEndVideoCodingKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdEncodeVideoKHR.html>"]
fn vk_cmd_encode_video_khr(mut packet: Packet) {
    trace!("called vkCmdEncodeVideoKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDecompressMemoryNV.html>"]
fn vk_cmd_decompress_memory_nv(mut packet: Packet) {
    trace!("called vkCmdDecompressMemoryNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDecompressMemoryIndirectCountNV.html>"]
fn vk_cmd_decompress_memory_indirect_count_nv(mut packet: Packet) {
    trace!("called vkCmdDecompressMemoryIndirectCountNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateCuModuleNVX.html>"]
fn vk_create_cu_module_nvx(mut packet: Packet) {
    trace!("called vkCreateCuModuleNVX");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateCuFunctionNVX.html>"]
fn vk_create_cu_function_nvx(mut packet: Packet) {
    trace!("called vkCreateCuFunctionNVX");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyCuModuleNVX.html>"]
fn vk_destroy_cu_module_nvx(mut packet: Packet) {
    trace!("called vkDestroyCuModuleNVX");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyCuFunctionNVX.html>"]
fn vk_destroy_cu_function_nvx(mut packet: Packet) {
    trace!("called vkDestroyCuFunctionNVX");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCuLaunchKernelNVX.html>"]
fn vk_cmd_cu_launch_kernel_nvx(mut packet: Packet) {
    trace!("called vkCmdCuLaunchKernelNVX");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDescriptorSetLayoutSizeEXT.html>"]
fn vk_get_descriptor_set_layout_size_ext(mut packet: Packet) {
    trace!("called vkGetDescriptorSetLayoutSizeEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDescriptorSetLayoutBindingOffsetEXT.html>"]
fn vk_get_descriptor_set_layout_binding_offset_ext(mut packet: Packet) {
    trace!("called vkGetDescriptorSetLayoutBindingOffsetEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDescriptorEXT.html>"]
fn vk_get_descriptor_ext(mut packet: Packet) {
    trace!("called vkGetDescriptorEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBindDescriptorBuffersEXT.html>"]
fn vk_cmd_bind_descriptor_buffers_ext(mut packet: Packet) {
    trace!("called vkCmdBindDescriptorBuffersEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetDescriptorBufferOffsetsEXT.html>"]
fn vk_cmd_set_descriptor_buffer_offsets_ext(mut packet: Packet) {
    trace!("called vkCmdSetDescriptorBufferOffsetsEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBindDescriptorBufferEmbeddedSamplersEXT.html>"]
fn vk_cmd_bind_descriptor_buffer_embedded_samplers_ext(mut packet: Packet) {
    trace!("called vkCmdBindDescriptorBufferEmbeddedSamplersEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetBufferOpaqueCaptureDescriptorDataEXT.html>"]
fn vk_get_buffer_opaque_capture_descriptor_data_ext(mut packet: Packet) {
    trace!("called vkGetBufferOpaqueCaptureDescriptorDataEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetImageOpaqueCaptureDescriptorDataEXT.html>"]
fn vk_get_image_opaque_capture_descriptor_data_ext(mut packet: Packet) {
    trace!("called vkGetImageOpaqueCaptureDescriptorDataEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetImageViewOpaqueCaptureDescriptorDataEXT.html>"]
fn vk_get_image_view_opaque_capture_descriptor_data_ext(mut packet: Packet) {
    trace!("called vkGetImageViewOpaqueCaptureDescriptorDataEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetSamplerOpaqueCaptureDescriptorDataEXT.html>"]
fn vk_get_sampler_opaque_capture_descriptor_data_ext(mut packet: Packet) {
    trace!("called vkGetSamplerOpaqueCaptureDescriptorDataEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT.html>"]
fn vk_get_acceleration_structure_opaque_capture_descriptor_data_ext(mut packet: Packet) {
    trace!("called vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkSetDeviceMemoryPriorityEXT.html>"]
fn vk_set_device_memory_priority_ext(mut packet: Packet) {
    trace!("called vkSetDeviceMemoryPriorityEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkAcquireDrmDisplayEXT.html>"]
fn vk_acquire_drm_display_ext(mut packet: Packet) {
    trace!("called vkAcquireDrmDisplayEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDrmDisplayEXT.html>"]
fn vk_get_drm_display_ext(mut packet: Packet) {
    trace!("called vkGetDrmDisplayEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkWaitForPresentKHR.html>"]
fn vk_wait_for_present_khr(mut packet: Packet) {
    trace!("called vkWaitForPresentKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateBufferCollectionFUCHSIA.html>"]
fn vk_create_buffer_collection_fuchsia(mut packet: Packet) {
    trace!("called vkCreateBufferCollectionFUCHSIA");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkSetBufferCollectionBufferConstraintsFUCHSIA.html>"]
fn vk_set_buffer_collection_buffer_constraints_fuchsia(mut packet: Packet) {
    trace!("called vkSetBufferCollectionBufferConstraintsFUCHSIA");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkSetBufferCollectionImageConstraintsFUCHSIA.html>"]
fn vk_set_buffer_collection_image_constraints_fuchsia(mut packet: Packet) {
    trace!("called vkSetBufferCollectionImageConstraintsFUCHSIA");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyBufferCollectionFUCHSIA.html>"]
fn vk_destroy_buffer_collection_fuchsia(mut packet: Packet) {
    trace!("called vkDestroyBufferCollectionFUCHSIA");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetBufferCollectionPropertiesFUCHSIA.html>"]
fn vk_get_buffer_collection_properties_fuchsia(mut packet: Packet) {
    trace!("called vkGetBufferCollectionPropertiesFUCHSIA");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateCudaModuleNV.html>"]
fn vk_create_cuda_module_nv(mut packet: Packet) {
    trace!("called vkCreateCudaModuleNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetCudaModuleCacheNV.html>"]
fn vk_get_cuda_module_cache_nv(mut packet: Packet) {
    trace!("called vkGetCudaModuleCacheNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateCudaFunctionNV.html>"]
fn vk_create_cuda_function_nv(mut packet: Packet) {
    trace!("called vkCreateCudaFunctionNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyCudaModuleNV.html>"]
fn vk_destroy_cuda_module_nv(mut packet: Packet) {
    trace!("called vkDestroyCudaModuleNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyCudaFunctionNV.html>"]
fn vk_destroy_cuda_function_nv(mut packet: Packet) {
    trace!("called vkDestroyCudaFunctionNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCudaLaunchKernelNV.html>"]
fn vk_cmd_cuda_launch_kernel_nv(mut packet: Packet) {
    trace!("called vkCmdCudaLaunchKernelNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBeginRendering.html>"]
fn vk_cmd_begin_rendering(mut packet: Packet) {
    trace!("called vkCmdBeginRendering");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdEndRendering.html>"]
fn vk_cmd_end_rendering(mut packet: Packet) {
    trace!("called vkCmdEndRendering");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDescriptorSetLayoutHostMappingInfoVALVE.html>"]
fn vk_get_descriptor_set_layout_host_mapping_info_valve(mut packet: Packet) {
    trace!("called vkGetDescriptorSetLayoutHostMappingInfoVALVE");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDescriptorSetHostMappingVALVE.html>"]
fn vk_get_descriptor_set_host_mapping_valve(mut packet: Packet) {
    trace!("called vkGetDescriptorSetHostMappingVALVE");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateMicromapEXT.html>"]
fn vk_create_micromap_ext(mut packet: Packet) {
    trace!("called vkCreateMicromapEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBuildMicromapsEXT.html>"]
fn vk_cmd_build_micromaps_ext(mut packet: Packet) {
    trace!("called vkCmdBuildMicromapsEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkBuildMicromapsEXT.html>"]
fn vk_build_micromaps_ext(mut packet: Packet) {
    trace!("called vkBuildMicromapsEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyMicromapEXT.html>"]
fn vk_destroy_micromap_ext(mut packet: Packet) {
    trace!("called vkDestroyMicromapEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCopyMicromapEXT.html>"]
fn vk_cmd_copy_micromap_ext(mut packet: Packet) {
    trace!("called vkCmdCopyMicromapEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCopyMicromapEXT.html>"]
fn vk_copy_micromap_ext(mut packet: Packet) {
    trace!("called vkCopyMicromapEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCopyMicromapToMemoryEXT.html>"]
fn vk_cmd_copy_micromap_to_memory_ext(mut packet: Packet) {
    trace!("called vkCmdCopyMicromapToMemoryEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCopyMicromapToMemoryEXT.html>"]
fn vk_copy_micromap_to_memory_ext(mut packet: Packet) {
    trace!("called vkCopyMicromapToMemoryEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCopyMemoryToMicromapEXT.html>"]
fn vk_cmd_copy_memory_to_micromap_ext(mut packet: Packet) {
    trace!("called vkCmdCopyMemoryToMicromapEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCopyMemoryToMicromapEXT.html>"]
fn vk_copy_memory_to_micromap_ext(mut packet: Packet) {
    trace!("called vkCopyMemoryToMicromapEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdWriteMicromapsPropertiesEXT.html>"]
fn vk_cmd_write_micromaps_properties_ext(mut packet: Packet) {
    trace!("called vkCmdWriteMicromapsPropertiesEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkWriteMicromapsPropertiesEXT.html>"]
fn vk_write_micromaps_properties_ext(mut packet: Packet) {
    trace!("called vkWriteMicromapsPropertiesEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDeviceMicromapCompatibilityEXT.html>"]
fn vk_get_device_micromap_compatibility_ext(mut packet: Packet) {
    trace!("called vkGetDeviceMicromapCompatibilityEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetMicromapBuildSizesEXT.html>"]
fn vk_get_micromap_build_sizes_ext(mut packet: Packet) {
    trace!("called vkGetMicromapBuildSizesEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetShaderModuleIdentifierEXT.html>"]
fn vk_get_shader_module_identifier_ext(mut packet: Packet) {
    trace!("called vkGetShaderModuleIdentifierEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetShaderModuleCreateInfoIdentifierEXT.html>"]
fn vk_get_shader_module_create_info_identifier_ext(mut packet: Packet) {
    trace!("called vkGetShaderModuleCreateInfoIdentifierEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetImageSubresourceLayout2KHR.html>"]
fn vk_get_image_subresource_layout2_khr(mut packet: Packet) {
    trace!("called vkGetImageSubresourceLayout2KHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPipelinePropertiesEXT.html>"]
fn vk_get_pipeline_properties_ext(mut packet: Packet) {
    trace!("called vkGetPipelinePropertiesEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkExportMetalObjectsEXT.html>"]
fn vk_export_metal_objects_ext(mut packet: Packet) {
    trace!("called vkExportMetalObjectsEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetFramebufferTilePropertiesQCOM.html>"]
fn vk_get_framebuffer_tile_properties_qcom(mut packet: Packet) {
    trace!("called vkGetFramebufferTilePropertiesQCOM");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDynamicRenderingTilePropertiesQCOM.html>"]
fn vk_get_dynamic_rendering_tile_properties_qcom(mut packet: Packet) {
    trace!("called vkGetDynamicRenderingTilePropertiesQCOM");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceOpticalFlowImageFormatsNV.html>"]
fn vk_get_physical_device_optical_flow_image_formats_nv(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceOpticalFlowImageFormatsNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateOpticalFlowSessionNV.html>"]
fn vk_create_optical_flow_session_nv(mut packet: Packet) {
    trace!("called vkCreateOpticalFlowSessionNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyOpticalFlowSessionNV.html>"]
fn vk_destroy_optical_flow_session_nv(mut packet: Packet) {
    trace!("called vkDestroyOpticalFlowSessionNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkBindOpticalFlowSessionImageNV.html>"]
fn vk_bind_optical_flow_session_image_nv(mut packet: Packet) {
    trace!("called vkBindOpticalFlowSessionImageNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdOpticalFlowExecuteNV.html>"]
fn vk_cmd_optical_flow_execute_nv(mut packet: Packet) {
    trace!("called vkCmdOpticalFlowExecuteNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDeviceFaultInfoEXT.html>"]
fn vk_get_device_fault_info_ext(mut packet: Packet) {
    trace!("called vkGetDeviceFaultInfoEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetDepthBias2EXT.html>"]
fn vk_cmd_set_depth_bias2_ext(mut packet: Packet) {
    trace!("called vkCmdSetDepthBias2EXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkReleaseSwapchainImagesEXT.html>"]
fn vk_release_swapchain_images_ext(mut packet: Packet) {
    trace!("called vkReleaseSwapchainImagesEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDeviceImageSubresourceLayoutKHR.html>"]
fn vk_get_device_image_subresource_layout_khr(mut packet: Packet) {
    trace!("called vkGetDeviceImageSubresourceLayoutKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkMapMemory2KHR.html>"]
fn vk_map_memory2_khr(mut packet: Packet) {
    trace!("called vkMapMemory2KHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkUnmapMemory2KHR.html>"]
fn vk_unmap_memory2_khr(mut packet: Packet) {
    trace!("called vkUnmapMemory2KHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateShadersEXT.html>"]
fn vk_create_shaders_ext(mut packet: Packet) {
    trace!("called vkCreateShadersEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyShaderEXT.html>"]
fn vk_destroy_shader_ext(mut packet: Packet) {
    trace!("called vkDestroyShaderEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetShaderBinaryDataEXT.html>"]
fn vk_get_shader_binary_data_ext(mut packet: Packet) {
    trace!("called vkGetShaderBinaryDataEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBindShadersEXT.html>"]
fn vk_cmd_bind_shaders_ext(mut packet: Packet) {
    trace!("called vkCmdBindShadersEXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetScreenBufferPropertiesQNX.html>"]
fn vk_get_screen_buffer_properties_qnx(mut packet: Packet) {
    trace!("called vkGetScreenBufferPropertiesQNX");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceCooperativeMatrixPropertiesKHR.html>"]
fn vk_get_physical_device_cooperative_matrix_properties_khr(mut packet: Packet) {
    trace!("called vkGetPhysicalDeviceCooperativeMatrixPropertiesKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetExecutionGraphPipelineScratchSizeAMDX.html>"]
fn vk_get_execution_graph_pipeline_scratch_size_amdx(mut packet: Packet) {
    trace!("called vkGetExecutionGraphPipelineScratchSizeAMDX");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetExecutionGraphPipelineNodeIndexAMDX.html>"]
fn vk_get_execution_graph_pipeline_node_index_amdx(mut packet: Packet) {
    trace!("called vkGetExecutionGraphPipelineNodeIndexAMDX");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateExecutionGraphPipelinesAMDX.html>"]
fn vk_create_execution_graph_pipelines_amdx(mut packet: Packet) {
    trace!("called vkCreateExecutionGraphPipelinesAMDX");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdInitializeGraphScratchMemoryAMDX.html>"]
fn vk_cmd_initialize_graph_scratch_memory_amdx(mut packet: Packet) {
    trace!("called vkCmdInitializeGraphScratchMemoryAMDX");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDispatchGraphAMDX.html>"]
fn vk_cmd_dispatch_graph_amdx(mut packet: Packet) {
    trace!("called vkCmdDispatchGraphAMDX");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDispatchGraphIndirectAMDX.html>"]
fn vk_cmd_dispatch_graph_indirect_amdx(mut packet: Packet) {
    trace!("called vkCmdDispatchGraphIndirectAMDX");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDispatchGraphIndirectCountAMDX.html>"]
fn vk_cmd_dispatch_graph_indirect_count_amdx(mut packet: Packet) {
    trace!("called vkCmdDispatchGraphIndirectCountAMDX");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBindDescriptorSets2KHR.html>"]
fn vk_cmd_bind_descriptor_sets2_khr(mut packet: Packet) {
    trace!("called vkCmdBindDescriptorSets2KHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdPushConstants2KHR.html>"]
fn vk_cmd_push_constants2_khr(mut packet: Packet) {
    trace!("called vkCmdPushConstants2KHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdPushDescriptorSet2KHR.html>"]
fn vk_cmd_push_descriptor_set2_khr(mut packet: Packet) {
    trace!("called vkCmdPushDescriptorSet2KHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdPushDescriptorSetWithTemplate2KHR.html>"]
fn vk_cmd_push_descriptor_set_with_template2_khr(mut packet: Packet) {
    trace!("called vkCmdPushDescriptorSetWithTemplate2KHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetDescriptorBufferOffsets2EXT.html>"]
fn vk_cmd_set_descriptor_buffer_offsets2_ext(mut packet: Packet) {
    trace!("called vkCmdSetDescriptorBufferOffsets2EXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBindDescriptorBufferEmbeddedSamplers2EXT.html>"]
fn vk_cmd_bind_descriptor_buffer_embedded_samplers2_ext(mut packet: Packet) {
    trace!("called vkCmdBindDescriptorBufferEmbeddedSamplers2EXT");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkSetLatencySleepModeNV.html>"]
fn vk_set_latency_sleep_mode_nv(mut packet: Packet) {
    trace!("called vkSetLatencySleepModeNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkLatencySleepNV.html>"]
fn vk_latency_sleep_nv(mut packet: Packet) {
    trace!("called vkLatencySleepNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkSetLatencyMarkerNV.html>"]
fn vk_set_latency_marker_nv(mut packet: Packet) {
    trace!("called vkSetLatencyMarkerNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetLatencyTimingsNV.html>"]
fn vk_get_latency_timings_nv(mut packet: Packet) {
    trace!("called vkGetLatencyTimingsNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkQueueNotifyOutOfBandNV.html>"]
fn vk_queue_notify_out_of_band_nv(mut packet: Packet) {
    trace!("called vkQueueNotifyOutOfBandNV");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetRenderingAttachmentLocationsKHR.html>"]
fn vk_cmd_set_rendering_attachment_locations_khr(mut packet: Packet) {
    trace!("called vkCmdSetRenderingAttachmentLocationsKHR");
}

#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetRenderingInputAttachmentIndicesKHR.html>"]
fn vk_cmd_set_rendering_input_attachment_indices_khr(mut packet: Packet) {
    trace!("called vkCmdSetRenderingInputAttachmentIndicesKHR");
}
