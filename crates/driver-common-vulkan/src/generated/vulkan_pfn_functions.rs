//! THIS FILE IS GENERATED BY TOOL, DO NOT MODIFY.

use ash::vk;
use crate::{*, generated::vulkan_types::*, generated::vulkan_bitmasks::*};
use std::ffi::{c_char, c_void};

pub use ash::vk::{
    PFN_vkAllocationFunction, PFN_vkDebugReportCallbackEXT, PFN_vkDebugUtilsMessengerCallbackEXT,
    PFN_vkDeviceMemoryReportCallbackEXT, PFN_vkFreeFunction, PFN_vkGetInstanceProcAddrLUNARG,
    PFN_vkInternalAllocationNotification, PFN_vkInternalFreeNotification,
    PFN_vkReallocationFunction, PFN_vkVoidFunction,
};

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateInstance.html>"]
pub type PFN_vkCreateInstance = unsafe extern "system" fn(
    p_create_info: *const VkInstanceCreateInfo,
    p_allocator: *const VkAllocationCallbacks,
    p_instance: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyInstance.html>"]
pub type PFN_vkDestroyInstance = unsafe extern "system" fn(
    instance: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkEnumeratePhysicalDevices.html>"]
pub type PFN_vkEnumeratePhysicalDevices = unsafe extern "system" fn(
    instance: NonDisposableHandle,
    p_physical_device_count: *mut u32,
    p_physical_devices: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDeviceProcAddr.html>"]
pub type PFN_vkGetDeviceProcAddr = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_name: *const c_char,
) -> PFN_vkVoidFunction;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetInstanceProcAddr.html>"]
pub type PFN_vkGetInstanceProcAddr = unsafe extern "system" fn(
    instance: NonDisposableHandle,
    p_name: *const c_char,
) -> PFN_vkVoidFunction;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceProperties.html>"]
pub type PFN_vkGetPhysicalDeviceProperties = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    p_properties: *mut VkPhysicalDeviceProperties,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceQueueFamilyProperties.html>"]
pub type PFN_vkGetPhysicalDeviceQueueFamilyProperties = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    p_queue_family_property_count: *mut u32,
    p_queue_family_properties: *mut VkQueueFamilyProperties,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceMemoryProperties.html>"]
pub type PFN_vkGetPhysicalDeviceMemoryProperties = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    p_memory_properties: *mut VkPhysicalDeviceMemoryProperties,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceFeatures.html>"]
pub type PFN_vkGetPhysicalDeviceFeatures = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    p_features: *mut VkPhysicalDeviceFeatures,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceFormatProperties.html>"]
pub type PFN_vkGetPhysicalDeviceFormatProperties = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    format: VkFormat,
    p_format_properties: *mut VkFormatProperties,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceImageFormatProperties.html>"]
pub type PFN_vkGetPhysicalDeviceImageFormatProperties = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    format: VkFormat,
    type_: VkImageType,
    tiling: VkImageTiling,
    usage: VkImageUsageFlags,
    flags: VkImageCreateFlags,
    p_image_format_properties: *mut VkImageFormatProperties,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateDevice.html>"]
pub type PFN_vkCreateDevice = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    p_create_info: *const VkDeviceCreateInfo,
    p_allocator: *const VkAllocationCallbacks,
    p_device: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyDevice.html>"]
pub type PFN_vkDestroyDevice = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkEnumerateInstanceVersion.html>"]
pub type PFN_vkEnumerateInstanceVersion = unsafe extern "system" fn(
    p_api_version: *mut u32,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkEnumerateInstanceLayerProperties.html>"]
pub type PFN_vkEnumerateInstanceLayerProperties = unsafe extern "system" fn(
    p_property_count: *mut u32,
    p_properties: *mut VkLayerProperties,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkEnumerateInstanceExtensionProperties.html>"]
pub type PFN_vkEnumerateInstanceExtensionProperties = unsafe extern "system" fn(
    p_layer_name: *const c_char,
    p_property_count: *mut u32,
    p_properties: *mut VkExtensionProperties,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkEnumerateDeviceLayerProperties.html>"]
pub type PFN_vkEnumerateDeviceLayerProperties = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    p_property_count: *mut u32,
    p_properties: *mut VkLayerProperties,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkEnumerateDeviceExtensionProperties.html>"]
pub type PFN_vkEnumerateDeviceExtensionProperties = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    p_layer_name: *const c_char,
    p_property_count: *mut u32,
    p_properties: *mut VkExtensionProperties,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDeviceQueue.html>"]
pub type PFN_vkGetDeviceQueue = unsafe extern "system" fn(
    device: NonDisposableHandle,
    queue_family_index: u32,
    queue_index: u32,
    p_queue: *mut NonDisposableHandle,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkQueueSubmit.html>"]
pub type PFN_vkQueueSubmit = unsafe extern "system" fn(
    queue: NonDisposableHandle,
    submit_count: u32,
    p_submits: *const VkSubmitInfo,
    fence: NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkQueueWaitIdle.html>"]
pub type PFN_vkQueueWaitIdle = unsafe extern "system" fn(
    queue: NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDeviceWaitIdle.html>"]
pub type PFN_vkDeviceWaitIdle = unsafe extern "system" fn(
    device: NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkAllocateMemory.html>"]
pub type PFN_vkAllocateMemory = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_allocate_info: *const VkMemoryAllocateInfo,
    p_allocator: *const VkAllocationCallbacks,
    p_memory: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkFreeMemory.html>"]
pub type PFN_vkFreeMemory = unsafe extern "system" fn(
    device: NonDisposableHandle,
    memory: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkMapMemory.html>"]
pub type PFN_vkMapMemory = unsafe extern "system" fn(
    device: NonDisposableHandle,
    memory: NonDisposableHandle,
    offset: vk::DeviceSize,
    size: vk::DeviceSize,
    flags: VkMemoryMapFlags,
    pp_data: *mut *mut c_void,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkUnmapMemory.html>"]
pub type PFN_vkUnmapMemory = unsafe extern "system" fn(
    device: NonDisposableHandle,
    memory: NonDisposableHandle,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkFlushMappedMemoryRanges.html>"]
pub type PFN_vkFlushMappedMemoryRanges = unsafe extern "system" fn(
    device: NonDisposableHandle,
    memory_range_count: u32,
    p_memory_ranges: *const VkMappedMemoryRange,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkInvalidateMappedMemoryRanges.html>"]
pub type PFN_vkInvalidateMappedMemoryRanges = unsafe extern "system" fn(
    device: NonDisposableHandle,
    memory_range_count: u32,
    p_memory_ranges: *const VkMappedMemoryRange,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDeviceMemoryCommitment.html>"]
pub type PFN_vkGetDeviceMemoryCommitment = unsafe extern "system" fn(
    device: NonDisposableHandle,
    memory: NonDisposableHandle,
    p_committed_memory_in_bytes: *mut vk::DeviceSize,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetBufferMemoryRequirements.html>"]
pub type PFN_vkGetBufferMemoryRequirements = unsafe extern "system" fn(
    device: NonDisposableHandle,
    buffer: NonDisposableHandle,
    p_memory_requirements: *mut VkMemoryRequirements,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkBindBufferMemory.html>"]
pub type PFN_vkBindBufferMemory = unsafe extern "system" fn(
    device: NonDisposableHandle,
    buffer: NonDisposableHandle,
    memory: NonDisposableHandle,
    memory_offset: vk::DeviceSize,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetImageMemoryRequirements.html>"]
pub type PFN_vkGetImageMemoryRequirements = unsafe extern "system" fn(
    device: NonDisposableHandle,
    image: NonDisposableHandle,
    p_memory_requirements: *mut VkMemoryRequirements,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkBindImageMemory.html>"]
pub type PFN_vkBindImageMemory = unsafe extern "system" fn(
    device: NonDisposableHandle,
    image: NonDisposableHandle,
    memory: NonDisposableHandle,
    memory_offset: vk::DeviceSize,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetImageSparseMemoryRequirements.html>"]
pub type PFN_vkGetImageSparseMemoryRequirements = unsafe extern "system" fn(
    device: NonDisposableHandle,
    image: NonDisposableHandle,
    p_sparse_memory_requirement_count: *mut u32,
    p_sparse_memory_requirements: *mut VkSparseImageMemoryRequirements,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceSparseImageFormatProperties.html>"]
pub type PFN_vkGetPhysicalDeviceSparseImageFormatProperties = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    format: VkFormat,
    type_: VkImageType,
    samples: vk::SampleCountFlags,
    usage: VkImageUsageFlags,
    tiling: VkImageTiling,
    p_property_count: *mut u32,
    p_properties: *mut VkSparseImageFormatProperties,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkQueueBindSparse.html>"]
pub type PFN_vkQueueBindSparse = unsafe extern "system" fn(
    queue: NonDisposableHandle,
    bind_info_count: u32,
    p_bind_info: *const VkBindSparseInfo,
    fence: NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateFence.html>"]
pub type PFN_vkCreateFence = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_create_info: *const VkFenceCreateInfo,
    p_allocator: *const VkAllocationCallbacks,
    p_fence: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyFence.html>"]
pub type PFN_vkDestroyFence = unsafe extern "system" fn(
    device: NonDisposableHandle,
    fence: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkResetFences.html>"]
pub type PFN_vkResetFences = unsafe extern "system" fn(
    device: NonDisposableHandle,
    fence_count: u32,
    p_fences: *const NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetFenceStatus.html>"]
pub type PFN_vkGetFenceStatus = unsafe extern "system" fn(
    device: NonDisposableHandle,
    fence: NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkWaitForFences.html>"]
pub type PFN_vkWaitForFences = unsafe extern "system" fn(
    device: NonDisposableHandle,
    fence_count: u32,
    p_fences: *const NonDisposableHandle,
    wait_all: vk::Bool32,
    timeout: u64,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateSemaphore.html>"]
pub type PFN_vkCreateSemaphore = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_create_info: *const VkSemaphoreCreateInfo,
    p_allocator: *const VkAllocationCallbacks,
    p_semaphore: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroySemaphore.html>"]
pub type PFN_vkDestroySemaphore = unsafe extern "system" fn(
    device: NonDisposableHandle,
    semaphore: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateEvent.html>"]
pub type PFN_vkCreateEvent = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_create_info: *const VkEventCreateInfo,
    p_allocator: *const VkAllocationCallbacks,
    p_event: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyEvent.html>"]
pub type PFN_vkDestroyEvent = unsafe extern "system" fn(
    device: NonDisposableHandle,
    event: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetEventStatus.html>"]
pub type PFN_vkGetEventStatus = unsafe extern "system" fn(
    device: NonDisposableHandle,
    event: NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkSetEvent.html>"]
pub type PFN_vkSetEvent = unsafe extern "system" fn(
    device: NonDisposableHandle,
    event: NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkResetEvent.html>"]
pub type PFN_vkResetEvent = unsafe extern "system" fn(
    device: NonDisposableHandle,
    event: NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateQueryPool.html>"]
pub type PFN_vkCreateQueryPool = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_create_info: *const VkQueryPoolCreateInfo,
    p_allocator: *const VkAllocationCallbacks,
    p_query_pool: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyQueryPool.html>"]
pub type PFN_vkDestroyQueryPool = unsafe extern "system" fn(
    device: NonDisposableHandle,
    query_pool: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetQueryPoolResults.html>"]
pub type PFN_vkGetQueryPoolResults = unsafe extern "system" fn(
    device: NonDisposableHandle,
    query_pool: NonDisposableHandle,
    first_query: u32,
    query_count: u32,
    data_size: usize,
    p_data: *mut c_void,
    stride: vk::DeviceSize,
    flags: VkQueryResultFlags,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkResetQueryPool.html>"]
pub type PFN_vkResetQueryPool = unsafe extern "system" fn(
    device: NonDisposableHandle,
    query_pool: NonDisposableHandle,
    first_query: u32,
    query_count: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateBuffer.html>"]
pub type PFN_vkCreateBuffer = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_create_info: *const VkBufferCreateInfo,
    p_allocator: *const VkAllocationCallbacks,
    p_buffer: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyBuffer.html>"]
pub type PFN_vkDestroyBuffer = unsafe extern "system" fn(
    device: NonDisposableHandle,
    buffer: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateBufferView.html>"]
pub type PFN_vkCreateBufferView = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_create_info: *const VkBufferViewCreateInfo,
    p_allocator: *const VkAllocationCallbacks,
    p_view: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyBufferView.html>"]
pub type PFN_vkDestroyBufferView = unsafe extern "system" fn(
    device: NonDisposableHandle,
    buffer_view: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateImage.html>"]
pub type PFN_vkCreateImage = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_create_info: *const VkImageCreateInfo,
    p_allocator: *const VkAllocationCallbacks,
    p_image: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyImage.html>"]
pub type PFN_vkDestroyImage = unsafe extern "system" fn(
    device: NonDisposableHandle,
    image: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetImageSubresourceLayout.html>"]
pub type PFN_vkGetImageSubresourceLayout = unsafe extern "system" fn(
    device: NonDisposableHandle,
    image: NonDisposableHandle,
    p_subresource: *const VkImageSubresource,
    p_layout: *mut VkSubresourceLayout,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateImageView.html>"]
pub type PFN_vkCreateImageView = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_create_info: *const VkImageViewCreateInfo,
    p_allocator: *const VkAllocationCallbacks,
    p_view: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyImageView.html>"]
pub type PFN_vkDestroyImageView = unsafe extern "system" fn(
    device: NonDisposableHandle,
    image_view: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateShaderModule.html>"]
pub type PFN_vkCreateShaderModule = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_create_info: *const VkShaderModuleCreateInfo,
    p_allocator: *const VkAllocationCallbacks,
    p_shader_module: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyShaderModule.html>"]
pub type PFN_vkDestroyShaderModule = unsafe extern "system" fn(
    device: NonDisposableHandle,
    shader_module: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreatePipelineCache.html>"]
pub type PFN_vkCreatePipelineCache = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_create_info: *const VkPipelineCacheCreateInfo,
    p_allocator: *const VkAllocationCallbacks,
    p_pipeline_cache: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyPipelineCache.html>"]
pub type PFN_vkDestroyPipelineCache = unsafe extern "system" fn(
    device: NonDisposableHandle,
    pipeline_cache: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPipelineCacheData.html>"]
pub type PFN_vkGetPipelineCacheData = unsafe extern "system" fn(
    device: NonDisposableHandle,
    pipeline_cache: NonDisposableHandle,
    p_data_size: *mut usize,
    p_data: *mut c_void,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkMergePipelineCaches.html>"]
pub type PFN_vkMergePipelineCaches = unsafe extern "system" fn(
    device: NonDisposableHandle,
    dst_cache: NonDisposableHandle,
    src_cache_count: u32,
    p_src_caches: *const NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateGraphicsPipelines.html>"]
pub type PFN_vkCreateGraphicsPipelines = unsafe extern "system" fn(
    device: NonDisposableHandle,
    pipeline_cache: NonDisposableHandle,
    create_info_count: u32,
    p_create_infos: *const VkGraphicsPipelineCreateInfo,
    p_allocator: *const VkAllocationCallbacks,
    p_pipelines: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateComputePipelines.html>"]
pub type PFN_vkCreateComputePipelines = unsafe extern "system" fn(
    device: NonDisposableHandle,
    pipeline_cache: NonDisposableHandle,
    create_info_count: u32,
    p_create_infos: *const VkComputePipelineCreateInfo,
    p_allocator: *const VkAllocationCallbacks,
    p_pipelines: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI.html>"]
pub type PFN_vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI = unsafe extern "system" fn(
    device: NonDisposableHandle,
    renderpass: NonDisposableHandle,
    p_max_workgroup_size: *mut VkExtent2D,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyPipeline.html>"]
pub type PFN_vkDestroyPipeline = unsafe extern "system" fn(
    device: NonDisposableHandle,
    pipeline: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreatePipelineLayout.html>"]
pub type PFN_vkCreatePipelineLayout = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_create_info: *const VkPipelineLayoutCreateInfo,
    p_allocator: *const VkAllocationCallbacks,
    p_pipeline_layout: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyPipelineLayout.html>"]
pub type PFN_vkDestroyPipelineLayout = unsafe extern "system" fn(
    device: NonDisposableHandle,
    pipeline_layout: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateSampler.html>"]
pub type PFN_vkCreateSampler = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_create_info: *const VkSamplerCreateInfo,
    p_allocator: *const VkAllocationCallbacks,
    p_sampler: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroySampler.html>"]
pub type PFN_vkDestroySampler = unsafe extern "system" fn(
    device: NonDisposableHandle,
    sampler: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateDescriptorSetLayout.html>"]
pub type PFN_vkCreateDescriptorSetLayout = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_create_info: *const VkDescriptorSetLayoutCreateInfo,
    p_allocator: *const VkAllocationCallbacks,
    p_set_layout: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyDescriptorSetLayout.html>"]
pub type PFN_vkDestroyDescriptorSetLayout = unsafe extern "system" fn(
    device: NonDisposableHandle,
    descriptor_set_layout: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateDescriptorPool.html>"]
pub type PFN_vkCreateDescriptorPool = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_create_info: *const VkDescriptorPoolCreateInfo,
    p_allocator: *const VkAllocationCallbacks,
    p_descriptor_pool: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyDescriptorPool.html>"]
pub type PFN_vkDestroyDescriptorPool = unsafe extern "system" fn(
    device: NonDisposableHandle,
    descriptor_pool: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkResetDescriptorPool.html>"]
pub type PFN_vkResetDescriptorPool = unsafe extern "system" fn(
    device: NonDisposableHandle,
    descriptor_pool: NonDisposableHandle,
    flags: VkDescriptorPoolResetFlags,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkAllocateDescriptorSets.html>"]
pub type PFN_vkAllocateDescriptorSets = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_allocate_info: *const VkDescriptorSetAllocateInfo,
    p_descriptor_sets: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkFreeDescriptorSets.html>"]
pub type PFN_vkFreeDescriptorSets = unsafe extern "system" fn(
    device: NonDisposableHandle,
    descriptor_pool: NonDisposableHandle,
    descriptor_set_count: u32,
    p_descriptor_sets: *const NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkUpdateDescriptorSets.html>"]
pub type PFN_vkUpdateDescriptorSets = unsafe extern "system" fn(
    device: NonDisposableHandle,
    descriptor_write_count: u32,
    p_descriptor_writes: *const VkWriteDescriptorSet,
    descriptor_copy_count: u32,
    p_descriptor_copies: *const VkCopyDescriptorSet,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateFramebuffer.html>"]
pub type PFN_vkCreateFramebuffer = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_create_info: *const VkFramebufferCreateInfo,
    p_allocator: *const VkAllocationCallbacks,
    p_framebuffer: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyFramebuffer.html>"]
pub type PFN_vkDestroyFramebuffer = unsafe extern "system" fn(
    device: NonDisposableHandle,
    framebuffer: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateRenderPass.html>"]
pub type PFN_vkCreateRenderPass = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_create_info: *const VkRenderPassCreateInfo,
    p_allocator: *const VkAllocationCallbacks,
    p_render_pass: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyRenderPass.html>"]
pub type PFN_vkDestroyRenderPass = unsafe extern "system" fn(
    device: NonDisposableHandle,
    render_pass: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetRenderAreaGranularity.html>"]
pub type PFN_vkGetRenderAreaGranularity = unsafe extern "system" fn(
    device: NonDisposableHandle,
    render_pass: NonDisposableHandle,
    p_granularity: *mut VkExtent2D,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetRenderingAreaGranularityKHR.html>"]
pub type PFN_vkGetRenderingAreaGranularityKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_rendering_area_info: *const VkRenderingAreaInfoKHR,
    p_granularity: *mut VkExtent2D,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateCommandPool.html>"]
pub type PFN_vkCreateCommandPool = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_create_info: *const VkCommandPoolCreateInfo,
    p_allocator: *const VkAllocationCallbacks,
    p_command_pool: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyCommandPool.html>"]
pub type PFN_vkDestroyCommandPool = unsafe extern "system" fn(
    device: NonDisposableHandle,
    command_pool: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkResetCommandPool.html>"]
pub type PFN_vkResetCommandPool = unsafe extern "system" fn(
    device: NonDisposableHandle,
    command_pool: NonDisposableHandle,
    flags: VkCommandPoolResetFlags,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkAllocateCommandBuffers.html>"]
pub type PFN_vkAllocateCommandBuffers = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_allocate_info: *const VkCommandBufferAllocateInfo,
    p_command_buffers: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkFreeCommandBuffers.html>"]
pub type PFN_vkFreeCommandBuffers = unsafe extern "system" fn(
    device: NonDisposableHandle,
    command_pool: NonDisposableHandle,
    command_buffer_count: u32,
    p_command_buffers: *const NonDisposableHandle,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkBeginCommandBuffer.html>"]
pub type PFN_vkBeginCommandBuffer = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_begin_info: *const VkCommandBufferBeginInfo,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkEndCommandBuffer.html>"]
pub type PFN_vkEndCommandBuffer = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkResetCommandBuffer.html>"]
pub type PFN_vkResetCommandBuffer = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    flags: VkCommandBufferResetFlags,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBindPipeline.html>"]
pub type PFN_vkCmdBindPipeline = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    pipeline_bind_point: VkPipelineBindPoint,
    pipeline: NonDisposableHandle,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetAttachmentFeedbackLoopEnableEXT.html>"]
pub type PFN_vkCmdSetAttachmentFeedbackLoopEnableEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    aspect_mask: VkImageAspectFlags,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetViewport.html>"]
pub type PFN_vkCmdSetViewport = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    first_viewport: u32,
    viewport_count: u32,
    p_viewports: *const VkViewport,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetScissor.html>"]
pub type PFN_vkCmdSetScissor = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    first_scissor: u32,
    scissor_count: u32,
    p_scissors: *const VkRect2D,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetLineWidth.html>"]
pub type PFN_vkCmdSetLineWidth = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    line_width: f32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetDepthBias.html>"]
pub type PFN_vkCmdSetDepthBias = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    depth_bias_constant_factor: f32,
    depth_bias_clamp: f32,
    depth_bias_slope_factor: f32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetBlendConstants.html>"]
pub type PFN_vkCmdSetBlendConstants = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    blend_constants: *const [f32; 4],
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetDepthBounds.html>"]
pub type PFN_vkCmdSetDepthBounds = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    min_depth_bounds: f32,
    max_depth_bounds: f32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetStencilCompareMask.html>"]
pub type PFN_vkCmdSetStencilCompareMask = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    face_mask: VkStencilFaceFlags,
    compare_mask: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetStencilWriteMask.html>"]
pub type PFN_vkCmdSetStencilWriteMask = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    face_mask: VkStencilFaceFlags,
    write_mask: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetStencilReference.html>"]
pub type PFN_vkCmdSetStencilReference = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    face_mask: VkStencilFaceFlags,
    reference: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBindDescriptorSets.html>"]
pub type PFN_vkCmdBindDescriptorSets = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    pipeline_bind_point: VkPipelineBindPoint,
    layout: NonDisposableHandle,
    first_set: u32,
    descriptor_set_count: u32,
    p_descriptor_sets: *const NonDisposableHandle,
    dynamic_offset_count: u32,
    p_dynamic_offsets: *const u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBindIndexBuffer.html>"]
pub type PFN_vkCmdBindIndexBuffer = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    buffer: NonDisposableHandle,
    offset: vk::DeviceSize,
    index_type: VkIndexType,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBindVertexBuffers.html>"]
pub type PFN_vkCmdBindVertexBuffers = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    first_binding: u32,
    binding_count: u32,
    p_buffers: *const NonDisposableHandle,
    p_offsets: *const vk::DeviceSize,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDraw.html>"]
pub type PFN_vkCmdDraw = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    vertex_count: u32,
    instance_count: u32,
    first_vertex: u32,
    first_instance: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDrawIndexed.html>"]
pub type PFN_vkCmdDrawIndexed = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    index_count: u32,
    instance_count: u32,
    first_index: u32,
    vertex_offset: i32,
    first_instance: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDrawMultiEXT.html>"]
pub type PFN_vkCmdDrawMultiEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    draw_count: u32,
    p_vertex_info: *const VkMultiDrawInfoEXT,
    instance_count: u32,
    first_instance: u32,
    stride: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDrawMultiIndexedEXT.html>"]
pub type PFN_vkCmdDrawMultiIndexedEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    draw_count: u32,
    p_index_info: *const VkMultiDrawIndexedInfoEXT,
    instance_count: u32,
    first_instance: u32,
    stride: u32,
    p_vertex_offset: *const i32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDrawIndirect.html>"]
pub type PFN_vkCmdDrawIndirect = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    buffer: NonDisposableHandle,
    offset: vk::DeviceSize,
    draw_count: u32,
    stride: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDrawIndexedIndirect.html>"]
pub type PFN_vkCmdDrawIndexedIndirect = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    buffer: NonDisposableHandle,
    offset: vk::DeviceSize,
    draw_count: u32,
    stride: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDispatch.html>"]
pub type PFN_vkCmdDispatch = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    group_count_x: u32,
    group_count_y: u32,
    group_count_z: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDispatchIndirect.html>"]
pub type PFN_vkCmdDispatchIndirect = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    buffer: NonDisposableHandle,
    offset: vk::DeviceSize,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSubpassShadingHUAWEI.html>"]
pub type PFN_vkCmdSubpassShadingHUAWEI = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDrawClusterHUAWEI.html>"]
pub type PFN_vkCmdDrawClusterHUAWEI = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    group_count_x: u32,
    group_count_y: u32,
    group_count_z: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDrawClusterIndirectHUAWEI.html>"]
pub type PFN_vkCmdDrawClusterIndirectHUAWEI = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    buffer: NonDisposableHandle,
    offset: vk::DeviceSize,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdUpdatePipelineIndirectBufferNV.html>"]
pub type PFN_vkCmdUpdatePipelineIndirectBufferNV = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    pipeline_bind_point: VkPipelineBindPoint,
    pipeline: NonDisposableHandle,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCopyBuffer.html>"]
pub type PFN_vkCmdCopyBuffer = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    src_buffer: NonDisposableHandle,
    dst_buffer: NonDisposableHandle,
    region_count: u32,
    p_regions: *const VkBufferCopy,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCopyImage.html>"]
pub type PFN_vkCmdCopyImage = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    src_image: NonDisposableHandle,
    src_image_layout: VkImageLayout,
    dst_image: NonDisposableHandle,
    dst_image_layout: VkImageLayout,
    region_count: u32,
    p_regions: *const VkImageCopy,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBlitImage.html>"]
pub type PFN_vkCmdBlitImage = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    src_image: NonDisposableHandle,
    src_image_layout: VkImageLayout,
    dst_image: NonDisposableHandle,
    dst_image_layout: VkImageLayout,
    region_count: u32,
    p_regions: *const VkImageBlit,
    filter: VkFilter,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCopyBufferToImage.html>"]
pub type PFN_vkCmdCopyBufferToImage = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    src_buffer: NonDisposableHandle,
    dst_image: NonDisposableHandle,
    dst_image_layout: VkImageLayout,
    region_count: u32,
    p_regions: *const VkBufferImageCopy,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCopyImageToBuffer.html>"]
pub type PFN_vkCmdCopyImageToBuffer = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    src_image: NonDisposableHandle,
    src_image_layout: VkImageLayout,
    dst_buffer: NonDisposableHandle,
    region_count: u32,
    p_regions: *const VkBufferImageCopy,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCopyMemoryIndirectNV.html>"]
pub type PFN_vkCmdCopyMemoryIndirectNV = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    copy_buffer_address: vk::DeviceAddress,
    copy_count: u32,
    stride: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCopyMemoryToImageIndirectNV.html>"]
pub type PFN_vkCmdCopyMemoryToImageIndirectNV = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    copy_buffer_address: vk::DeviceAddress,
    copy_count: u32,
    stride: u32,
    dst_image: NonDisposableHandle,
    dst_image_layout: VkImageLayout,
    p_image_subresources: *const VkImageSubresourceLayers,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdUpdateBuffer.html>"]
pub type PFN_vkCmdUpdateBuffer = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    dst_buffer: NonDisposableHandle,
    dst_offset: vk::DeviceSize,
    data_size: vk::DeviceSize,
    p_data: *const c_void,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdFillBuffer.html>"]
pub type PFN_vkCmdFillBuffer = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    dst_buffer: NonDisposableHandle,
    dst_offset: vk::DeviceSize,
    size: vk::DeviceSize,
    data: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdClearColorImage.html>"]
pub type PFN_vkCmdClearColorImage = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    image: NonDisposableHandle,
    image_layout: VkImageLayout,
    p_color: *const VkClearColorValue,
    range_count: u32,
    p_ranges: *const VkImageSubresourceRange,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdClearDepthStencilImage.html>"]
pub type PFN_vkCmdClearDepthStencilImage = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    image: NonDisposableHandle,
    image_layout: VkImageLayout,
    p_depth_stencil: *const VkClearDepthStencilValue,
    range_count: u32,
    p_ranges: *const VkImageSubresourceRange,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdClearAttachments.html>"]
pub type PFN_vkCmdClearAttachments = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    attachment_count: u32,
    p_attachments: *const VkClearAttachment,
    rect_count: u32,
    p_rects: *const VkClearRect,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdResolveImage.html>"]
pub type PFN_vkCmdResolveImage = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    src_image: NonDisposableHandle,
    src_image_layout: VkImageLayout,
    dst_image: NonDisposableHandle,
    dst_image_layout: VkImageLayout,
    region_count: u32,
    p_regions: *const VkImageResolve,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetEvent.html>"]
pub type PFN_vkCmdSetEvent = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    event: NonDisposableHandle,
    stage_mask: VkPipelineStageFlags,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdResetEvent.html>"]
pub type PFN_vkCmdResetEvent = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    event: NonDisposableHandle,
    stage_mask: VkPipelineStageFlags,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdWaitEvents.html>"]
pub type PFN_vkCmdWaitEvents = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    event_count: u32,
    p_events: *const NonDisposableHandle,
    src_stage_mask: VkPipelineStageFlags,
    dst_stage_mask: VkPipelineStageFlags,
    memory_barrier_count: u32,
    p_memory_barriers: *const VkMemoryBarrier,
    buffer_memory_barrier_count: u32,
    p_buffer_memory_barriers: *const VkBufferMemoryBarrier,
    image_memory_barrier_count: u32,
    p_image_memory_barriers: *const VkImageMemoryBarrier,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdPipelineBarrier.html>"]
pub type PFN_vkCmdPipelineBarrier = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    src_stage_mask: VkPipelineStageFlags,
    dst_stage_mask: VkPipelineStageFlags,
    dependency_flags: VkDependencyFlags,
    memory_barrier_count: u32,
    p_memory_barriers: *const VkMemoryBarrier,
    buffer_memory_barrier_count: u32,
    p_buffer_memory_barriers: *const VkBufferMemoryBarrier,
    image_memory_barrier_count: u32,
    p_image_memory_barriers: *const VkImageMemoryBarrier,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBeginQuery.html>"]
pub type PFN_vkCmdBeginQuery = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    query_pool: NonDisposableHandle,
    query: u32,
    flags: VkQueryControlFlags,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdEndQuery.html>"]
pub type PFN_vkCmdEndQuery = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    query_pool: NonDisposableHandle,
    query: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBeginConditionalRenderingEXT.html>"]
pub type PFN_vkCmdBeginConditionalRenderingEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_conditional_rendering_begin: *const VkConditionalRenderingBeginInfoEXT,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdEndConditionalRenderingEXT.html>"]
pub type PFN_vkCmdEndConditionalRenderingEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdResetQueryPool.html>"]
pub type PFN_vkCmdResetQueryPool = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    query_pool: NonDisposableHandle,
    first_query: u32,
    query_count: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdWriteTimestamp.html>"]
pub type PFN_vkCmdWriteTimestamp = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    pipeline_stage: vk::PipelineStageFlags,
    query_pool: NonDisposableHandle,
    query: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCopyQueryPoolResults.html>"]
pub type PFN_vkCmdCopyQueryPoolResults = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    query_pool: NonDisposableHandle,
    first_query: u32,
    query_count: u32,
    dst_buffer: NonDisposableHandle,
    dst_offset: vk::DeviceSize,
    stride: vk::DeviceSize,
    flags: VkQueryResultFlags,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdPushConstants.html>"]
pub type PFN_vkCmdPushConstants = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    layout: NonDisposableHandle,
    stage_flags: VkShaderStageFlags,
    offset: u32,
    size: u32,
    p_values: *const c_void,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBeginRenderPass.html>"]
pub type PFN_vkCmdBeginRenderPass = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_render_pass_begin: *const VkRenderPassBeginInfo,
    contents: VkSubpassContents,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdNextSubpass.html>"]
pub type PFN_vkCmdNextSubpass = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    contents: VkSubpassContents,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdEndRenderPass.html>"]
pub type PFN_vkCmdEndRenderPass = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdExecuteCommands.html>"]
pub type PFN_vkCmdExecuteCommands = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    command_buffer_count: u32,
    p_command_buffers: *const NonDisposableHandle,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateAndroidSurfaceKHR.html>"]
pub type PFN_vkCreateAndroidSurfaceKHR = unsafe extern "system" fn(
    instance: NonDisposableHandle,
    p_create_info: *const VkAndroidSurfaceCreateInfoKHR,
    p_allocator: *const VkAllocationCallbacks,
    p_surface: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceDisplayPropertiesKHR.html>"]
pub type PFN_vkGetPhysicalDeviceDisplayPropertiesKHR = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    p_property_count: *mut u32,
    p_properties: *mut VkDisplayPropertiesKHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceDisplayPlanePropertiesKHR.html>"]
pub type PFN_vkGetPhysicalDeviceDisplayPlanePropertiesKHR = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    p_property_count: *mut u32,
    p_properties: *mut VkDisplayPlanePropertiesKHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDisplayPlaneSupportedDisplaysKHR.html>"]
pub type PFN_vkGetDisplayPlaneSupportedDisplaysKHR = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    plane_index: u32,
    p_display_count: *mut u32,
    p_displays: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDisplayModePropertiesKHR.html>"]
pub type PFN_vkGetDisplayModePropertiesKHR = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    display: NonDisposableHandle,
    p_property_count: *mut u32,
    p_properties: *mut VkDisplayModePropertiesKHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateDisplayModeKHR.html>"]
pub type PFN_vkCreateDisplayModeKHR = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    display: NonDisposableHandle,
    p_create_info: *const VkDisplayModeCreateInfoKHR,
    p_allocator: *const VkAllocationCallbacks,
    p_mode: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDisplayPlaneCapabilitiesKHR.html>"]
pub type PFN_vkGetDisplayPlaneCapabilitiesKHR = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    mode: NonDisposableHandle,
    plane_index: u32,
    p_capabilities: *mut VkDisplayPlaneCapabilitiesKHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateDisplayPlaneSurfaceKHR.html>"]
pub type PFN_vkCreateDisplayPlaneSurfaceKHR = unsafe extern "system" fn(
    instance: NonDisposableHandle,
    p_create_info: *const VkDisplaySurfaceCreateInfoKHR,
    p_allocator: *const VkAllocationCallbacks,
    p_surface: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateSharedSwapchainsKHR.html>"]
pub type PFN_vkCreateSharedSwapchainsKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    swapchain_count: u32,
    p_create_infos: *const VkSwapchainCreateInfoKHR,
    p_allocator: *const VkAllocationCallbacks,
    p_swapchains: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroySurfaceKHR.html>"]
pub type PFN_vkDestroySurfaceKHR = unsafe extern "system" fn(
    instance: NonDisposableHandle,
    surface: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceSurfaceSupportKHR.html>"]
pub type PFN_vkGetPhysicalDeviceSurfaceSupportKHR = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    queue_family_index: u32,
    surface: NonDisposableHandle,
    p_supported: *mut vk::Bool32,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceSurfaceCapabilitiesKHR.html>"]
pub type PFN_vkGetPhysicalDeviceSurfaceCapabilitiesKHR = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    surface: NonDisposableHandle,
    p_surface_capabilities: *mut VkSurfaceCapabilitiesKHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceSurfaceFormatsKHR.html>"]
pub type PFN_vkGetPhysicalDeviceSurfaceFormatsKHR = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    surface: NonDisposableHandle,
    p_surface_format_count: *mut u32,
    p_surface_formats: *mut VkSurfaceFormatKHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceSurfacePresentModesKHR.html>"]
pub type PFN_vkGetPhysicalDeviceSurfacePresentModesKHR = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    surface: NonDisposableHandle,
    p_present_mode_count: *mut u32,
    p_present_modes: *mut VkPresentModeKHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateSwapchainKHR.html>"]
pub type PFN_vkCreateSwapchainKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_create_info: *const VkSwapchainCreateInfoKHR,
    p_allocator: *const VkAllocationCallbacks,
    p_swapchain: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroySwapchainKHR.html>"]
pub type PFN_vkDestroySwapchainKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    swapchain: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetSwapchainImagesKHR.html>"]
pub type PFN_vkGetSwapchainImagesKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    swapchain: NonDisposableHandle,
    p_swapchain_image_count: *mut u32,
    p_swapchain_images: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkAcquireNextImageKHR.html>"]
pub type PFN_vkAcquireNextImageKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    swapchain: NonDisposableHandle,
    timeout: u64,
    semaphore: NonDisposableHandle,
    fence: NonDisposableHandle,
    p_image_index: *mut u32,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkQueuePresentKHR.html>"]
pub type PFN_vkQueuePresentKHR = unsafe extern "system" fn(
    queue: NonDisposableHandle,
    p_present_info: *const VkPresentInfoKHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateViSurfaceNN.html>"]
pub type PFN_vkCreateViSurfaceNN = unsafe extern "system" fn(
    instance: NonDisposableHandle,
    p_create_info: *const VkViSurfaceCreateInfoNN,
    p_allocator: *const VkAllocationCallbacks,
    p_surface: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateWaylandSurfaceKHR.html>"]
pub type PFN_vkCreateWaylandSurfaceKHR = unsafe extern "system" fn(
    instance: NonDisposableHandle,
    p_create_info: *const VkWaylandSurfaceCreateInfoKHR,
    p_allocator: *const VkAllocationCallbacks,
    p_surface: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceWaylandPresentationSupportKHR.html>"]
pub type PFN_vkGetPhysicalDeviceWaylandPresentationSupportKHR = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    queue_family_index: u32,
    display: *mut usize,
) -> vk::Bool32;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateWin32SurfaceKHR.html>"]
pub type PFN_vkCreateWin32SurfaceKHR = unsafe extern "system" fn(
    instance: NonDisposableHandle,
    p_create_info: *const VkWin32SurfaceCreateInfoKHR,
    p_allocator: *const VkAllocationCallbacks,
    p_surface: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceWin32PresentationSupportKHR.html>"]
pub type PFN_vkGetPhysicalDeviceWin32PresentationSupportKHR = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    queue_family_index: u32,
) -> vk::Bool32;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateXlibSurfaceKHR.html>"]
pub type PFN_vkCreateXlibSurfaceKHR = unsafe extern "system" fn(
    instance: NonDisposableHandle,
    p_create_info: *const VkXlibSurfaceCreateInfoKHR,
    p_allocator: *const VkAllocationCallbacks,
    p_surface: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceXlibPresentationSupportKHR.html>"]
pub type PFN_vkGetPhysicalDeviceXlibPresentationSupportKHR = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    queue_family_index: u32,
    dpy: *mut usize,
    visual_id: vk::VisualID,
) -> vk::Bool32;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateXcbSurfaceKHR.html>"]
pub type PFN_vkCreateXcbSurfaceKHR = unsafe extern "system" fn(
    instance: NonDisposableHandle,
    p_create_info: *const VkXcbSurfaceCreateInfoKHR,
    p_allocator: *const VkAllocationCallbacks,
    p_surface: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceXcbPresentationSupportKHR.html>"]
pub type PFN_vkGetPhysicalDeviceXcbPresentationSupportKHR = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    queue_family_index: u32,
    connection: *mut usize,
    visual_id: vk::xcb_visualid_t,
) -> vk::Bool32;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateDirectFBSurfaceEXT.html>"]
pub type PFN_vkCreateDirectFBSurfaceEXT = unsafe extern "system" fn(
    instance: NonDisposableHandle,
    p_create_info: *const VkDirectFBSurfaceCreateInfoEXT,
    p_allocator: *const VkAllocationCallbacks,
    p_surface: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceDirectFBPresentationSupportEXT.html>"]
pub type PFN_vkGetPhysicalDeviceDirectFBPresentationSupportEXT = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    queue_family_index: u32,
    dfb: *mut usize,
) -> vk::Bool32;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateImagePipeSurfaceFUCHSIA.html>"]
pub type PFN_vkCreateImagePipeSurfaceFUCHSIA = unsafe extern "system" fn(
    instance: NonDisposableHandle,
    p_create_info: *const VkImagePipeSurfaceCreateInfoFUCHSIA,
    p_allocator: *const VkAllocationCallbacks,
    p_surface: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateStreamDescriptorSurfaceGGP.html>"]
pub type PFN_vkCreateStreamDescriptorSurfaceGGP = unsafe extern "system" fn(
    instance: NonDisposableHandle,
    p_create_info: *const VkStreamDescriptorSurfaceCreateInfoGGP,
    p_allocator: *const VkAllocationCallbacks,
    p_surface: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateScreenSurfaceQNX.html>"]
pub type PFN_vkCreateScreenSurfaceQNX = unsafe extern "system" fn(
    instance: NonDisposableHandle,
    p_create_info: *const VkScreenSurfaceCreateInfoQNX,
    p_allocator: *const VkAllocationCallbacks,
    p_surface: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceScreenPresentationSupportQNX.html>"]
pub type PFN_vkGetPhysicalDeviceScreenPresentationSupportQNX = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    queue_family_index: u32,
    window: *mut usize,
) -> vk::Bool32;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateDebugReportCallbackEXT.html>"]
pub type PFN_vkCreateDebugReportCallbackEXT = unsafe extern "system" fn(
    instance: NonDisposableHandle,
    p_create_info: *const VkDebugReportCallbackCreateInfoEXT,
    p_allocator: *const VkAllocationCallbacks,
    p_callback: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyDebugReportCallbackEXT.html>"]
pub type PFN_vkDestroyDebugReportCallbackEXT = unsafe extern "system" fn(
    instance: NonDisposableHandle,
    callback: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDebugReportMessageEXT.html>"]
pub type PFN_vkDebugReportMessageEXT = unsafe extern "system" fn(
    instance: NonDisposableHandle,
    flags: VkDebugReportFlagsEXT,
    object_type: VkDebugReportObjectTypeEXT,
    object: u64,
    location: usize,
    message_code: i32,
    p_layer_prefix: *const c_char,
    p_message: *const c_char,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDebugMarkerSetObjectNameEXT.html>"]
pub type PFN_vkDebugMarkerSetObjectNameEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_name_info: *const VkDebugMarkerObjectNameInfoEXT,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDebugMarkerSetObjectTagEXT.html>"]
pub type PFN_vkDebugMarkerSetObjectTagEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_tag_info: *const VkDebugMarkerObjectTagInfoEXT,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDebugMarkerBeginEXT.html>"]
pub type PFN_vkCmdDebugMarkerBeginEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_marker_info: *const VkDebugMarkerMarkerInfoEXT,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDebugMarkerEndEXT.html>"]
pub type PFN_vkCmdDebugMarkerEndEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDebugMarkerInsertEXT.html>"]
pub type PFN_vkCmdDebugMarkerInsertEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_marker_info: *const VkDebugMarkerMarkerInfoEXT,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceExternalImageFormatPropertiesNV.html>"]
pub type PFN_vkGetPhysicalDeviceExternalImageFormatPropertiesNV = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    format: VkFormat,
    type_: VkImageType,
    tiling: VkImageTiling,
    usage: VkImageUsageFlags,
    flags: VkImageCreateFlags,
    external_handle_type: VkExternalMemoryHandleTypeFlagsNV,
    p_external_image_format_properties: *mut VkExternalImageFormatPropertiesNV,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetMemoryWin32HandleNV.html>"]
pub type PFN_vkGetMemoryWin32HandleNV = unsafe extern "system" fn(
    device: NonDisposableHandle,
    memory: NonDisposableHandle,
    handle_type: VkExternalMemoryHandleTypeFlagsNV,
    p_handle: *mut vk::HANDLE,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdExecuteGeneratedCommandsNV.html>"]
pub type PFN_vkCmdExecuteGeneratedCommandsNV = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    is_preprocessed: vk::Bool32,
    p_generated_commands_info: *const VkGeneratedCommandsInfoNV,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdPreprocessGeneratedCommandsNV.html>"]
pub type PFN_vkCmdPreprocessGeneratedCommandsNV = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_generated_commands_info: *const VkGeneratedCommandsInfoNV,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBindPipelineShaderGroupNV.html>"]
pub type PFN_vkCmdBindPipelineShaderGroupNV = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    pipeline_bind_point: VkPipelineBindPoint,
    pipeline: NonDisposableHandle,
    group_index: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetGeneratedCommandsMemoryRequirementsNV.html>"]
pub type PFN_vkGetGeneratedCommandsMemoryRequirementsNV = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_info: *const VkGeneratedCommandsMemoryRequirementsInfoNV,
    p_memory_requirements: *mut VkMemoryRequirements2,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateIndirectCommandsLayoutNV.html>"]
pub type PFN_vkCreateIndirectCommandsLayoutNV = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_create_info: *const VkIndirectCommandsLayoutCreateInfoNV,
    p_allocator: *const VkAllocationCallbacks,
    p_indirect_commands_layout: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyIndirectCommandsLayoutNV.html>"]
pub type PFN_vkDestroyIndirectCommandsLayoutNV = unsafe extern "system" fn(
    device: NonDisposableHandle,
    indirect_commands_layout: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceFeatures2.html>"]
pub type PFN_vkGetPhysicalDeviceFeatures2 = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    p_features: *mut VkPhysicalDeviceFeatures2,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceProperties2.html>"]
pub type PFN_vkGetPhysicalDeviceProperties2 = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    p_properties: *mut VkPhysicalDeviceProperties2,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceFormatProperties2.html>"]
pub type PFN_vkGetPhysicalDeviceFormatProperties2 = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    format: VkFormat,
    p_format_properties: *mut VkFormatProperties2,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceImageFormatProperties2.html>"]
pub type PFN_vkGetPhysicalDeviceImageFormatProperties2 = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    p_image_format_info: *const VkPhysicalDeviceImageFormatInfo2,
    p_image_format_properties: *mut VkImageFormatProperties2,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceQueueFamilyProperties2.html>"]
pub type PFN_vkGetPhysicalDeviceQueueFamilyProperties2 = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    p_queue_family_property_count: *mut u32,
    p_queue_family_properties: *mut VkQueueFamilyProperties2,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceMemoryProperties2.html>"]
pub type PFN_vkGetPhysicalDeviceMemoryProperties2 = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    p_memory_properties: *mut VkPhysicalDeviceMemoryProperties2,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceSparseImageFormatProperties2.html>"]
pub type PFN_vkGetPhysicalDeviceSparseImageFormatProperties2 = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    p_format_info: *const VkPhysicalDeviceSparseImageFormatInfo2,
    p_property_count: *mut u32,
    p_properties: *mut VkSparseImageFormatProperties2,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdPushDescriptorSetKHR.html>"]
pub type PFN_vkCmdPushDescriptorSetKHR = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    pipeline_bind_point: VkPipelineBindPoint,
    layout: NonDisposableHandle,
    set: u32,
    descriptor_write_count: u32,
    p_descriptor_writes: *const VkWriteDescriptorSet,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkTrimCommandPool.html>"]
pub type PFN_vkTrimCommandPool = unsafe extern "system" fn(
    device: NonDisposableHandle,
    command_pool: NonDisposableHandle,
    flags: VkCommandPoolTrimFlags,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceExternalBufferProperties.html>"]
pub type PFN_vkGetPhysicalDeviceExternalBufferProperties = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    p_external_buffer_info: *const VkPhysicalDeviceExternalBufferInfo,
    p_external_buffer_properties: *mut VkExternalBufferProperties,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetMemoryWin32HandleKHR.html>"]
pub type PFN_vkGetMemoryWin32HandleKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_get_win32_handle_info: *const VkMemoryGetWin32HandleInfoKHR,
    p_handle: *mut vk::HANDLE,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetMemoryWin32HandlePropertiesKHR.html>"]
pub type PFN_vkGetMemoryWin32HandlePropertiesKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    handle_type: vk::ExternalMemoryHandleTypeFlags,
    handle: vk::HANDLE,
    p_memory_win32_handle_properties: *mut VkMemoryWin32HandlePropertiesKHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetMemoryFdKHR.html>"]
pub type PFN_vkGetMemoryFdKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_get_fd_info: *const VkMemoryGetFdInfoKHR,
    p_fd: *mut std::os::raw::c_int,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetMemoryFdPropertiesKHR.html>"]
pub type PFN_vkGetMemoryFdPropertiesKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    handle_type: vk::ExternalMemoryHandleTypeFlags,
    fd: std::os::raw::c_int,
    p_memory_fd_properties: *mut VkMemoryFdPropertiesKHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetMemoryZirconHandleFUCHSIA.html>"]
pub type PFN_vkGetMemoryZirconHandleFUCHSIA = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_get_zircon_handle_info: *const VkMemoryGetZirconHandleInfoFUCHSIA,
    p_zircon_handle: *mut vk::zx_handle_t,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetMemoryZirconHandlePropertiesFUCHSIA.html>"]
pub type PFN_vkGetMemoryZirconHandlePropertiesFUCHSIA = unsafe extern "system" fn(
    device: NonDisposableHandle,
    handle_type: vk::ExternalMemoryHandleTypeFlags,
    zircon_handle: vk::zx_handle_t,
    p_memory_zircon_handle_properties: *mut VkMemoryZirconHandlePropertiesFUCHSIA,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetMemoryRemoteAddressNV.html>"]
pub type PFN_vkGetMemoryRemoteAddressNV = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_memory_get_remote_address_info: *const VkMemoryGetRemoteAddressInfoNV,
    p_address: *mut vk::RemoteAddressNV,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceExternalSemaphoreProperties.html>"]
pub type PFN_vkGetPhysicalDeviceExternalSemaphoreProperties = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    p_external_semaphore_info: *const VkPhysicalDeviceExternalSemaphoreInfo,
    p_external_semaphore_properties: *mut VkExternalSemaphoreProperties,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetSemaphoreWin32HandleKHR.html>"]
pub type PFN_vkGetSemaphoreWin32HandleKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_get_win32_handle_info: *const VkSemaphoreGetWin32HandleInfoKHR,
    p_handle: *mut vk::HANDLE,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkImportSemaphoreWin32HandleKHR.html>"]
pub type PFN_vkImportSemaphoreWin32HandleKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_import_semaphore_win32_handle_info: *const VkImportSemaphoreWin32HandleInfoKHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetSemaphoreFdKHR.html>"]
pub type PFN_vkGetSemaphoreFdKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_get_fd_info: *const VkSemaphoreGetFdInfoKHR,
    p_fd: *mut std::os::raw::c_int,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkImportSemaphoreFdKHR.html>"]
pub type PFN_vkImportSemaphoreFdKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_import_semaphore_fd_info: *const VkImportSemaphoreFdInfoKHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetSemaphoreZirconHandleFUCHSIA.html>"]
pub type PFN_vkGetSemaphoreZirconHandleFUCHSIA = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_get_zircon_handle_info: *const VkSemaphoreGetZirconHandleInfoFUCHSIA,
    p_zircon_handle: *mut vk::zx_handle_t,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkImportSemaphoreZirconHandleFUCHSIA.html>"]
pub type PFN_vkImportSemaphoreZirconHandleFUCHSIA = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_import_semaphore_zircon_handle_info: *const VkImportSemaphoreZirconHandleInfoFUCHSIA,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceExternalFenceProperties.html>"]
pub type PFN_vkGetPhysicalDeviceExternalFenceProperties = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    p_external_fence_info: *const VkPhysicalDeviceExternalFenceInfo,
    p_external_fence_properties: *mut VkExternalFenceProperties,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetFenceWin32HandleKHR.html>"]
pub type PFN_vkGetFenceWin32HandleKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_get_win32_handle_info: *const VkFenceGetWin32HandleInfoKHR,
    p_handle: *mut vk::HANDLE,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkImportFenceWin32HandleKHR.html>"]
pub type PFN_vkImportFenceWin32HandleKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_import_fence_win32_handle_info: *const VkImportFenceWin32HandleInfoKHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetFenceFdKHR.html>"]
pub type PFN_vkGetFenceFdKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_get_fd_info: *const VkFenceGetFdInfoKHR,
    p_fd: *mut std::os::raw::c_int,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkImportFenceFdKHR.html>"]
pub type PFN_vkImportFenceFdKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_import_fence_fd_info: *const VkImportFenceFdInfoKHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkReleaseDisplayEXT.html>"]
pub type PFN_vkReleaseDisplayEXT = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    display: NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkAcquireXlibDisplayEXT.html>"]
pub type PFN_vkAcquireXlibDisplayEXT = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    dpy: *mut usize,
    display: NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetRandROutputDisplayEXT.html>"]
pub type PFN_vkGetRandROutputDisplayEXT = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    dpy: *mut usize,
    rr_output: vk::RROutput,
    p_display: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkAcquireWinrtDisplayNV.html>"]
pub type PFN_vkAcquireWinrtDisplayNV = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    display: NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetWinrtDisplayNV.html>"]
pub type PFN_vkGetWinrtDisplayNV = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    device_relative_id: u32,
    p_display: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDisplayPowerControlEXT.html>"]
pub type PFN_vkDisplayPowerControlEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    display: NonDisposableHandle,
    p_display_power_info: *const VkDisplayPowerInfoEXT,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkRegisterDeviceEventEXT.html>"]
pub type PFN_vkRegisterDeviceEventEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_device_event_info: *const VkDeviceEventInfoEXT,
    p_allocator: *const VkAllocationCallbacks,
    p_fence: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkRegisterDisplayEventEXT.html>"]
pub type PFN_vkRegisterDisplayEventEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    display: NonDisposableHandle,
    p_display_event_info: *const VkDisplayEventInfoEXT,
    p_allocator: *const VkAllocationCallbacks,
    p_fence: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetSwapchainCounterEXT.html>"]
pub type PFN_vkGetSwapchainCounterEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    swapchain: NonDisposableHandle,
    counter: vk::SurfaceCounterFlagsEXT,
    p_counter_value: *mut u64,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceSurfaceCapabilities2EXT.html>"]
pub type PFN_vkGetPhysicalDeviceSurfaceCapabilities2EXT = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    surface: NonDisposableHandle,
    p_surface_capabilities: *mut VkSurfaceCapabilities2EXT,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkEnumeratePhysicalDeviceGroups.html>"]
pub type PFN_vkEnumeratePhysicalDeviceGroups = unsafe extern "system" fn(
    instance: NonDisposableHandle,
    p_physical_device_group_count: *mut u32,
    p_physical_device_group_properties: *mut VkPhysicalDeviceGroupProperties,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDeviceGroupPeerMemoryFeatures.html>"]
pub type PFN_vkGetDeviceGroupPeerMemoryFeatures = unsafe extern "system" fn(
    device: NonDisposableHandle,
    heap_index: u32,
    local_device_index: u32,
    remote_device_index: u32,
    p_peer_memory_features: *mut VkPeerMemoryFeatureFlags,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkBindBufferMemory2.html>"]
pub type PFN_vkBindBufferMemory2 = unsafe extern "system" fn(
    device: NonDisposableHandle,
    bind_info_count: u32,
    p_bind_infos: *const VkBindBufferMemoryInfo,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkBindImageMemory2.html>"]
pub type PFN_vkBindImageMemory2 = unsafe extern "system" fn(
    device: NonDisposableHandle,
    bind_info_count: u32,
    p_bind_infos: *const VkBindImageMemoryInfo,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetDeviceMask.html>"]
pub type PFN_vkCmdSetDeviceMask = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    device_mask: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDeviceGroupPresentCapabilitiesKHR.html>"]
pub type PFN_vkGetDeviceGroupPresentCapabilitiesKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_device_group_present_capabilities: *mut VkDeviceGroupPresentCapabilitiesKHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDeviceGroupSurfacePresentModesKHR.html>"]
pub type PFN_vkGetDeviceGroupSurfacePresentModesKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    surface: NonDisposableHandle,
    p_modes: *mut VkDeviceGroupPresentModeFlagsKHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkAcquireNextImage2KHR.html>"]
pub type PFN_vkAcquireNextImage2KHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_acquire_info: *const VkAcquireNextImageInfoKHR,
    p_image_index: *mut u32,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDispatchBase.html>"]
pub type PFN_vkCmdDispatchBase = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    base_group_x: u32,
    base_group_y: u32,
    base_group_z: u32,
    group_count_x: u32,
    group_count_y: u32,
    group_count_z: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDevicePresentRectanglesKHR.html>"]
pub type PFN_vkGetPhysicalDevicePresentRectanglesKHR = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    surface: NonDisposableHandle,
    p_rect_count: *mut u32,
    p_rects: *mut VkRect2D,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateDescriptorUpdateTemplate.html>"]
pub type PFN_vkCreateDescriptorUpdateTemplate = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_create_info: *const VkDescriptorUpdateTemplateCreateInfo,
    p_allocator: *const VkAllocationCallbacks,
    p_descriptor_update_template: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyDescriptorUpdateTemplate.html>"]
pub type PFN_vkDestroyDescriptorUpdateTemplate = unsafe extern "system" fn(
    device: NonDisposableHandle,
    descriptor_update_template: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkUpdateDescriptorSetWithTemplate.html>"]
pub type PFN_vkUpdateDescriptorSetWithTemplate = unsafe extern "system" fn(
    device: NonDisposableHandle,
    descriptor_set: NonDisposableHandle,
    descriptor_update_template: NonDisposableHandle,
    p_data: *const c_void,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdPushDescriptorSetWithTemplateKHR.html>"]
pub type PFN_vkCmdPushDescriptorSetWithTemplateKHR = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    descriptor_update_template: NonDisposableHandle,
    layout: NonDisposableHandle,
    set: u32,
    p_data: *const c_void,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkSetHdrMetadataEXT.html>"]
pub type PFN_vkSetHdrMetadataEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    swapchain_count: u32,
    p_swapchains: *const NonDisposableHandle,
    p_metadata: *const VkHdrMetadataEXT,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetSwapchainStatusKHR.html>"]
pub type PFN_vkGetSwapchainStatusKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    swapchain: NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetRefreshCycleDurationGOOGLE.html>"]
pub type PFN_vkGetRefreshCycleDurationGOOGLE = unsafe extern "system" fn(
    device: NonDisposableHandle,
    swapchain: NonDisposableHandle,
    p_display_timing_properties: *mut VkRefreshCycleDurationGOOGLE,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPastPresentationTimingGOOGLE.html>"]
pub type PFN_vkGetPastPresentationTimingGOOGLE = unsafe extern "system" fn(
    device: NonDisposableHandle,
    swapchain: NonDisposableHandle,
    p_presentation_timing_count: *mut u32,
    p_presentation_timings: *mut VkPastPresentationTimingGOOGLE,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateIOSSurfaceMVK.html>"]
pub type PFN_vkCreateIOSSurfaceMVK = unsafe extern "system" fn(
    instance: NonDisposableHandle,
    p_create_info: *const VkIOSSurfaceCreateInfoMVK,
    p_allocator: *const VkAllocationCallbacks,
    p_surface: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateMacOSSurfaceMVK.html>"]
pub type PFN_vkCreateMacOSSurfaceMVK = unsafe extern "system" fn(
    instance: NonDisposableHandle,
    p_create_info: *const VkMacOSSurfaceCreateInfoMVK,
    p_allocator: *const VkAllocationCallbacks,
    p_surface: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateMetalSurfaceEXT.html>"]
pub type PFN_vkCreateMetalSurfaceEXT = unsafe extern "system" fn(
    instance: NonDisposableHandle,
    p_create_info: *const VkMetalSurfaceCreateInfoEXT,
    p_allocator: *const VkAllocationCallbacks,
    p_surface: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetViewportWScalingNV.html>"]
pub type PFN_vkCmdSetViewportWScalingNV = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    first_viewport: u32,
    viewport_count: u32,
    p_viewport_wscalings: *const VkViewportWScalingNV,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetDiscardRectangleEXT.html>"]
pub type PFN_vkCmdSetDiscardRectangleEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    first_discard_rectangle: u32,
    discard_rectangle_count: u32,
    p_discard_rectangles: *const VkRect2D,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetDiscardRectangleEnableEXT.html>"]
pub type PFN_vkCmdSetDiscardRectangleEnableEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    discard_rectangle_enable: vk::Bool32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetDiscardRectangleModeEXT.html>"]
pub type PFN_vkCmdSetDiscardRectangleModeEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    discard_rectangle_mode: VkDiscardRectangleModeEXT,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetSampleLocationsEXT.html>"]
pub type PFN_vkCmdSetSampleLocationsEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_sample_locations_info: *const VkSampleLocationsInfoEXT,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceMultisamplePropertiesEXT.html>"]
pub type PFN_vkGetPhysicalDeviceMultisamplePropertiesEXT = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    samples: vk::SampleCountFlags,
    p_multisample_properties: *mut VkMultisamplePropertiesEXT,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceSurfaceCapabilities2KHR.html>"]
pub type PFN_vkGetPhysicalDeviceSurfaceCapabilities2KHR = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    p_surface_info: *const VkPhysicalDeviceSurfaceInfo2KHR,
    p_surface_capabilities: *mut VkSurfaceCapabilities2KHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceSurfaceFormats2KHR.html>"]
pub type PFN_vkGetPhysicalDeviceSurfaceFormats2KHR = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    p_surface_info: *const VkPhysicalDeviceSurfaceInfo2KHR,
    p_surface_format_count: *mut u32,
    p_surface_formats: *mut VkSurfaceFormat2KHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceDisplayProperties2KHR.html>"]
pub type PFN_vkGetPhysicalDeviceDisplayProperties2KHR = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    p_property_count: *mut u32,
    p_properties: *mut VkDisplayProperties2KHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceDisplayPlaneProperties2KHR.html>"]
pub type PFN_vkGetPhysicalDeviceDisplayPlaneProperties2KHR = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    p_property_count: *mut u32,
    p_properties: *mut VkDisplayPlaneProperties2KHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDisplayModeProperties2KHR.html>"]
pub type PFN_vkGetDisplayModeProperties2KHR = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    display: NonDisposableHandle,
    p_property_count: *mut u32,
    p_properties: *mut VkDisplayModeProperties2KHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDisplayPlaneCapabilities2KHR.html>"]
pub type PFN_vkGetDisplayPlaneCapabilities2KHR = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    p_display_plane_info: *const VkDisplayPlaneInfo2KHR,
    p_capabilities: *mut VkDisplayPlaneCapabilities2KHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetBufferMemoryRequirements2.html>"]
pub type PFN_vkGetBufferMemoryRequirements2 = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_info: *const VkBufferMemoryRequirementsInfo2,
    p_memory_requirements: *mut VkMemoryRequirements2,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetImageMemoryRequirements2.html>"]
pub type PFN_vkGetImageMemoryRequirements2 = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_info: *const VkImageMemoryRequirementsInfo2,
    p_memory_requirements: *mut VkMemoryRequirements2,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetImageSparseMemoryRequirements2.html>"]
pub type PFN_vkGetImageSparseMemoryRequirements2 = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_info: *const VkImageSparseMemoryRequirementsInfo2,
    p_sparse_memory_requirement_count: *mut u32,
    p_sparse_memory_requirements: *mut VkSparseImageMemoryRequirements2,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDeviceBufferMemoryRequirements.html>"]
pub type PFN_vkGetDeviceBufferMemoryRequirements = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_info: *const VkDeviceBufferMemoryRequirements,
    p_memory_requirements: *mut VkMemoryRequirements2,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDeviceImageMemoryRequirements.html>"]
pub type PFN_vkGetDeviceImageMemoryRequirements = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_info: *const VkDeviceImageMemoryRequirements,
    p_memory_requirements: *mut VkMemoryRequirements2,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDeviceImageSparseMemoryRequirements.html>"]
pub type PFN_vkGetDeviceImageSparseMemoryRequirements = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_info: *const VkDeviceImageMemoryRequirements,
    p_sparse_memory_requirement_count: *mut u32,
    p_sparse_memory_requirements: *mut VkSparseImageMemoryRequirements2,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateSamplerYcbcrConversion.html>"]
pub type PFN_vkCreateSamplerYcbcrConversion = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_create_info: *const VkSamplerYcbcrConversionCreateInfo,
    p_allocator: *const VkAllocationCallbacks,
    p_ycbcr_conversion: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroySamplerYcbcrConversion.html>"]
pub type PFN_vkDestroySamplerYcbcrConversion = unsafe extern "system" fn(
    device: NonDisposableHandle,
    ycbcr_conversion: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDeviceQueue2.html>"]
pub type PFN_vkGetDeviceQueue2 = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_queue_info: *const VkDeviceQueueInfo2,
    p_queue: *mut NonDisposableHandle,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateValidationCacheEXT.html>"]
pub type PFN_vkCreateValidationCacheEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_create_info: *const VkValidationCacheCreateInfoEXT,
    p_allocator: *const VkAllocationCallbacks,
    p_validation_cache: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyValidationCacheEXT.html>"]
pub type PFN_vkDestroyValidationCacheEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    validation_cache: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetValidationCacheDataEXT.html>"]
pub type PFN_vkGetValidationCacheDataEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    validation_cache: NonDisposableHandle,
    p_data_size: *mut usize,
    p_data: *mut c_void,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkMergeValidationCachesEXT.html>"]
pub type PFN_vkMergeValidationCachesEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    dst_cache: NonDisposableHandle,
    src_cache_count: u32,
    p_src_caches: *const NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDescriptorSetLayoutSupport.html>"]
pub type PFN_vkGetDescriptorSetLayoutSupport = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_create_info: *const VkDescriptorSetLayoutCreateInfo,
    p_support: *mut VkDescriptorSetLayoutSupport,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetSwapchainGrallocUsageANDROID.html>"]
pub type PFN_vkGetSwapchainGrallocUsageANDROID = unsafe extern "system" fn(
    device: NonDisposableHandle,
    format: VkFormat,
    image_usage: VkImageUsageFlags,
    gralloc_usage: *mut std::os::raw::c_int,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetSwapchainGrallocUsage2ANDROID.html>"]
pub type PFN_vkGetSwapchainGrallocUsage2ANDROID = unsafe extern "system" fn(
    device: NonDisposableHandle,
    format: VkFormat,
    image_usage: VkImageUsageFlags,
    swapchain_image_usage: VkSwapchainImageUsageFlagsANDROID,
    gralloc_consumer_usage: *mut u64,
    gralloc_producer_usage: *mut u64,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkAcquireImageANDROID.html>"]
pub type PFN_vkAcquireImageANDROID = unsafe extern "system" fn(
    device: NonDisposableHandle,
    image: NonDisposableHandle,
    native_fence_fd: std::os::raw::c_int,
    semaphore: NonDisposableHandle,
    fence: NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkQueueSignalReleaseImageANDROID.html>"]
pub type PFN_vkQueueSignalReleaseImageANDROID = unsafe extern "system" fn(
    queue: NonDisposableHandle,
    wait_semaphore_count: u32,
    p_wait_semaphores: *const NonDisposableHandle,
    image: NonDisposableHandle,
    p_native_fence_fd: *mut std::os::raw::c_int,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetShaderInfoAMD.html>"]
pub type PFN_vkGetShaderInfoAMD = unsafe extern "system" fn(
    device: NonDisposableHandle,
    pipeline: NonDisposableHandle,
    shader_stage: vk::ShaderStageFlags,
    info_type: VkShaderInfoTypeAMD,
    p_info_size: *mut usize,
    p_info: *mut c_void,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkSetLocalDimmingAMD.html>"]
pub type PFN_vkSetLocalDimmingAMD = unsafe extern "system" fn(
    device: NonDisposableHandle,
    swap_chain: NonDisposableHandle,
    local_dimming_enable: vk::Bool32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceCalibrateableTimeDomainsKHR.html>"]
pub type PFN_vkGetPhysicalDeviceCalibrateableTimeDomainsKHR = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    p_time_domain_count: *mut u32,
    p_time_domains: *mut VkTimeDomainKHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetCalibratedTimestampsKHR.html>"]
pub type PFN_vkGetCalibratedTimestampsKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    timestamp_count: u32,
    p_timestamp_infos: *const VkCalibratedTimestampInfoKHR,
    p_timestamps: *mut u64,
    p_max_deviation: *mut u64,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkSetDebugUtilsObjectNameEXT.html>"]
pub type PFN_vkSetDebugUtilsObjectNameEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_name_info: *const VkDebugUtilsObjectNameInfoEXT,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkSetDebugUtilsObjectTagEXT.html>"]
pub type PFN_vkSetDebugUtilsObjectTagEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_tag_info: *const VkDebugUtilsObjectTagInfoEXT,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkQueueBeginDebugUtilsLabelEXT.html>"]
pub type PFN_vkQueueBeginDebugUtilsLabelEXT = unsafe extern "system" fn(
    queue: NonDisposableHandle,
    p_label_info: *const VkDebugUtilsLabelEXT,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkQueueEndDebugUtilsLabelEXT.html>"]
pub type PFN_vkQueueEndDebugUtilsLabelEXT = unsafe extern "system" fn(
    queue: NonDisposableHandle,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkQueueInsertDebugUtilsLabelEXT.html>"]
pub type PFN_vkQueueInsertDebugUtilsLabelEXT = unsafe extern "system" fn(
    queue: NonDisposableHandle,
    p_label_info: *const VkDebugUtilsLabelEXT,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBeginDebugUtilsLabelEXT.html>"]
pub type PFN_vkCmdBeginDebugUtilsLabelEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_label_info: *const VkDebugUtilsLabelEXT,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdEndDebugUtilsLabelEXT.html>"]
pub type PFN_vkCmdEndDebugUtilsLabelEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdInsertDebugUtilsLabelEXT.html>"]
pub type PFN_vkCmdInsertDebugUtilsLabelEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_label_info: *const VkDebugUtilsLabelEXT,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateDebugUtilsMessengerEXT.html>"]
pub type PFN_vkCreateDebugUtilsMessengerEXT = unsafe extern "system" fn(
    instance: NonDisposableHandle,
    p_create_info: *const VkDebugUtilsMessengerCreateInfoEXT,
    p_allocator: *const VkAllocationCallbacks,
    p_messenger: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyDebugUtilsMessengerEXT.html>"]
pub type PFN_vkDestroyDebugUtilsMessengerEXT = unsafe extern "system" fn(
    instance: NonDisposableHandle,
    messenger: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkSubmitDebugUtilsMessageEXT.html>"]
pub type PFN_vkSubmitDebugUtilsMessageEXT = unsafe extern "system" fn(
    instance: NonDisposableHandle,
    message_severity: vk::DebugUtilsMessageSeverityFlagsEXT,
    message_types: VkDebugUtilsMessageTypeFlagsEXT,
    p_callback_data: *const VkDebugUtilsMessengerCallbackDataEXT,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetMemoryHostPointerPropertiesEXT.html>"]
pub type PFN_vkGetMemoryHostPointerPropertiesEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    handle_type: vk::ExternalMemoryHandleTypeFlags,
    p_host_pointer: *const c_void,
    p_memory_host_pointer_properties: *mut VkMemoryHostPointerPropertiesEXT,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdWriteBufferMarkerAMD.html>"]
pub type PFN_vkCmdWriteBufferMarkerAMD = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    pipeline_stage: vk::PipelineStageFlags,
    dst_buffer: NonDisposableHandle,
    dst_offset: vk::DeviceSize,
    marker: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateRenderPass2.html>"]
pub type PFN_vkCreateRenderPass2 = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_create_info: *const VkRenderPassCreateInfo2,
    p_allocator: *const VkAllocationCallbacks,
    p_render_pass: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBeginRenderPass2.html>"]
pub type PFN_vkCmdBeginRenderPass2 = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_render_pass_begin: *const VkRenderPassBeginInfo,
    p_subpass_begin_info: *const VkSubpassBeginInfo,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdNextSubpass2.html>"]
pub type PFN_vkCmdNextSubpass2 = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_subpass_begin_info: *const VkSubpassBeginInfo,
    p_subpass_end_info: *const VkSubpassEndInfo,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdEndRenderPass2.html>"]
pub type PFN_vkCmdEndRenderPass2 = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_subpass_end_info: *const VkSubpassEndInfo,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetSemaphoreCounterValue.html>"]
pub type PFN_vkGetSemaphoreCounterValue = unsafe extern "system" fn(
    device: NonDisposableHandle,
    semaphore: NonDisposableHandle,
    p_value: *mut u64,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkWaitSemaphores.html>"]
pub type PFN_vkWaitSemaphores = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_wait_info: *const VkSemaphoreWaitInfo,
    timeout: u64,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkSignalSemaphore.html>"]
pub type PFN_vkSignalSemaphore = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_signal_info: *const VkSemaphoreSignalInfo,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetAndroidHardwareBufferPropertiesANDROID.html>"]
pub type PFN_vkGetAndroidHardwareBufferPropertiesANDROID = unsafe extern "system" fn(
    device: NonDisposableHandle,
    buffer: *const usize,
    p_properties: *mut VkAndroidHardwareBufferPropertiesANDROID,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetMemoryAndroidHardwareBufferANDROID.html>"]
pub type PFN_vkGetMemoryAndroidHardwareBufferANDROID = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_info: *const VkMemoryGetAndroidHardwareBufferInfoANDROID,
    p_buffer: *mut *mut usize,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDrawIndirectCount.html>"]
pub type PFN_vkCmdDrawIndirectCount = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    buffer: NonDisposableHandle,
    offset: vk::DeviceSize,
    count_buffer: NonDisposableHandle,
    count_buffer_offset: vk::DeviceSize,
    max_draw_count: u32,
    stride: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDrawIndexedIndirectCount.html>"]
pub type PFN_vkCmdDrawIndexedIndirectCount = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    buffer: NonDisposableHandle,
    offset: vk::DeviceSize,
    count_buffer: NonDisposableHandle,
    count_buffer_offset: vk::DeviceSize,
    max_draw_count: u32,
    stride: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetCheckpointNV.html>"]
pub type PFN_vkCmdSetCheckpointNV = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_checkpoint_marker: *const c_void,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetQueueCheckpointDataNV.html>"]
pub type PFN_vkGetQueueCheckpointDataNV = unsafe extern "system" fn(
    queue: NonDisposableHandle,
    p_checkpoint_data_count: *mut u32,
    p_checkpoint_data: *mut VkCheckpointDataNV,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBindTransformFeedbackBuffersEXT.html>"]
pub type PFN_vkCmdBindTransformFeedbackBuffersEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    first_binding: u32,
    binding_count: u32,
    p_buffers: *const NonDisposableHandle,
    p_offsets: *const vk::DeviceSize,
    p_sizes: *const vk::DeviceSize,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBeginTransformFeedbackEXT.html>"]
pub type PFN_vkCmdBeginTransformFeedbackEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    first_counter_buffer: u32,
    counter_buffer_count: u32,
    p_counter_buffers: *const NonDisposableHandle,
    p_counter_buffer_offsets: *const vk::DeviceSize,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdEndTransformFeedbackEXT.html>"]
pub type PFN_vkCmdEndTransformFeedbackEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    first_counter_buffer: u32,
    counter_buffer_count: u32,
    p_counter_buffers: *const NonDisposableHandle,
    p_counter_buffer_offsets: *const vk::DeviceSize,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBeginQueryIndexedEXT.html>"]
pub type PFN_vkCmdBeginQueryIndexedEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    query_pool: NonDisposableHandle,
    query: u32,
    flags: VkQueryControlFlags,
    index: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdEndQueryIndexedEXT.html>"]
pub type PFN_vkCmdEndQueryIndexedEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    query_pool: NonDisposableHandle,
    query: u32,
    index: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDrawIndirectByteCountEXT.html>"]
pub type PFN_vkCmdDrawIndirectByteCountEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    instance_count: u32,
    first_instance: u32,
    counter_buffer: NonDisposableHandle,
    counter_buffer_offset: vk::DeviceSize,
    counter_offset: u32,
    vertex_stride: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetExclusiveScissorNV.html>"]
pub type PFN_vkCmdSetExclusiveScissorNV = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    first_exclusive_scissor: u32,
    exclusive_scissor_count: u32,
    p_exclusive_scissors: *const VkRect2D,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetExclusiveScissorEnableNV.html>"]
pub type PFN_vkCmdSetExclusiveScissorEnableNV = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    first_exclusive_scissor: u32,
    exclusive_scissor_count: u32,
    p_exclusive_scissor_enables: *const vk::Bool32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBindShadingRateImageNV.html>"]
pub type PFN_vkCmdBindShadingRateImageNV = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    image_view: NonDisposableHandle,
    image_layout: VkImageLayout,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetViewportShadingRatePaletteNV.html>"]
pub type PFN_vkCmdSetViewportShadingRatePaletteNV = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    first_viewport: u32,
    viewport_count: u32,
    p_shading_rate_palettes: *const VkShadingRatePaletteNV,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetCoarseSampleOrderNV.html>"]
pub type PFN_vkCmdSetCoarseSampleOrderNV = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    sample_order_type: VkCoarseSampleOrderTypeNV,
    custom_sample_order_count: u32,
    p_custom_sample_orders: *const VkCoarseSampleOrderCustomNV,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDrawMeshTasksNV.html>"]
pub type PFN_vkCmdDrawMeshTasksNV = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    task_count: u32,
    first_task: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDrawMeshTasksIndirectNV.html>"]
pub type PFN_vkCmdDrawMeshTasksIndirectNV = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    buffer: NonDisposableHandle,
    offset: vk::DeviceSize,
    draw_count: u32,
    stride: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDrawMeshTasksIndirectCountNV.html>"]
pub type PFN_vkCmdDrawMeshTasksIndirectCountNV = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    buffer: NonDisposableHandle,
    offset: vk::DeviceSize,
    count_buffer: NonDisposableHandle,
    count_buffer_offset: vk::DeviceSize,
    max_draw_count: u32,
    stride: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDrawMeshTasksEXT.html>"]
pub type PFN_vkCmdDrawMeshTasksEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    group_count_x: u32,
    group_count_y: u32,
    group_count_z: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDrawMeshTasksIndirectEXT.html>"]
pub type PFN_vkCmdDrawMeshTasksIndirectEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    buffer: NonDisposableHandle,
    offset: vk::DeviceSize,
    draw_count: u32,
    stride: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDrawMeshTasksIndirectCountEXT.html>"]
pub type PFN_vkCmdDrawMeshTasksIndirectCountEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    buffer: NonDisposableHandle,
    offset: vk::DeviceSize,
    count_buffer: NonDisposableHandle,
    count_buffer_offset: vk::DeviceSize,
    max_draw_count: u32,
    stride: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCompileDeferredNV.html>"]
pub type PFN_vkCompileDeferredNV = unsafe extern "system" fn(
    device: NonDisposableHandle,
    pipeline: NonDisposableHandle,
    shader: u32,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateAccelerationStructureNV.html>"]
pub type PFN_vkCreateAccelerationStructureNV = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_create_info: *const VkAccelerationStructureCreateInfoNV,
    p_allocator: *const VkAllocationCallbacks,
    p_acceleration_structure: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBindInvocationMaskHUAWEI.html>"]
pub type PFN_vkCmdBindInvocationMaskHUAWEI = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    image_view: NonDisposableHandle,
    image_layout: VkImageLayout,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyAccelerationStructureKHR.html>"]
pub type PFN_vkDestroyAccelerationStructureKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    acceleration_structure: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyAccelerationStructureNV.html>"]
pub type PFN_vkDestroyAccelerationStructureNV = unsafe extern "system" fn(
    device: NonDisposableHandle,
    acceleration_structure: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetAccelerationStructureMemoryRequirementsNV.html>"]
pub type PFN_vkGetAccelerationStructureMemoryRequirementsNV = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_info: *const VkAccelerationStructureMemoryRequirementsInfoNV,
    p_memory_requirements: *mut vk::MemoryRequirements2KHR,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkBindAccelerationStructureMemoryNV.html>"]
pub type PFN_vkBindAccelerationStructureMemoryNV = unsafe extern "system" fn(
    device: NonDisposableHandle,
    bind_info_count: u32,
    p_bind_infos: *const VkBindAccelerationStructureMemoryInfoNV,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCopyAccelerationStructureNV.html>"]
pub type PFN_vkCmdCopyAccelerationStructureNV = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    dst: NonDisposableHandle,
    src: NonDisposableHandle,
    mode: VkCopyAccelerationStructureModeKHR,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCopyAccelerationStructureKHR.html>"]
pub type PFN_vkCmdCopyAccelerationStructureKHR = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_info: *const VkCopyAccelerationStructureInfoKHR,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCopyAccelerationStructureKHR.html>"]
pub type PFN_vkCopyAccelerationStructureKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    deferred_operation: NonDisposableHandle,
    p_info: *const VkCopyAccelerationStructureInfoKHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCopyAccelerationStructureToMemoryKHR.html>"]
pub type PFN_vkCmdCopyAccelerationStructureToMemoryKHR = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_info: *const VkCopyAccelerationStructureToMemoryInfoKHR,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCopyAccelerationStructureToMemoryKHR.html>"]
pub type PFN_vkCopyAccelerationStructureToMemoryKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    deferred_operation: NonDisposableHandle,
    p_info: *const VkCopyAccelerationStructureToMemoryInfoKHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCopyMemoryToAccelerationStructureKHR.html>"]
pub type PFN_vkCmdCopyMemoryToAccelerationStructureKHR = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_info: *const VkCopyMemoryToAccelerationStructureInfoKHR,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCopyMemoryToAccelerationStructureKHR.html>"]
pub type PFN_vkCopyMemoryToAccelerationStructureKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    deferred_operation: NonDisposableHandle,
    p_info: *const VkCopyMemoryToAccelerationStructureInfoKHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdWriteAccelerationStructuresPropertiesKHR.html>"]
pub type PFN_vkCmdWriteAccelerationStructuresPropertiesKHR = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    acceleration_structure_count: u32,
    p_acceleration_structures: *const NonDisposableHandle,
    query_type: VkQueryType,
    query_pool: NonDisposableHandle,
    first_query: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdWriteAccelerationStructuresPropertiesNV.html>"]
pub type PFN_vkCmdWriteAccelerationStructuresPropertiesNV = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    acceleration_structure_count: u32,
    p_acceleration_structures: *const NonDisposableHandle,
    query_type: VkQueryType,
    query_pool: NonDisposableHandle,
    first_query: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBuildAccelerationStructureNV.html>"]
pub type PFN_vkCmdBuildAccelerationStructureNV = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_info: *const VkAccelerationStructureInfoNV,
    instance_data: NonDisposableHandle,
    instance_offset: vk::DeviceSize,
    update: vk::Bool32,
    dst: NonDisposableHandle,
    src: NonDisposableHandle,
    scratch: NonDisposableHandle,
    scratch_offset: vk::DeviceSize,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkWriteAccelerationStructuresPropertiesKHR.html>"]
pub type PFN_vkWriteAccelerationStructuresPropertiesKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    acceleration_structure_count: u32,
    p_acceleration_structures: *const NonDisposableHandle,
    query_type: VkQueryType,
    data_size: usize,
    p_data: *mut c_void,
    stride: usize,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdTraceRaysKHR.html>"]
pub type PFN_vkCmdTraceRaysKHR = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_raygen_shader_binding_table: *const VkStridedDeviceAddressRegionKHR,
    p_miss_shader_binding_table: *const VkStridedDeviceAddressRegionKHR,
    p_hit_shader_binding_table: *const VkStridedDeviceAddressRegionKHR,
    p_callable_shader_binding_table: *const VkStridedDeviceAddressRegionKHR,
    width: u32,
    height: u32,
    depth: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdTraceRaysNV.html>"]
pub type PFN_vkCmdTraceRaysNV = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    raygen_shader_binding_table_buffer: NonDisposableHandle,
    raygen_shader_binding_offset: vk::DeviceSize,
    miss_shader_binding_table_buffer: NonDisposableHandle,
    miss_shader_binding_offset: vk::DeviceSize,
    miss_shader_binding_stride: vk::DeviceSize,
    hit_shader_binding_table_buffer: NonDisposableHandle,
    hit_shader_binding_offset: vk::DeviceSize,
    hit_shader_binding_stride: vk::DeviceSize,
    callable_shader_binding_table_buffer: NonDisposableHandle,
    callable_shader_binding_offset: vk::DeviceSize,
    callable_shader_binding_stride: vk::DeviceSize,
    width: u32,
    height: u32,
    depth: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetRayTracingShaderGroupHandlesKHR.html>"]
pub type PFN_vkGetRayTracingShaderGroupHandlesKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    pipeline: NonDisposableHandle,
    first_group: u32,
    group_count: u32,
    data_size: usize,
    p_data: *mut c_void,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetRayTracingCaptureReplayShaderGroupHandlesKHR.html>"]
pub type PFN_vkGetRayTracingCaptureReplayShaderGroupHandlesKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    pipeline: NonDisposableHandle,
    first_group: u32,
    group_count: u32,
    data_size: usize,
    p_data: *mut c_void,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetAccelerationStructureHandleNV.html>"]
pub type PFN_vkGetAccelerationStructureHandleNV = unsafe extern "system" fn(
    device: NonDisposableHandle,
    acceleration_structure: NonDisposableHandle,
    data_size: usize,
    p_data: *mut c_void,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateRayTracingPipelinesNV.html>"]
pub type PFN_vkCreateRayTracingPipelinesNV = unsafe extern "system" fn(
    device: NonDisposableHandle,
    pipeline_cache: NonDisposableHandle,
    create_info_count: u32,
    p_create_infos: *const VkRayTracingPipelineCreateInfoNV,
    p_allocator: *const VkAllocationCallbacks,
    p_pipelines: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateRayTracingPipelinesKHR.html>"]
pub type PFN_vkCreateRayTracingPipelinesKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    deferred_operation: NonDisposableHandle,
    pipeline_cache: NonDisposableHandle,
    create_info_count: u32,
    p_create_infos: *const VkRayTracingPipelineCreateInfoKHR,
    p_allocator: *const VkAllocationCallbacks,
    p_pipelines: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceCooperativeMatrixPropertiesNV.html>"]
pub type PFN_vkGetPhysicalDeviceCooperativeMatrixPropertiesNV = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    p_property_count: *mut u32,
    p_properties: *mut VkCooperativeMatrixPropertiesNV,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdTraceRaysIndirectKHR.html>"]
pub type PFN_vkCmdTraceRaysIndirectKHR = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_raygen_shader_binding_table: *const VkStridedDeviceAddressRegionKHR,
    p_miss_shader_binding_table: *const VkStridedDeviceAddressRegionKHR,
    p_hit_shader_binding_table: *const VkStridedDeviceAddressRegionKHR,
    p_callable_shader_binding_table: *const VkStridedDeviceAddressRegionKHR,
    indirect_device_address: vk::DeviceAddress,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdTraceRaysIndirect2KHR.html>"]
pub type PFN_vkCmdTraceRaysIndirect2KHR = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    indirect_device_address: vk::DeviceAddress,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDeviceAccelerationStructureCompatibilityKHR.html>"]
pub type PFN_vkGetDeviceAccelerationStructureCompatibilityKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_version_info: *const VkAccelerationStructureVersionInfoKHR,
    p_compatibility: *mut VkAccelerationStructureCompatibilityKHR,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetRayTracingShaderGroupStackSizeKHR.html>"]
pub type PFN_vkGetRayTracingShaderGroupStackSizeKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    pipeline: NonDisposableHandle,
    group: u32,
    group_shader: VkShaderGroupShaderKHR,
) -> vk::DeviceSize;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetRayTracingPipelineStackSizeKHR.html>"]
pub type PFN_vkCmdSetRayTracingPipelineStackSizeKHR = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    pipeline_stack_size: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetImageViewHandleNVX.html>"]
pub type PFN_vkGetImageViewHandleNVX = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_info: *const VkImageViewHandleInfoNVX,
) -> u32;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetImageViewAddressNVX.html>"]
pub type PFN_vkGetImageViewAddressNVX = unsafe extern "system" fn(
    device: NonDisposableHandle,
    image_view: NonDisposableHandle,
    p_properties: *mut VkImageViewAddressPropertiesNVX,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceSurfacePresentModes2EXT.html>"]
pub type PFN_vkGetPhysicalDeviceSurfacePresentModes2EXT = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    p_surface_info: *const VkPhysicalDeviceSurfaceInfo2KHR,
    p_present_mode_count: *mut u32,
    p_present_modes: *mut VkPresentModeKHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDeviceGroupSurfacePresentModes2EXT.html>"]
pub type PFN_vkGetDeviceGroupSurfacePresentModes2EXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_surface_info: *const VkPhysicalDeviceSurfaceInfo2KHR,
    p_modes: *mut VkDeviceGroupPresentModeFlagsKHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkAcquireFullScreenExclusiveModeEXT.html>"]
pub type PFN_vkAcquireFullScreenExclusiveModeEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    swapchain: NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkReleaseFullScreenExclusiveModeEXT.html>"]
pub type PFN_vkReleaseFullScreenExclusiveModeEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    swapchain: NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR.html>"]
pub type PFN_vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    queue_family_index: u32,
    p_counter_count: *mut u32,
    p_counters: *mut VkPerformanceCounterKHR,
    p_counter_descriptions: *mut VkPerformanceCounterDescriptionKHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR.html>"]
pub type PFN_vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    p_performance_query_create_info: *const VkQueryPoolPerformanceCreateInfoKHR,
    p_num_passes: *mut u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkAcquireProfilingLockKHR.html>"]
pub type PFN_vkAcquireProfilingLockKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_info: *const VkAcquireProfilingLockInfoKHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkReleaseProfilingLockKHR.html>"]
pub type PFN_vkReleaseProfilingLockKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetImageDrmFormatModifierPropertiesEXT.html>"]
pub type PFN_vkGetImageDrmFormatModifierPropertiesEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    image: NonDisposableHandle,
    p_properties: *mut VkImageDrmFormatModifierPropertiesEXT,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetBufferOpaqueCaptureAddress.html>"]
pub type PFN_vkGetBufferOpaqueCaptureAddress = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_info: *const VkBufferDeviceAddressInfo,
) -> u64;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetBufferDeviceAddress.html>"]
pub type PFN_vkGetBufferDeviceAddress = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_info: *const VkBufferDeviceAddressInfo,
) -> vk::DeviceAddress;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateHeadlessSurfaceEXT.html>"]
pub type PFN_vkCreateHeadlessSurfaceEXT = unsafe extern "system" fn(
    instance: NonDisposableHandle,
    p_create_info: *const VkHeadlessSurfaceCreateInfoEXT,
    p_allocator: *const VkAllocationCallbacks,
    p_surface: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV.html>"]
pub type PFN_vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    p_combination_count: *mut u32,
    p_combinations: *mut VkFramebufferMixedSamplesCombinationNV,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkInitializePerformanceApiINTEL.html>"]
pub type PFN_vkInitializePerformanceApiINTEL = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_initialize_info: *const VkInitializePerformanceApiInfoINTEL,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkUninitializePerformanceApiINTEL.html>"]
pub type PFN_vkUninitializePerformanceApiINTEL = unsafe extern "system" fn(
    device: NonDisposableHandle,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetPerformanceMarkerINTEL.html>"]
pub type PFN_vkCmdSetPerformanceMarkerINTEL = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_marker_info: *const VkPerformanceMarkerInfoINTEL,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetPerformanceStreamMarkerINTEL.html>"]
pub type PFN_vkCmdSetPerformanceStreamMarkerINTEL = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_marker_info: *const VkPerformanceStreamMarkerInfoINTEL,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetPerformanceOverrideINTEL.html>"]
pub type PFN_vkCmdSetPerformanceOverrideINTEL = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_override_info: *const VkPerformanceOverrideInfoINTEL,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkAcquirePerformanceConfigurationINTEL.html>"]
pub type PFN_vkAcquirePerformanceConfigurationINTEL = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_acquire_info: *const VkPerformanceConfigurationAcquireInfoINTEL,
    p_configuration: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkReleasePerformanceConfigurationINTEL.html>"]
pub type PFN_vkReleasePerformanceConfigurationINTEL = unsafe extern "system" fn(
    device: NonDisposableHandle,
    configuration: NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkQueueSetPerformanceConfigurationINTEL.html>"]
pub type PFN_vkQueueSetPerformanceConfigurationINTEL = unsafe extern "system" fn(
    queue: NonDisposableHandle,
    configuration: NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPerformanceParameterINTEL.html>"]
pub type PFN_vkGetPerformanceParameterINTEL = unsafe extern "system" fn(
    device: NonDisposableHandle,
    parameter: VkPerformanceParameterTypeINTEL,
    p_value: *mut VkPerformanceValueINTEL,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDeviceMemoryOpaqueCaptureAddress.html>"]
pub type PFN_vkGetDeviceMemoryOpaqueCaptureAddress = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_info: *const VkDeviceMemoryOpaqueCaptureAddressInfo,
) -> u64;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPipelineExecutablePropertiesKHR.html>"]
pub type PFN_vkGetPipelineExecutablePropertiesKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_pipeline_info: *const VkPipelineInfoKHR,
    p_executable_count: *mut u32,
    p_properties: *mut VkPipelineExecutablePropertiesKHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPipelineExecutableStatisticsKHR.html>"]
pub type PFN_vkGetPipelineExecutableStatisticsKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_executable_info: *const VkPipelineExecutableInfoKHR,
    p_statistic_count: *mut u32,
    p_statistics: *mut VkPipelineExecutableStatisticKHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPipelineExecutableInternalRepresentationsKHR.html>"]
pub type PFN_vkGetPipelineExecutableInternalRepresentationsKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_executable_info: *const VkPipelineExecutableInfoKHR,
    p_internal_representation_count: *mut u32,
    p_internal_representations: *mut VkPipelineExecutableInternalRepresentationKHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetLineStippleKHR.html>"]
pub type PFN_vkCmdSetLineStippleKHR = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    line_stipple_factor: u32,
    line_stipple_pattern: u16,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceToolProperties.html>"]
pub type PFN_vkGetPhysicalDeviceToolProperties = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    p_tool_count: *mut u32,
    p_tool_properties: *mut VkPhysicalDeviceToolProperties,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateAccelerationStructureKHR.html>"]
pub type PFN_vkCreateAccelerationStructureKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_create_info: *const VkAccelerationStructureCreateInfoKHR,
    p_allocator: *const VkAllocationCallbacks,
    p_acceleration_structure: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBuildAccelerationStructuresKHR.html>"]
pub type PFN_vkCmdBuildAccelerationStructuresKHR = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    info_count: u32,
    p_infos: *const VkAccelerationStructureBuildGeometryInfoKHR,
    pp_build_range_infos: *const *const VkAccelerationStructureBuildRangeInfoKHR,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBuildAccelerationStructuresIndirectKHR.html>"]
pub type PFN_vkCmdBuildAccelerationStructuresIndirectKHR = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    info_count: u32,
    p_infos: *const VkAccelerationStructureBuildGeometryInfoKHR,
    p_indirect_device_addresses: *const vk::DeviceAddress,
    p_indirect_strides: *const u32,
    pp_max_primitive_counts: *const *const u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkBuildAccelerationStructuresKHR.html>"]
pub type PFN_vkBuildAccelerationStructuresKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    deferred_operation: NonDisposableHandle,
    info_count: u32,
    p_infos: *const VkAccelerationStructureBuildGeometryInfoKHR,
    pp_build_range_infos: *const *const VkAccelerationStructureBuildRangeInfoKHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetAccelerationStructureDeviceAddressKHR.html>"]
pub type PFN_vkGetAccelerationStructureDeviceAddressKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_info: *const VkAccelerationStructureDeviceAddressInfoKHR,
) -> vk::DeviceAddress;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateDeferredOperationKHR.html>"]
pub type PFN_vkCreateDeferredOperationKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
    p_deferred_operation: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyDeferredOperationKHR.html>"]
pub type PFN_vkDestroyDeferredOperationKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    operation: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDeferredOperationMaxConcurrencyKHR.html>"]
pub type PFN_vkGetDeferredOperationMaxConcurrencyKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    operation: NonDisposableHandle,
) -> u32;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDeferredOperationResultKHR.html>"]
pub type PFN_vkGetDeferredOperationResultKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    operation: NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDeferredOperationJoinKHR.html>"]
pub type PFN_vkDeferredOperationJoinKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    operation: NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPipelineIndirectMemoryRequirementsNV.html>"]
pub type PFN_vkGetPipelineIndirectMemoryRequirementsNV = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_create_info: *const VkComputePipelineCreateInfo,
    p_memory_requirements: *mut VkMemoryRequirements2,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPipelineIndirectDeviceAddressNV.html>"]
pub type PFN_vkGetPipelineIndirectDeviceAddressNV = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_info: *const VkPipelineIndirectDeviceAddressInfoNV,
) -> vk::DeviceAddress;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetCullMode.html>"]
pub type PFN_vkCmdSetCullMode = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    cull_mode: VkCullModeFlags,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetFrontFace.html>"]
pub type PFN_vkCmdSetFrontFace = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    front_face: VkFrontFace,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetPrimitiveTopology.html>"]
pub type PFN_vkCmdSetPrimitiveTopology = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    primitive_topology: VkPrimitiveTopology,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetViewportWithCount.html>"]
pub type PFN_vkCmdSetViewportWithCount = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    viewport_count: u32,
    p_viewports: *const VkViewport,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetScissorWithCount.html>"]
pub type PFN_vkCmdSetScissorWithCount = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    scissor_count: u32,
    p_scissors: *const VkRect2D,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBindIndexBuffer2KHR.html>"]
pub type PFN_vkCmdBindIndexBuffer2KHR = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    buffer: NonDisposableHandle,
    offset: vk::DeviceSize,
    size: vk::DeviceSize,
    index_type: VkIndexType,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBindVertexBuffers2.html>"]
pub type PFN_vkCmdBindVertexBuffers2 = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    first_binding: u32,
    binding_count: u32,
    p_buffers: *const NonDisposableHandle,
    p_offsets: *const vk::DeviceSize,
    p_sizes: *const vk::DeviceSize,
    p_strides: *const vk::DeviceSize,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetDepthTestEnable.html>"]
pub type PFN_vkCmdSetDepthTestEnable = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    depth_test_enable: vk::Bool32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetDepthWriteEnable.html>"]
pub type PFN_vkCmdSetDepthWriteEnable = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    depth_write_enable: vk::Bool32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetDepthCompareOp.html>"]
pub type PFN_vkCmdSetDepthCompareOp = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    depth_compare_op: VkCompareOp,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetDepthBoundsTestEnable.html>"]
pub type PFN_vkCmdSetDepthBoundsTestEnable = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    depth_bounds_test_enable: vk::Bool32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetStencilTestEnable.html>"]
pub type PFN_vkCmdSetStencilTestEnable = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    stencil_test_enable: vk::Bool32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetStencilOp.html>"]
pub type PFN_vkCmdSetStencilOp = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    face_mask: VkStencilFaceFlags,
    fail_op: VkStencilOp,
    pass_op: VkStencilOp,
    depth_fail_op: VkStencilOp,
    compare_op: VkCompareOp,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetPatchControlPointsEXT.html>"]
pub type PFN_vkCmdSetPatchControlPointsEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    patch_control_points: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetRasterizerDiscardEnable.html>"]
pub type PFN_vkCmdSetRasterizerDiscardEnable = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    rasterizer_discard_enable: vk::Bool32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetDepthBiasEnable.html>"]
pub type PFN_vkCmdSetDepthBiasEnable = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    depth_bias_enable: vk::Bool32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetLogicOpEXT.html>"]
pub type PFN_vkCmdSetLogicOpEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    logic_op: VkLogicOp,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetPrimitiveRestartEnable.html>"]
pub type PFN_vkCmdSetPrimitiveRestartEnable = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    primitive_restart_enable: vk::Bool32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetTessellationDomainOriginEXT.html>"]
pub type PFN_vkCmdSetTessellationDomainOriginEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    domain_origin: VkTessellationDomainOrigin,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetDepthClampEnableEXT.html>"]
pub type PFN_vkCmdSetDepthClampEnableEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    depth_clamp_enable: vk::Bool32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetPolygonModeEXT.html>"]
pub type PFN_vkCmdSetPolygonModeEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    polygon_mode: VkPolygonMode,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetRasterizationSamplesEXT.html>"]
pub type PFN_vkCmdSetRasterizationSamplesEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    rasterization_samples: vk::SampleCountFlags,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetSampleMaskEXT.html>"]
pub type PFN_vkCmdSetSampleMaskEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    samples: vk::SampleCountFlags,
    p_sample_mask: *const vk::SampleMask,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetAlphaToCoverageEnableEXT.html>"]
pub type PFN_vkCmdSetAlphaToCoverageEnableEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    alpha_to_coverage_enable: vk::Bool32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetAlphaToOneEnableEXT.html>"]
pub type PFN_vkCmdSetAlphaToOneEnableEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    alpha_to_one_enable: vk::Bool32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetLogicOpEnableEXT.html>"]
pub type PFN_vkCmdSetLogicOpEnableEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    logic_op_enable: vk::Bool32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetColorBlendEnableEXT.html>"]
pub type PFN_vkCmdSetColorBlendEnableEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    first_attachment: u32,
    attachment_count: u32,
    p_color_blend_enables: *const vk::Bool32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetColorBlendEquationEXT.html>"]
pub type PFN_vkCmdSetColorBlendEquationEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    first_attachment: u32,
    attachment_count: u32,
    p_color_blend_equations: *const VkColorBlendEquationEXT,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetColorWriteMaskEXT.html>"]
pub type PFN_vkCmdSetColorWriteMaskEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    first_attachment: u32,
    attachment_count: u32,
    p_color_write_masks: *const VkColorComponentFlags,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetRasterizationStreamEXT.html>"]
pub type PFN_vkCmdSetRasterizationStreamEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    rasterization_stream: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetConservativeRasterizationModeEXT.html>"]
pub type PFN_vkCmdSetConservativeRasterizationModeEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    conservative_rasterization_mode: VkConservativeRasterizationModeEXT,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetExtraPrimitiveOverestimationSizeEXT.html>"]
pub type PFN_vkCmdSetExtraPrimitiveOverestimationSizeEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    extra_primitive_overestimation_size: f32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetDepthClipEnableEXT.html>"]
pub type PFN_vkCmdSetDepthClipEnableEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    depth_clip_enable: vk::Bool32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetSampleLocationsEnableEXT.html>"]
pub type PFN_vkCmdSetSampleLocationsEnableEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    sample_locations_enable: vk::Bool32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetColorBlendAdvancedEXT.html>"]
pub type PFN_vkCmdSetColorBlendAdvancedEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    first_attachment: u32,
    attachment_count: u32,
    p_color_blend_advanced: *const VkColorBlendAdvancedEXT,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetProvokingVertexModeEXT.html>"]
pub type PFN_vkCmdSetProvokingVertexModeEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    provoking_vertex_mode: VkProvokingVertexModeEXT,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetLineRasterizationModeEXT.html>"]
pub type PFN_vkCmdSetLineRasterizationModeEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    line_rasterization_mode: VkLineRasterizationModeEXT,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetLineStippleEnableEXT.html>"]
pub type PFN_vkCmdSetLineStippleEnableEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    stippled_line_enable: vk::Bool32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetDepthClipNegativeOneToOneEXT.html>"]
pub type PFN_vkCmdSetDepthClipNegativeOneToOneEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    negative_one_to_one: vk::Bool32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetViewportWScalingEnableNV.html>"]
pub type PFN_vkCmdSetViewportWScalingEnableNV = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    viewport_wscaling_enable: vk::Bool32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetViewportSwizzleNV.html>"]
pub type PFN_vkCmdSetViewportSwizzleNV = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    first_viewport: u32,
    viewport_count: u32,
    p_viewport_swizzles: *const VkViewportSwizzleNV,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetCoverageToColorEnableNV.html>"]
pub type PFN_vkCmdSetCoverageToColorEnableNV = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    coverage_to_color_enable: vk::Bool32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetCoverageToColorLocationNV.html>"]
pub type PFN_vkCmdSetCoverageToColorLocationNV = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    coverage_to_color_location: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetCoverageModulationModeNV.html>"]
pub type PFN_vkCmdSetCoverageModulationModeNV = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    coverage_modulation_mode: VkCoverageModulationModeNV,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetCoverageModulationTableEnableNV.html>"]
pub type PFN_vkCmdSetCoverageModulationTableEnableNV = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    coverage_modulation_table_enable: vk::Bool32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetCoverageModulationTableNV.html>"]
pub type PFN_vkCmdSetCoverageModulationTableNV = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    coverage_modulation_table_count: u32,
    p_coverage_modulation_table: *const f32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetShadingRateImageEnableNV.html>"]
pub type PFN_vkCmdSetShadingRateImageEnableNV = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    shading_rate_image_enable: vk::Bool32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetCoverageReductionModeNV.html>"]
pub type PFN_vkCmdSetCoverageReductionModeNV = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    coverage_reduction_mode: VkCoverageReductionModeNV,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetRepresentativeFragmentTestEnableNV.html>"]
pub type PFN_vkCmdSetRepresentativeFragmentTestEnableNV = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    representative_fragment_test_enable: vk::Bool32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreatePrivateDataSlot.html>"]
pub type PFN_vkCreatePrivateDataSlot = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_create_info: *const VkPrivateDataSlotCreateInfo,
    p_allocator: *const VkAllocationCallbacks,
    p_private_data_slot: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyPrivateDataSlot.html>"]
pub type PFN_vkDestroyPrivateDataSlot = unsafe extern "system" fn(
    device: NonDisposableHandle,
    private_data_slot: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkSetPrivateData.html>"]
pub type PFN_vkSetPrivateData = unsafe extern "system" fn(
    device: NonDisposableHandle,
    object_type: VkObjectType,
    object_handle: u64,
    private_data_slot: NonDisposableHandle,
    data: u64,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPrivateData.html>"]
pub type PFN_vkGetPrivateData = unsafe extern "system" fn(
    device: NonDisposableHandle,
    object_type: VkObjectType,
    object_handle: u64,
    private_data_slot: NonDisposableHandle,
    p_data: *mut u64,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCopyBuffer2.html>"]
pub type PFN_vkCmdCopyBuffer2 = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_copy_buffer_info: *const VkCopyBufferInfo2,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCopyImage2.html>"]
pub type PFN_vkCmdCopyImage2 = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_copy_image_info: *const VkCopyImageInfo2,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBlitImage2.html>"]
pub type PFN_vkCmdBlitImage2 = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_blit_image_info: *const VkBlitImageInfo2,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCopyBufferToImage2.html>"]
pub type PFN_vkCmdCopyBufferToImage2 = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_copy_buffer_to_image_info: *const VkCopyBufferToImageInfo2,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCopyImageToBuffer2.html>"]
pub type PFN_vkCmdCopyImageToBuffer2 = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_copy_image_to_buffer_info: *const VkCopyImageToBufferInfo2,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdResolveImage2.html>"]
pub type PFN_vkCmdResolveImage2 = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_resolve_image_info: *const VkResolveImageInfo2,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetFragmentShadingRateKHR.html>"]
pub type PFN_vkCmdSetFragmentShadingRateKHR = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_fragment_size: *const VkExtent2D,
    combiner_ops: *const [VkFragmentShadingRateCombinerOpKHR; 2],
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceFragmentShadingRatesKHR.html>"]
pub type PFN_vkGetPhysicalDeviceFragmentShadingRatesKHR = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    p_fragment_shading_rate_count: *mut u32,
    p_fragment_shading_rates: *mut VkPhysicalDeviceFragmentShadingRateKHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetFragmentShadingRateEnumNV.html>"]
pub type PFN_vkCmdSetFragmentShadingRateEnumNV = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    shading_rate: VkFragmentShadingRateNV,
    combiner_ops: *const [VkFragmentShadingRateCombinerOpKHR; 2],
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetAccelerationStructureBuildSizesKHR.html>"]
pub type PFN_vkGetAccelerationStructureBuildSizesKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    build_type: VkAccelerationStructureBuildTypeKHR,
    p_build_info: *const VkAccelerationStructureBuildGeometryInfoKHR,
    p_max_primitive_counts: *const u32,
    p_size_info: *mut VkAccelerationStructureBuildSizesInfoKHR,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetVertexInputEXT.html>"]
pub type PFN_vkCmdSetVertexInputEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    vertex_binding_description_count: u32,
    p_vertex_binding_descriptions: *const VkVertexInputBindingDescription2EXT,
    vertex_attribute_description_count: u32,
    p_vertex_attribute_descriptions: *const VkVertexInputAttributeDescription2EXT,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetColorWriteEnableEXT.html>"]
pub type PFN_vkCmdSetColorWriteEnableEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    attachment_count: u32,
    p_color_write_enables: *const vk::Bool32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetEvent2.html>"]
pub type PFN_vkCmdSetEvent2 = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    event: NonDisposableHandle,
    p_dependency_info: *const VkDependencyInfo,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdResetEvent2.html>"]
pub type PFN_vkCmdResetEvent2 = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    event: NonDisposableHandle,
    stage_mask: VkPipelineStageFlags2,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdWaitEvents2.html>"]
pub type PFN_vkCmdWaitEvents2 = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    event_count: u32,
    p_events: *const NonDisposableHandle,
    p_dependency_infos: *const VkDependencyInfo,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdPipelineBarrier2.html>"]
pub type PFN_vkCmdPipelineBarrier2 = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_dependency_info: *const VkDependencyInfo,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkQueueSubmit2.html>"]
pub type PFN_vkQueueSubmit2 = unsafe extern "system" fn(
    queue: NonDisposableHandle,
    submit_count: u32,
    p_submits: *const VkSubmitInfo2,
    fence: NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdWriteTimestamp2.html>"]
pub type PFN_vkCmdWriteTimestamp2 = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    stage: VkPipelineStageFlags2,
    query_pool: NonDisposableHandle,
    query: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdWriteBufferMarker2AMD.html>"]
pub type PFN_vkCmdWriteBufferMarker2AMD = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    stage: VkPipelineStageFlags2,
    dst_buffer: NonDisposableHandle,
    dst_offset: vk::DeviceSize,
    marker: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetQueueCheckpointData2NV.html>"]
pub type PFN_vkGetQueueCheckpointData2NV = unsafe extern "system" fn(
    queue: NonDisposableHandle,
    p_checkpoint_data_count: *mut u32,
    p_checkpoint_data: *mut VkCheckpointData2NV,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCopyMemoryToImageEXT.html>"]
pub type PFN_vkCopyMemoryToImageEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_copy_memory_to_image_info: *const VkCopyMemoryToImageInfoEXT,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCopyImageToMemoryEXT.html>"]
pub type PFN_vkCopyImageToMemoryEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_copy_image_to_memory_info: *const VkCopyImageToMemoryInfoEXT,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCopyImageToImageEXT.html>"]
pub type PFN_vkCopyImageToImageEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_copy_image_to_image_info: *const VkCopyImageToImageInfoEXT,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkTransitionImageLayoutEXT.html>"]
pub type PFN_vkTransitionImageLayoutEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    transition_count: u32,
    p_transitions: *const VkHostImageLayoutTransitionInfoEXT,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceVideoCapabilitiesKHR.html>"]
pub type PFN_vkGetPhysicalDeviceVideoCapabilitiesKHR = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    p_video_profile: *const VkVideoProfileInfoKHR,
    p_capabilities: *mut VkVideoCapabilitiesKHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceVideoFormatPropertiesKHR.html>"]
pub type PFN_vkGetPhysicalDeviceVideoFormatPropertiesKHR = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    p_video_format_info: *const VkPhysicalDeviceVideoFormatInfoKHR,
    p_video_format_property_count: *mut u32,
    p_video_format_properties: *mut VkVideoFormatPropertiesKHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceVideoEncodeQualityLevelPropertiesKHR.html>"]
pub type PFN_vkGetPhysicalDeviceVideoEncodeQualityLevelPropertiesKHR = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    p_quality_level_info: *const VkPhysicalDeviceVideoEncodeQualityLevelInfoKHR,
    p_quality_level_properties: *mut VkVideoEncodeQualityLevelPropertiesKHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateVideoSessionKHR.html>"]
pub type PFN_vkCreateVideoSessionKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_create_info: *const VkVideoSessionCreateInfoKHR,
    p_allocator: *const VkAllocationCallbacks,
    p_video_session: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyVideoSessionKHR.html>"]
pub type PFN_vkDestroyVideoSessionKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    video_session: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateVideoSessionParametersKHR.html>"]
pub type PFN_vkCreateVideoSessionParametersKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_create_info: *const VkVideoSessionParametersCreateInfoKHR,
    p_allocator: *const VkAllocationCallbacks,
    p_video_session_parameters: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkUpdateVideoSessionParametersKHR.html>"]
pub type PFN_vkUpdateVideoSessionParametersKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    video_session_parameters: NonDisposableHandle,
    p_update_info: *const VkVideoSessionParametersUpdateInfoKHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetEncodedVideoSessionParametersKHR.html>"]
pub type PFN_vkGetEncodedVideoSessionParametersKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_video_session_parameters_info: *const VkVideoEncodeSessionParametersGetInfoKHR,
    p_feedback_info: *mut VkVideoEncodeSessionParametersFeedbackInfoKHR,
    p_data_size: *mut usize,
    p_data: *mut c_void,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyVideoSessionParametersKHR.html>"]
pub type PFN_vkDestroyVideoSessionParametersKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    video_session_parameters: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetVideoSessionMemoryRequirementsKHR.html>"]
pub type PFN_vkGetVideoSessionMemoryRequirementsKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    video_session: NonDisposableHandle,
    p_memory_requirements_count: *mut u32,
    p_memory_requirements: *mut VkVideoSessionMemoryRequirementsKHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkBindVideoSessionMemoryKHR.html>"]
pub type PFN_vkBindVideoSessionMemoryKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    video_session: NonDisposableHandle,
    bind_session_memory_info_count: u32,
    p_bind_session_memory_infos: *const VkBindVideoSessionMemoryInfoKHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDecodeVideoKHR.html>"]
pub type PFN_vkCmdDecodeVideoKHR = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_decode_info: *const VkVideoDecodeInfoKHR,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBeginVideoCodingKHR.html>"]
pub type PFN_vkCmdBeginVideoCodingKHR = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_begin_info: *const VkVideoBeginCodingInfoKHR,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdControlVideoCodingKHR.html>"]
pub type PFN_vkCmdControlVideoCodingKHR = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_coding_control_info: *const VkVideoCodingControlInfoKHR,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdEndVideoCodingKHR.html>"]
pub type PFN_vkCmdEndVideoCodingKHR = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_end_coding_info: *const VkVideoEndCodingInfoKHR,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdEncodeVideoKHR.html>"]
pub type PFN_vkCmdEncodeVideoKHR = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_encode_info: *const VkVideoEncodeInfoKHR,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDecompressMemoryNV.html>"]
pub type PFN_vkCmdDecompressMemoryNV = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    decompress_region_count: u32,
    p_decompress_memory_regions: *const VkDecompressMemoryRegionNV,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDecompressMemoryIndirectCountNV.html>"]
pub type PFN_vkCmdDecompressMemoryIndirectCountNV = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    indirect_commands_address: vk::DeviceAddress,
    indirect_commands_count_address: vk::DeviceAddress,
    stride: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateCuModuleNVX.html>"]
pub type PFN_vkCreateCuModuleNVX = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_create_info: *const VkCuModuleCreateInfoNVX,
    p_allocator: *const VkAllocationCallbacks,
    p_module: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateCuFunctionNVX.html>"]
pub type PFN_vkCreateCuFunctionNVX = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_create_info: *const VkCuFunctionCreateInfoNVX,
    p_allocator: *const VkAllocationCallbacks,
    p_function: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyCuModuleNVX.html>"]
pub type PFN_vkDestroyCuModuleNVX = unsafe extern "system" fn(
    device: NonDisposableHandle,
    module: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyCuFunctionNVX.html>"]
pub type PFN_vkDestroyCuFunctionNVX = unsafe extern "system" fn(
    device: NonDisposableHandle,
    function: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCuLaunchKernelNVX.html>"]
pub type PFN_vkCmdCuLaunchKernelNVX = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_launch_info: *const VkCuLaunchInfoNVX,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDescriptorSetLayoutSizeEXT.html>"]
pub type PFN_vkGetDescriptorSetLayoutSizeEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    layout: NonDisposableHandle,
    p_layout_size_in_bytes: *mut vk::DeviceSize,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDescriptorSetLayoutBindingOffsetEXT.html>"]
pub type PFN_vkGetDescriptorSetLayoutBindingOffsetEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    layout: NonDisposableHandle,
    binding: u32,
    p_offset: *mut vk::DeviceSize,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDescriptorEXT.html>"]
pub type PFN_vkGetDescriptorEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_descriptor_info: *const VkDescriptorGetInfoEXT,
    data_size: usize,
    p_descriptor: *mut c_void,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBindDescriptorBuffersEXT.html>"]
pub type PFN_vkCmdBindDescriptorBuffersEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    buffer_count: u32,
    p_binding_infos: *const VkDescriptorBufferBindingInfoEXT,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetDescriptorBufferOffsetsEXT.html>"]
pub type PFN_vkCmdSetDescriptorBufferOffsetsEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    pipeline_bind_point: VkPipelineBindPoint,
    layout: NonDisposableHandle,
    first_set: u32,
    set_count: u32,
    p_buffer_indices: *const u32,
    p_offsets: *const vk::DeviceSize,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBindDescriptorBufferEmbeddedSamplersEXT.html>"]
pub type PFN_vkCmdBindDescriptorBufferEmbeddedSamplersEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    pipeline_bind_point: VkPipelineBindPoint,
    layout: NonDisposableHandle,
    set: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetBufferOpaqueCaptureDescriptorDataEXT.html>"]
pub type PFN_vkGetBufferOpaqueCaptureDescriptorDataEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_info: *const VkBufferCaptureDescriptorDataInfoEXT,
    p_data: *mut c_void,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetImageOpaqueCaptureDescriptorDataEXT.html>"]
pub type PFN_vkGetImageOpaqueCaptureDescriptorDataEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_info: *const VkImageCaptureDescriptorDataInfoEXT,
    p_data: *mut c_void,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetImageViewOpaqueCaptureDescriptorDataEXT.html>"]
pub type PFN_vkGetImageViewOpaqueCaptureDescriptorDataEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_info: *const VkImageViewCaptureDescriptorDataInfoEXT,
    p_data: *mut c_void,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetSamplerOpaqueCaptureDescriptorDataEXT.html>"]
pub type PFN_vkGetSamplerOpaqueCaptureDescriptorDataEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_info: *const VkSamplerCaptureDescriptorDataInfoEXT,
    p_data: *mut c_void,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT.html>"]
pub type PFN_vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_info: *const VkAccelerationStructureCaptureDescriptorDataInfoEXT,
    p_data: *mut c_void,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkSetDeviceMemoryPriorityEXT.html>"]
pub type PFN_vkSetDeviceMemoryPriorityEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    memory: NonDisposableHandle,
    priority: f32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkAcquireDrmDisplayEXT.html>"]
pub type PFN_vkAcquireDrmDisplayEXT = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    drm_fd: i32,
    display: NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDrmDisplayEXT.html>"]
pub type PFN_vkGetDrmDisplayEXT = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    drm_fd: i32,
    connector_id: u32,
    display: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkWaitForPresentKHR.html>"]
pub type PFN_vkWaitForPresentKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    swapchain: NonDisposableHandle,
    present_id: u64,
    timeout: u64,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateBufferCollectionFUCHSIA.html>"]
pub type PFN_vkCreateBufferCollectionFUCHSIA = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_create_info: *const VkBufferCollectionCreateInfoFUCHSIA,
    p_allocator: *const VkAllocationCallbacks,
    p_collection: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkSetBufferCollectionBufferConstraintsFUCHSIA.html>"]
pub type PFN_vkSetBufferCollectionBufferConstraintsFUCHSIA = unsafe extern "system" fn(
    device: NonDisposableHandle,
    collection: NonDisposableHandle,
    p_buffer_constraints_info: *const VkBufferConstraintsInfoFUCHSIA,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkSetBufferCollectionImageConstraintsFUCHSIA.html>"]
pub type PFN_vkSetBufferCollectionImageConstraintsFUCHSIA = unsafe extern "system" fn(
    device: NonDisposableHandle,
    collection: NonDisposableHandle,
    p_image_constraints_info: *const VkImageConstraintsInfoFUCHSIA,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyBufferCollectionFUCHSIA.html>"]
pub type PFN_vkDestroyBufferCollectionFUCHSIA = unsafe extern "system" fn(
    device: NonDisposableHandle,
    collection: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetBufferCollectionPropertiesFUCHSIA.html>"]
pub type PFN_vkGetBufferCollectionPropertiesFUCHSIA = unsafe extern "system" fn(
    device: NonDisposableHandle,
    collection: NonDisposableHandle,
    p_properties: *mut VkBufferCollectionPropertiesFUCHSIA,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateCudaModuleNV.html>"]
pub type PFN_vkCreateCudaModuleNV = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_create_info: *const VkCudaModuleCreateInfoNV,
    p_allocator: *const VkAllocationCallbacks,
    p_module: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetCudaModuleCacheNV.html>"]
pub type PFN_vkGetCudaModuleCacheNV = unsafe extern "system" fn(
    device: NonDisposableHandle,
    module: NonDisposableHandle,
    p_cache_size: *mut usize,
    p_cache_data: *mut c_void,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateCudaFunctionNV.html>"]
pub type PFN_vkCreateCudaFunctionNV = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_create_info: *const VkCudaFunctionCreateInfoNV,
    p_allocator: *const VkAllocationCallbacks,
    p_function: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyCudaModuleNV.html>"]
pub type PFN_vkDestroyCudaModuleNV = unsafe extern "system" fn(
    device: NonDisposableHandle,
    module: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyCudaFunctionNV.html>"]
pub type PFN_vkDestroyCudaFunctionNV = unsafe extern "system" fn(
    device: NonDisposableHandle,
    function: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCudaLaunchKernelNV.html>"]
pub type PFN_vkCmdCudaLaunchKernelNV = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_launch_info: *const VkCudaLaunchInfoNV,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBeginRendering.html>"]
pub type PFN_vkCmdBeginRendering = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_rendering_info: *const VkRenderingInfo,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdEndRendering.html>"]
pub type PFN_vkCmdEndRendering = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDescriptorSetLayoutHostMappingInfoVALVE.html>"]
pub type PFN_vkGetDescriptorSetLayoutHostMappingInfoVALVE = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_binding_reference: *const VkDescriptorSetBindingReferenceVALVE,
    p_host_mapping: *mut VkDescriptorSetLayoutHostMappingInfoVALVE,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDescriptorSetHostMappingVALVE.html>"]
pub type PFN_vkGetDescriptorSetHostMappingVALVE = unsafe extern "system" fn(
    device: NonDisposableHandle,
    descriptor_set: NonDisposableHandle,
    pp_data: *mut *mut c_void,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateMicromapEXT.html>"]
pub type PFN_vkCreateMicromapEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_create_info: *const VkMicromapCreateInfoEXT,
    p_allocator: *const VkAllocationCallbacks,
    p_micromap: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBuildMicromapsEXT.html>"]
pub type PFN_vkCmdBuildMicromapsEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    info_count: u32,
    p_infos: *const VkMicromapBuildInfoEXT,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkBuildMicromapsEXT.html>"]
pub type PFN_vkBuildMicromapsEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    deferred_operation: NonDisposableHandle,
    info_count: u32,
    p_infos: *const VkMicromapBuildInfoEXT,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyMicromapEXT.html>"]
pub type PFN_vkDestroyMicromapEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    micromap: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCopyMicromapEXT.html>"]
pub type PFN_vkCmdCopyMicromapEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_info: *const VkCopyMicromapInfoEXT,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCopyMicromapEXT.html>"]
pub type PFN_vkCopyMicromapEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    deferred_operation: NonDisposableHandle,
    p_info: *const VkCopyMicromapInfoEXT,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCopyMicromapToMemoryEXT.html>"]
pub type PFN_vkCmdCopyMicromapToMemoryEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_info: *const VkCopyMicromapToMemoryInfoEXT,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCopyMicromapToMemoryEXT.html>"]
pub type PFN_vkCopyMicromapToMemoryEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    deferred_operation: NonDisposableHandle,
    p_info: *const VkCopyMicromapToMemoryInfoEXT,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdCopyMemoryToMicromapEXT.html>"]
pub type PFN_vkCmdCopyMemoryToMicromapEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_info: *const VkCopyMemoryToMicromapInfoEXT,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCopyMemoryToMicromapEXT.html>"]
pub type PFN_vkCopyMemoryToMicromapEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    deferred_operation: NonDisposableHandle,
    p_info: *const VkCopyMemoryToMicromapInfoEXT,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdWriteMicromapsPropertiesEXT.html>"]
pub type PFN_vkCmdWriteMicromapsPropertiesEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    micromap_count: u32,
    p_micromaps: *const NonDisposableHandle,
    query_type: VkQueryType,
    query_pool: NonDisposableHandle,
    first_query: u32,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkWriteMicromapsPropertiesEXT.html>"]
pub type PFN_vkWriteMicromapsPropertiesEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    micromap_count: u32,
    p_micromaps: *const NonDisposableHandle,
    query_type: VkQueryType,
    data_size: usize,
    p_data: *mut c_void,
    stride: usize,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDeviceMicromapCompatibilityEXT.html>"]
pub type PFN_vkGetDeviceMicromapCompatibilityEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_version_info: *const VkMicromapVersionInfoEXT,
    p_compatibility: *mut VkAccelerationStructureCompatibilityKHR,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetMicromapBuildSizesEXT.html>"]
pub type PFN_vkGetMicromapBuildSizesEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    build_type: VkAccelerationStructureBuildTypeKHR,
    p_build_info: *const VkMicromapBuildInfoEXT,
    p_size_info: *mut VkMicromapBuildSizesInfoEXT,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetShaderModuleIdentifierEXT.html>"]
pub type PFN_vkGetShaderModuleIdentifierEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    shader_module: NonDisposableHandle,
    p_identifier: *mut VkShaderModuleIdentifierEXT,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetShaderModuleCreateInfoIdentifierEXT.html>"]
pub type PFN_vkGetShaderModuleCreateInfoIdentifierEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_create_info: *const VkShaderModuleCreateInfo,
    p_identifier: *mut VkShaderModuleIdentifierEXT,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetImageSubresourceLayout2KHR.html>"]
pub type PFN_vkGetImageSubresourceLayout2KHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    image: NonDisposableHandle,
    p_subresource: *const VkImageSubresource2KHR,
    p_layout: *mut VkSubresourceLayout2KHR,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPipelinePropertiesEXT.html>"]
pub type PFN_vkGetPipelinePropertiesEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_pipeline_info: *const vk::PipelineInfoEXT,
    p_pipeline_properties: *mut VkBaseOutStructure,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkExportMetalObjectsEXT.html>"]
pub type PFN_vkExportMetalObjectsEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_metal_objects_info: *mut VkExportMetalObjectsInfoEXT,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetFramebufferTilePropertiesQCOM.html>"]
pub type PFN_vkGetFramebufferTilePropertiesQCOM = unsafe extern "system" fn(
    device: NonDisposableHandle,
    framebuffer: NonDisposableHandle,
    p_properties_count: *mut u32,
    p_properties: *mut VkTilePropertiesQCOM,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDynamicRenderingTilePropertiesQCOM.html>"]
pub type PFN_vkGetDynamicRenderingTilePropertiesQCOM = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_rendering_info: *const VkRenderingInfo,
    p_properties: *mut VkTilePropertiesQCOM,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceOpticalFlowImageFormatsNV.html>"]
pub type PFN_vkGetPhysicalDeviceOpticalFlowImageFormatsNV = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    p_optical_flow_image_format_info: *const VkOpticalFlowImageFormatInfoNV,
    p_format_count: *mut u32,
    p_image_format_properties: *mut VkOpticalFlowImageFormatPropertiesNV,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateOpticalFlowSessionNV.html>"]
pub type PFN_vkCreateOpticalFlowSessionNV = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_create_info: *const VkOpticalFlowSessionCreateInfoNV,
    p_allocator: *const VkAllocationCallbacks,
    p_session: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyOpticalFlowSessionNV.html>"]
pub type PFN_vkDestroyOpticalFlowSessionNV = unsafe extern "system" fn(
    device: NonDisposableHandle,
    session: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkBindOpticalFlowSessionImageNV.html>"]
pub type PFN_vkBindOpticalFlowSessionImageNV = unsafe extern "system" fn(
    device: NonDisposableHandle,
    session: NonDisposableHandle,
    binding_point: VkOpticalFlowSessionBindingPointNV,
    view: NonDisposableHandle,
    layout: VkImageLayout,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdOpticalFlowExecuteNV.html>"]
pub type PFN_vkCmdOpticalFlowExecuteNV = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    session: NonDisposableHandle,
    p_execute_info: *const VkOpticalFlowExecuteInfoNV,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDeviceFaultInfoEXT.html>"]
pub type PFN_vkGetDeviceFaultInfoEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_fault_counts: *mut VkDeviceFaultCountsEXT,
    p_fault_info: *mut VkDeviceFaultInfoEXT,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetDepthBias2EXT.html>"]
pub type PFN_vkCmdSetDepthBias2EXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_depth_bias_info: *const VkDepthBiasInfoEXT,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkReleaseSwapchainImagesEXT.html>"]
pub type PFN_vkReleaseSwapchainImagesEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_release_info: *const VkReleaseSwapchainImagesInfoEXT,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetDeviceImageSubresourceLayoutKHR.html>"]
pub type PFN_vkGetDeviceImageSubresourceLayoutKHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_info: *const VkDeviceImageSubresourceInfoKHR,
    p_layout: *mut VkSubresourceLayout2KHR,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkMapMemory2KHR.html>"]
pub type PFN_vkMapMemory2KHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_memory_map_info: *const VkMemoryMapInfoKHR,
    pp_data: *mut *mut c_void,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkUnmapMemory2KHR.html>"]
pub type PFN_vkUnmapMemory2KHR = unsafe extern "system" fn(
    device: NonDisposableHandle,
    p_memory_unmap_info: *const VkMemoryUnmapInfoKHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateShadersEXT.html>"]
pub type PFN_vkCreateShadersEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    create_info_count: u32,
    p_create_infos: *const VkShaderCreateInfoEXT,
    p_allocator: *const VkAllocationCallbacks,
    p_shaders: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkDestroyShaderEXT.html>"]
pub type PFN_vkDestroyShaderEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    shader: NonDisposableHandle,
    p_allocator: *const VkAllocationCallbacks,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetShaderBinaryDataEXT.html>"]
pub type PFN_vkGetShaderBinaryDataEXT = unsafe extern "system" fn(
    device: NonDisposableHandle,
    shader: NonDisposableHandle,
    p_data_size: *mut usize,
    p_data: *mut c_void,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBindShadersEXT.html>"]
pub type PFN_vkCmdBindShadersEXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    stage_count: u32,
    p_stages: *const vk::ShaderStageFlags,
    p_shaders: *const NonDisposableHandle,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetScreenBufferPropertiesQNX.html>"]
pub type PFN_vkGetScreenBufferPropertiesQNX = unsafe extern "system" fn(
    device: NonDisposableHandle,
    buffer: *const usize,
    p_properties: *mut VkScreenBufferPropertiesQNX,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetPhysicalDeviceCooperativeMatrixPropertiesKHR.html>"]
pub type PFN_vkGetPhysicalDeviceCooperativeMatrixPropertiesKHR = unsafe extern "system" fn(
    physical_device: NonDisposableHandle,
    p_property_count: *mut u32,
    p_properties: *mut VkCooperativeMatrixPropertiesKHR,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetExecutionGraphPipelineScratchSizeAMDX.html>"]
pub type PFN_vkGetExecutionGraphPipelineScratchSizeAMDX = unsafe extern "system" fn(
    device: NonDisposableHandle,
    execution_graph: NonDisposableHandle,
    p_size_info: *mut VkExecutionGraphPipelineScratchSizeAMDX,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetExecutionGraphPipelineNodeIndexAMDX.html>"]
pub type PFN_vkGetExecutionGraphPipelineNodeIndexAMDX = unsafe extern "system" fn(
    device: NonDisposableHandle,
    execution_graph: NonDisposableHandle,
    p_node_info: *const VkPipelineShaderStageNodeCreateInfoAMDX,
    p_node_index: *mut u32,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCreateExecutionGraphPipelinesAMDX.html>"]
pub type PFN_vkCreateExecutionGraphPipelinesAMDX = unsafe extern "system" fn(
    device: NonDisposableHandle,
    pipeline_cache: NonDisposableHandle,
    create_info_count: u32,
    p_create_infos: *const VkExecutionGraphPipelineCreateInfoAMDX,
    p_allocator: *const VkAllocationCallbacks,
    p_pipelines: *mut NonDisposableHandle,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdInitializeGraphScratchMemoryAMDX.html>"]
pub type PFN_vkCmdInitializeGraphScratchMemoryAMDX = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    scratch: vk::DeviceAddress,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDispatchGraphAMDX.html>"]
pub type PFN_vkCmdDispatchGraphAMDX = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    scratch: vk::DeviceAddress,
    p_count_info: *const VkDispatchGraphCountInfoAMDX,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDispatchGraphIndirectAMDX.html>"]
pub type PFN_vkCmdDispatchGraphIndirectAMDX = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    scratch: vk::DeviceAddress,
    p_count_info: *const VkDispatchGraphCountInfoAMDX,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdDispatchGraphIndirectCountAMDX.html>"]
pub type PFN_vkCmdDispatchGraphIndirectCountAMDX = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    scratch: vk::DeviceAddress,
    count_info: vk::DeviceAddress,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBindDescriptorSets2KHR.html>"]
pub type PFN_vkCmdBindDescriptorSets2KHR = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_bind_descriptor_sets_info: *const VkBindDescriptorSetsInfoKHR,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdPushConstants2KHR.html>"]
pub type PFN_vkCmdPushConstants2KHR = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_push_constants_info: *const VkPushConstantsInfoKHR,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdPushDescriptorSet2KHR.html>"]
pub type PFN_vkCmdPushDescriptorSet2KHR = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_push_descriptor_set_info: *const VkPushDescriptorSetInfoKHR,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdPushDescriptorSetWithTemplate2KHR.html>"]
pub type PFN_vkCmdPushDescriptorSetWithTemplate2KHR = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_push_descriptor_set_with_template_info: *const VkPushDescriptorSetWithTemplateInfoKHR,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetDescriptorBufferOffsets2EXT.html>"]
pub type PFN_vkCmdSetDescriptorBufferOffsets2EXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_set_descriptor_buffer_offsets_info: *const VkSetDescriptorBufferOffsetsInfoEXT,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdBindDescriptorBufferEmbeddedSamplers2EXT.html>"]
pub type PFN_vkCmdBindDescriptorBufferEmbeddedSamplers2EXT = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_bind_descriptor_buffer_embedded_samplers_info: *const VkBindDescriptorBufferEmbeddedSamplersInfoEXT,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkSetLatencySleepModeNV.html>"]
pub type PFN_vkSetLatencySleepModeNV = unsafe extern "system" fn(
    device: NonDisposableHandle,
    swapchain: NonDisposableHandle,
    p_sleep_mode_info: *const VkLatencySleepModeInfoNV,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkLatencySleepNV.html>"]
pub type PFN_vkLatencySleepNV = unsafe extern "system" fn(
    device: NonDisposableHandle,
    swapchain: NonDisposableHandle,
    p_sleep_info: *const VkLatencySleepInfoNV,
) -> VkResult;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkSetLatencyMarkerNV.html>"]
pub type PFN_vkSetLatencyMarkerNV = unsafe extern "system" fn(
    device: NonDisposableHandle,
    swapchain: NonDisposableHandle,
    p_latency_marker_info: *const VkSetLatencyMarkerInfoNV,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkGetLatencyTimingsNV.html>"]
pub type PFN_vkGetLatencyTimingsNV = unsafe extern "system" fn(
    device: NonDisposableHandle,
    swapchain: NonDisposableHandle,
    p_latency_marker_info: *mut VkGetLatencyMarkerInfoNV,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkQueueNotifyOutOfBandNV.html>"]
pub type PFN_vkQueueNotifyOutOfBandNV = unsafe extern "system" fn(
    queue: NonDisposableHandle,
    p_queue_type_info: *const VkOutOfBandQueueTypeInfoNV,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetRenderingAttachmentLocationsKHR.html>"]
pub type PFN_vkCmdSetRenderingAttachmentLocationsKHR = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_location_info: *const VkRenderingAttachmentLocationInfoKHR,
) -> c_void;

#[allow(non_camel_case_types)]
#[doc = "<https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/vkCmdSetRenderingInputAttachmentIndicesKHR.html>"]
pub type PFN_vkCmdSetRenderingInputAttachmentIndicesKHR = unsafe extern "system" fn(
    command_buffer: NonDisposableHandle,
    p_location_info: *const VkRenderingInputAttachmentIndexInfoKHR,
) -> c_void;
