//! THIS FILE IS GENERATED BY TOOL, DO NOT MODIFY.

use crate::{
    generated::vulkan_enums::*, p_next_deserializer, p_next_serializer, unimplemented_deserializer,
    unimplemented_deserializer_mut, unimplemented_serializer, NonDisposableHandle,
};
use ash::vk;
use cdump::{CDeserialize, CSerialize};
use std::ffi::{c_char, c_void};

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBaseOutStructure.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBaseOutStructure {
    pub s_type: NonDisposableHandle,
    pub p_next: *mut VkBaseOutStructure,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBaseInStructure.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBaseInStructure {
    pub s_type: NonDisposableHandle,
    pub p_next: *const VkBaseInStructure,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkOffset2D.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkOffset2D {
    pub x: i32,
    pub y: i32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkOffset3D.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkOffset3D {
    pub x: i32,
    pub y: i32,
    pub z: i32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkExtent2D.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkExtent2D {
    pub width: u32,
    pub height: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkExtent3D.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkExtent3D {
    pub width: u32,
    pub height: u32,
    pub depth: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkViewport.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkViewport {
    pub x: f32,
    pub y: f32,
    pub width: f32,
    pub height: f32,
    pub min_depth: f32,
    pub max_depth: f32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkRect2D.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkRect2D {
    pub offset: VkOffset2D,
    pub extent: VkExtent2D,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkClearRect.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkClearRect {
    pub rect: VkRect2D,
    pub base_array_layer: u32,
    pub layer_count: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkComponentMapping.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkComponentMapping {
    pub r: NonDisposableHandle,
    pub g: NonDisposableHandle,
    pub b: NonDisposableHandle,
    pub a: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceProperties.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceProperties {
    pub api_version: u32,
    pub driver_version: u32,
    pub vendor_id: u32,
    pub device_id: u32,
    pub device_type: NonDisposableHandle,
    pub device_name: [c_char; vk::MAX_PHYSICAL_DEVICE_NAME_SIZE],
    pub pipeline_cache_uuid: [u8; vk::UUID_SIZE],
    pub limits: VkPhysicalDeviceLimits,
    pub sparse_properties: VkPhysicalDeviceSparseProperties,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkExtensionProperties.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkExtensionProperties {
    pub extension_name: [c_char; vk::MAX_EXTENSION_NAME_SIZE],
    pub spec_version: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkLayerProperties.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkLayerProperties {
    pub layer_name: [c_char; vk::MAX_EXTENSION_NAME_SIZE],
    pub spec_version: u32,
    pub implementation_version: u32,
    pub description: [c_char; vk::MAX_DESCRIPTION_SIZE],
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkApplicationInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkApplicationInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub p_application_name: *const c_char,
    pub application_version: u32,
    pub p_engine_name: *const c_char,
    pub engine_version: u32,
    pub api_version: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAllocationCallbacks.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAllocationCallbacks {
    #[cdump(dynamic(serializer = unimplemented_serializer, deserializer = unimplemented_deserializer_mut))]
    pub p_user_data: *mut c_void,
    pub pfn_allocation: vk::PFN_vkAllocationFunction,
    pub pfn_reallocation: vk::PFN_vkReallocationFunction,
    pub pfn_free: vk::PFN_vkFreeFunction,
    pub pfn_internal_allocation: vk::PFN_vkInternalAllocationNotification,
    pub pfn_internal_free: vk::PFN_vkInternalFreeNotification,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDeviceQueueCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDeviceQueueCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub queue_family_index: u32,
    pub queue_count: u32,
    #[cdump(array(len = self.queue_count))]
    pub p_queue_priorities: *const f32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDeviceCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDeviceCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub queue_create_info_count: u32,
    #[cdump(array(len = self.queue_create_info_count))]
    pub p_queue_create_infos: *const VkDeviceQueueCreateInfo,
    pub enabled_layer_count: u32,
    #[cdump(array(len = self.enabled_layer_count))]
    pub pp_enabled_layer_names: *const *const c_char,
    pub enabled_extension_count: u32,
    #[cdump(array(len = self.enabled_extension_count))]
    pub pp_enabled_extension_names: *const *const c_char,
    pub p_enabled_features: *const VkPhysicalDeviceFeatures,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkInstanceCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkInstanceCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub p_application_info: *const VkApplicationInfo,
    pub enabled_layer_count: u32,
    #[cdump(array(len = self.enabled_layer_count))]
    pub pp_enabled_layer_names: *const *const c_char,
    pub enabled_extension_count: u32,
    #[cdump(array(len = self.enabled_extension_count))]
    pub pp_enabled_extension_names: *const *const c_char,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkQueueFamilyProperties.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkQueueFamilyProperties {
    pub queue_flags: NonDisposableHandle,
    pub queue_count: u32,
    pub timestamp_valid_bits: u32,
    pub min_image_transfer_granularity: VkExtent3D,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceMemoryProperties.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceMemoryProperties {
    pub memory_type_count: u32,
    #[cdump(array(len = self.memory_type_count))]
    pub memory_types: [VkMemoryType; vk::MAX_MEMORY_TYPES],
    pub memory_heap_count: u32,
    #[cdump(array(len = self.memory_heap_count))]
    pub memory_heaps: [VkMemoryHeap; vk::MAX_MEMORY_HEAPS],
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMemoryAllocateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMemoryAllocateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub allocation_size: NonDisposableHandle,
    pub memory_type_index: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMemoryRequirements.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMemoryRequirements {
    pub size: NonDisposableHandle,
    pub alignment: NonDisposableHandle,
    pub memory_type_bits: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSparseImageFormatProperties.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSparseImageFormatProperties {
    pub aspect_mask: NonDisposableHandle,
    pub image_granularity: VkExtent3D,
    pub flags: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSparseImageMemoryRequirements.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSparseImageMemoryRequirements {
    pub format_properties: VkSparseImageFormatProperties,
    pub image_mip_tail_first_lod: u32,
    pub image_mip_tail_size: NonDisposableHandle,
    pub image_mip_tail_offset: NonDisposableHandle,
    pub image_mip_tail_stride: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMemoryType.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMemoryType {
    pub property_flags: NonDisposableHandle,
    pub heap_index: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMemoryHeap.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMemoryHeap {
    pub size: NonDisposableHandle,
    pub flags: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMappedMemoryRange.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMappedMemoryRange {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub memory: NonDisposableHandle,
    pub offset: NonDisposableHandle,
    pub size: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkFormatProperties.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkFormatProperties {
    pub linear_tiling_features: NonDisposableHandle,
    pub optimal_tiling_features: NonDisposableHandle,
    pub buffer_features: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImageFormatProperties.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImageFormatProperties {
    pub max_extent: VkExtent3D,
    pub max_mip_levels: u32,
    pub max_array_layers: u32,
    pub sample_counts: NonDisposableHandle,
    pub max_resource_size: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDescriptorBufferInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDescriptorBufferInfo {
    pub buffer: NonDisposableHandle,
    pub offset: NonDisposableHandle,
    pub range: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDescriptorImageInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDescriptorImageInfo {
    pub sampler: NonDisposableHandle,
    pub image_view: NonDisposableHandle,
    pub image_layout: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkWriteDescriptorSet.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkWriteDescriptorSet {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub dst_set: NonDisposableHandle,
    pub dst_binding: u32,
    pub dst_array_element: u32,
    pub descriptor_count: u32,
    pub descriptor_type: NonDisposableHandle,
    #[cdump(array(len = self.descriptor_count))]
    pub p_image_info: *const VkDescriptorImageInfo,
    #[cdump(array(len = self.descriptor_count))]
    pub p_buffer_info: *const VkDescriptorBufferInfo,
    #[cdump(array(len = self.descriptor_count))]
    pub p_texel_buffer_view: *const NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkCopyDescriptorSet.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkCopyDescriptorSet {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub src_set: NonDisposableHandle,
    pub src_binding: u32,
    pub src_array_element: u32,
    pub dst_set: NonDisposableHandle,
    pub dst_binding: u32,
    pub dst_array_element: u32,
    pub descriptor_count: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBufferUsageFlags2CreateInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBufferUsageFlags2CreateInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub usage: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBufferCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBufferCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub size: NonDisposableHandle,
    pub usage: NonDisposableHandle,
    pub sharing_mode: NonDisposableHandle,
    pub queue_family_index_count: u32,
    #[cdump(array(len = self.queue_family_index_count))]
    pub p_queue_family_indices: *const u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBufferViewCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBufferViewCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub buffer: NonDisposableHandle,
    pub format: NonDisposableHandle,
    pub offset: NonDisposableHandle,
    pub range: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImageSubresource.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImageSubresource {
    pub aspect_mask: NonDisposableHandle,
    pub mip_level: u32,
    pub array_layer: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImageSubresourceLayers.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImageSubresourceLayers {
    pub aspect_mask: NonDisposableHandle,
    pub mip_level: u32,
    pub base_array_layer: u32,
    pub layer_count: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImageSubresourceRange.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImageSubresourceRange {
    pub aspect_mask: NonDisposableHandle,
    pub base_mip_level: u32,
    pub level_count: u32,
    pub base_array_layer: u32,
    pub layer_count: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMemoryBarrier.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMemoryBarrier {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub src_access_mask: NonDisposableHandle,
    pub dst_access_mask: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBufferMemoryBarrier.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBufferMemoryBarrier {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub src_access_mask: NonDisposableHandle,
    pub dst_access_mask: NonDisposableHandle,
    pub src_queue_family_index: u32,
    pub dst_queue_family_index: u32,
    pub buffer: NonDisposableHandle,
    pub offset: NonDisposableHandle,
    pub size: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImageMemoryBarrier.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImageMemoryBarrier {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub src_access_mask: NonDisposableHandle,
    pub dst_access_mask: NonDisposableHandle,
    pub old_layout: NonDisposableHandle,
    pub new_layout: NonDisposableHandle,
    pub src_queue_family_index: u32,
    pub dst_queue_family_index: u32,
    pub image: NonDisposableHandle,
    pub subresource_range: VkImageSubresourceRange,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImageCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImageCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub image_type: NonDisposableHandle,
    pub format: NonDisposableHandle,
    pub extent: VkExtent3D,
    pub mip_levels: u32,
    pub array_layers: u32,
    pub samples: vk::SampleCountFlags,
    pub tiling: NonDisposableHandle,
    pub usage: NonDisposableHandle,
    pub sharing_mode: NonDisposableHandle,
    pub queue_family_index_count: u32,
    #[cdump(array(len = self.queue_family_index_count))]
    pub p_queue_family_indices: *const u32,
    pub initial_layout: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSubresourceLayout.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSubresourceLayout {
    pub offset: NonDisposableHandle,
    pub size: NonDisposableHandle,
    pub row_pitch: NonDisposableHandle,
    pub array_pitch: NonDisposableHandle,
    pub depth_pitch: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImageViewCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImageViewCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub image: NonDisposableHandle,
    pub view_type: NonDisposableHandle,
    pub format: NonDisposableHandle,
    pub components: VkComponentMapping,
    pub subresource_range: VkImageSubresourceRange,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBufferCopy.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBufferCopy {
    pub src_offset: NonDisposableHandle,
    pub dst_offset: NonDisposableHandle,
    pub size: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSparseMemoryBind.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSparseMemoryBind {
    pub resource_offset: NonDisposableHandle,
    pub size: NonDisposableHandle,
    pub memory: NonDisposableHandle,
    pub memory_offset: NonDisposableHandle,
    pub flags: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSparseImageMemoryBind.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSparseImageMemoryBind {
    pub subresource: VkImageSubresource,
    pub offset: VkOffset3D,
    pub extent: VkExtent3D,
    pub memory: NonDisposableHandle,
    pub memory_offset: NonDisposableHandle,
    pub flags: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSparseBufferMemoryBindInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSparseBufferMemoryBindInfo {
    pub buffer: NonDisposableHandle,
    pub bind_count: u32,
    #[cdump(array(len = self.bind_count))]
    pub p_binds: *const VkSparseMemoryBind,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSparseImageOpaqueMemoryBindInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSparseImageOpaqueMemoryBindInfo {
    pub image: NonDisposableHandle,
    pub bind_count: u32,
    #[cdump(array(len = self.bind_count))]
    pub p_binds: *const VkSparseMemoryBind,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSparseImageMemoryBindInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSparseImageMemoryBindInfo {
    pub image: NonDisposableHandle,
    pub bind_count: u32,
    #[cdump(array(len = self.bind_count))]
    pub p_binds: *const VkSparseImageMemoryBind,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBindSparseInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBindSparseInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub wait_semaphore_count: u32,
    #[cdump(array(len = self.wait_semaphore_count))]
    pub p_wait_semaphores: *const NonDisposableHandle,
    pub buffer_bind_count: u32,
    #[cdump(array(len = self.buffer_bind_count))]
    pub p_buffer_binds: *const VkSparseBufferMemoryBindInfo,
    pub image_opaque_bind_count: u32,
    #[cdump(array(len = self.image_opaque_bind_count))]
    pub p_image_opaque_binds: *const VkSparseImageOpaqueMemoryBindInfo,
    pub image_bind_count: u32,
    #[cdump(array(len = self.image_bind_count))]
    pub p_image_binds: *const VkSparseImageMemoryBindInfo,
    pub signal_semaphore_count: u32,
    #[cdump(array(len = self.signal_semaphore_count))]
    pub p_signal_semaphores: *const NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImageCopy.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImageCopy {
    pub src_subresource: VkImageSubresourceLayers,
    pub src_offset: VkOffset3D,
    pub dst_subresource: VkImageSubresourceLayers,
    pub dst_offset: VkOffset3D,
    pub extent: VkExtent3D,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImageBlit.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImageBlit {
    pub src_subresource: VkImageSubresourceLayers,
    pub src_offsets: [VkOffset3D; 2],
    pub dst_subresource: VkImageSubresourceLayers,
    pub dst_offsets: [VkOffset3D; 2],
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBufferImageCopy.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBufferImageCopy {
    pub buffer_offset: NonDisposableHandle,
    pub buffer_row_length: u32,
    pub buffer_image_height: u32,
    pub image_subresource: VkImageSubresourceLayers,
    pub image_offset: VkOffset3D,
    pub image_extent: VkExtent3D,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkCopyMemoryIndirectCommandNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkCopyMemoryIndirectCommandNV {
    pub src_address: NonDisposableHandle,
    pub dst_address: NonDisposableHandle,
    pub size: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkCopyMemoryToImageIndirectCommandNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkCopyMemoryToImageIndirectCommandNV {
    pub src_address: NonDisposableHandle,
    pub buffer_row_length: u32,
    pub buffer_image_height: u32,
    pub image_subresource: VkImageSubresourceLayers,
    pub image_offset: VkOffset3D,
    pub image_extent: VkExtent3D,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImageResolve.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImageResolve {
    pub src_subresource: VkImageSubresourceLayers,
    pub src_offset: VkOffset3D,
    pub dst_subresource: VkImageSubresourceLayers,
    pub dst_offset: VkOffset3D,
    pub extent: VkExtent3D,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkShaderModuleCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkShaderModuleCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub code_size: usize,
    #[cdump(array(len = self.code_size / 4))]
    pub p_code: *const u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDescriptorSetLayoutBinding.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDescriptorSetLayoutBinding {
    pub binding: u32,
    pub descriptor_type: NonDisposableHandle,
    pub descriptor_count: u32,
    pub stage_flags: NonDisposableHandle,
    #[cdump(array(len = self.descriptor_count))]
    pub p_immutable_samplers: *const NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDescriptorSetLayoutCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDescriptorSetLayoutCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub binding_count: u32,
    #[cdump(array(len = self.binding_count))]
    pub p_bindings: *const VkDescriptorSetLayoutBinding,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDescriptorPoolSize.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDescriptorPoolSize {
    pub type_: NonDisposableHandle,
    pub descriptor_count: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDescriptorPoolCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDescriptorPoolCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub max_sets: u32,
    pub pool_size_count: u32,
    #[cdump(array(len = self.pool_size_count))]
    pub p_pool_sizes: *const VkDescriptorPoolSize,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDescriptorSetAllocateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDescriptorSetAllocateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub descriptor_pool: NonDisposableHandle,
    pub descriptor_set_count: u32,
    #[cdump(array(len = self.descriptor_set_count))]
    pub p_set_layouts: *const NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSpecializationMapEntry.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSpecializationMapEntry {
    pub constant_id: u32,
    pub offset: u32,
    pub size: usize,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSpecializationInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSpecializationInfo {
    pub map_entry_count: u32,
    #[cdump(array(len = self.map_entry_count))]
    pub p_map_entries: *const VkSpecializationMapEntry,
    pub data_size: usize,
    #[cdump(array(len = self.data_size))]
    pub p_data: *const u8,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineShaderStageCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineShaderStageCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub stage: vk::ShaderStageFlags,
    pub module: NonDisposableHandle,
    pub p_name: *const c_char,
    pub p_specialization_info: *const VkSpecializationInfo,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkComputePipelineCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkComputePipelineCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub stage: VkPipelineShaderStageCreateInfo,
    pub layout: NonDisposableHandle,
    pub base_pipeline_handle: NonDisposableHandle,
    pub base_pipeline_index: i32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkComputePipelineIndirectBufferInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkComputePipelineIndirectBufferInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub device_address: NonDisposableHandle,
    pub size: NonDisposableHandle,
    pub pipeline_device_address_capture_replay: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineCreateFlags2CreateInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineCreateFlags2CreateInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVertexInputBindingDescription.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVertexInputBindingDescription {
    pub binding: u32,
    pub stride: u32,
    pub input_rate: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVertexInputAttributeDescription.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVertexInputAttributeDescription {
    pub location: u32,
    pub binding: u32,
    pub format: NonDisposableHandle,
    pub offset: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineVertexInputStateCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineVertexInputStateCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub vertex_binding_description_count: u32,
    #[cdump(array(len = self.vertex_binding_description_count))]
    pub p_vertex_binding_descriptions: *const VkVertexInputBindingDescription,
    pub vertex_attribute_description_count: u32,
    #[cdump(array(len = self.vertex_attribute_description_count))]
    pub p_vertex_attribute_descriptions: *const VkVertexInputAttributeDescription,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineInputAssemblyStateCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineInputAssemblyStateCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub topology: NonDisposableHandle,
    pub primitive_restart_enable: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineTessellationStateCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineTessellationStateCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub patch_control_points: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineViewportStateCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineViewportStateCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub viewport_count: u32,
    #[cdump(array(len = self.viewport_count))]
    pub p_viewports: *const VkViewport,
    pub scissor_count: u32,
    #[cdump(array(len = self.scissor_count))]
    pub p_scissors: *const VkRect2D,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineRasterizationStateCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineRasterizationStateCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub depth_clamp_enable: NonDisposableHandle,
    pub rasterizer_discard_enable: NonDisposableHandle,
    pub polygon_mode: NonDisposableHandle,
    pub cull_mode: NonDisposableHandle,
    pub front_face: NonDisposableHandle,
    pub depth_bias_enable: NonDisposableHandle,
    pub depth_bias_constant_factor: f32,
    pub depth_bias_clamp: f32,
    pub depth_bias_slope_factor: f32,
    pub line_width: f32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineMultisampleStateCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineMultisampleStateCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub rasterization_samples: vk::SampleCountFlags,
    pub sample_shading_enable: NonDisposableHandle,
    pub min_sample_shading: f32,
    #[cdump(array(len = (self.rasterization_samples.as_raw() + 31) / 32))]
    pub p_sample_mask: *const NonDisposableHandle,
    pub alpha_to_coverage_enable: NonDisposableHandle,
    pub alpha_to_one_enable: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineColorBlendAttachmentState.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineColorBlendAttachmentState {
    pub blend_enable: NonDisposableHandle,
    pub src_color_blend_factor: NonDisposableHandle,
    pub dst_color_blend_factor: NonDisposableHandle,
    pub color_blend_op: NonDisposableHandle,
    pub src_alpha_blend_factor: NonDisposableHandle,
    pub dst_alpha_blend_factor: NonDisposableHandle,
    pub alpha_blend_op: NonDisposableHandle,
    pub color_write_mask: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineColorBlendStateCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineColorBlendStateCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub logic_op_enable: NonDisposableHandle,
    pub logic_op: NonDisposableHandle,
    pub attachment_count: u32,
    #[cdump(array(len = self.attachment_count))]
    pub p_attachments: *const VkPipelineColorBlendAttachmentState,
    pub blend_constants: [f32; 4],
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineDynamicStateCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineDynamicStateCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub dynamic_state_count: u32,
    #[cdump(array(len = self.dynamic_state_count))]
    pub p_dynamic_states: *const NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkStencilOpState.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkStencilOpState {
    pub fail_op: NonDisposableHandle,
    pub pass_op: NonDisposableHandle,
    pub depth_fail_op: NonDisposableHandle,
    pub compare_op: NonDisposableHandle,
    pub compare_mask: u32,
    pub write_mask: u32,
    pub reference: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineDepthStencilStateCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineDepthStencilStateCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub depth_test_enable: NonDisposableHandle,
    pub depth_write_enable: NonDisposableHandle,
    pub depth_compare_op: NonDisposableHandle,
    pub depth_bounds_test_enable: NonDisposableHandle,
    pub stencil_test_enable: NonDisposableHandle,
    pub front: VkStencilOpState,
    pub back: VkStencilOpState,
    pub min_depth_bounds: f32,
    pub max_depth_bounds: f32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkGraphicsPipelineCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkGraphicsPipelineCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub stage_count: u32,
    #[cdump(array(len = self.stage_count))]
    pub p_stages: *const VkPipelineShaderStageCreateInfo,
    pub p_vertex_input_state: *const VkPipelineVertexInputStateCreateInfo,
    pub p_input_assembly_state: *const VkPipelineInputAssemblyStateCreateInfo,
    pub p_tessellation_state: *const VkPipelineTessellationStateCreateInfo,
    pub p_viewport_state: *const VkPipelineViewportStateCreateInfo,
    pub p_rasterization_state: *const VkPipelineRasterizationStateCreateInfo,
    pub p_multisample_state: *const VkPipelineMultisampleStateCreateInfo,
    pub p_depth_stencil_state: *const VkPipelineDepthStencilStateCreateInfo,
    pub p_color_blend_state: *const VkPipelineColorBlendStateCreateInfo,
    pub p_dynamic_state: *const VkPipelineDynamicStateCreateInfo,
    pub layout: NonDisposableHandle,
    pub render_pass: NonDisposableHandle,
    pub subpass: u32,
    pub base_pipeline_handle: NonDisposableHandle,
    pub base_pipeline_index: i32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineCacheCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineCacheCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub initial_data_size: usize,
    #[cdump(array(len = self.initial_data_size))]
    pub p_initial_data: *const u8,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineCacheHeaderVersionOne.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineCacheHeaderVersionOne {
    pub header_size: u32,
    pub header_version: NonDisposableHandle,
    pub vendor_id: u32,
    pub device_id: u32,
    pub pipeline_cache_uuid: [u8; vk::UUID_SIZE],
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPushConstantRange.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPushConstantRange {
    pub stage_flags: NonDisposableHandle,
    pub offset: u32,
    pub size: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineLayoutCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineLayoutCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub set_layout_count: u32,
    #[cdump(array(len = self.set_layout_count))]
    pub p_set_layouts: *const NonDisposableHandle,
    pub push_constant_range_count: u32,
    #[cdump(array(len = self.push_constant_range_count))]
    pub p_push_constant_ranges: *const VkPushConstantRange,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSamplerCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSamplerCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub mag_filter: NonDisposableHandle,
    pub min_filter: NonDisposableHandle,
    pub mipmap_mode: NonDisposableHandle,
    pub address_mode_u: NonDisposableHandle,
    pub address_mode_v: NonDisposableHandle,
    pub address_mode_w: NonDisposableHandle,
    pub mip_lod_bias: f32,
    pub anisotropy_enable: NonDisposableHandle,
    pub max_anisotropy: f32,
    pub compare_enable: NonDisposableHandle,
    pub compare_op: NonDisposableHandle,
    pub min_lod: f32,
    pub max_lod: f32,
    pub border_color: NonDisposableHandle,
    pub unnormalized_coordinates: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkCommandPoolCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkCommandPoolCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub queue_family_index: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkCommandBufferAllocateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkCommandBufferAllocateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub command_pool: NonDisposableHandle,
    pub level: NonDisposableHandle,
    pub command_buffer_count: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkCommandBufferInheritanceInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkCommandBufferInheritanceInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub render_pass: NonDisposableHandle,
    pub subpass: u32,
    pub framebuffer: NonDisposableHandle,
    pub occlusion_query_enable: NonDisposableHandle,
    pub query_flags: NonDisposableHandle,
    pub pipeline_statistics: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkCommandBufferBeginInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkCommandBufferBeginInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub p_inheritance_info: *const VkCommandBufferInheritanceInfo,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkRenderPassBeginInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkRenderPassBeginInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub render_pass: NonDisposableHandle,
    pub framebuffer: NonDisposableHandle,
    pub render_area: VkRect2D,
    pub clear_value_count: u32,
    #[cdump(array(len = self.clear_value_count))]
    pub p_clear_values: *const VkClearValue,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkClearColorValue.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkClearColorValue {
    pub float32: [f32; 4],
    pub int32: [i32; 4],
    pub uint32: [u32; 4],
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkClearDepthStencilValue.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkClearDepthStencilValue {
    pub depth: f32,
    pub stencil: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkClearValue.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkClearValue {
    pub color: VkClearColorValue,
    pub depth_stencil: VkClearDepthStencilValue,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkClearAttachment.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkClearAttachment {
    pub aspect_mask: NonDisposableHandle,
    pub color_attachment: u32,
    pub clear_value: VkClearValue,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAttachmentDescription.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAttachmentDescription {
    pub flags: NonDisposableHandle,
    pub format: NonDisposableHandle,
    pub samples: vk::SampleCountFlags,
    pub load_op: NonDisposableHandle,
    pub store_op: NonDisposableHandle,
    pub stencil_load_op: NonDisposableHandle,
    pub stencil_store_op: NonDisposableHandle,
    pub initial_layout: NonDisposableHandle,
    pub final_layout: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAttachmentReference.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAttachmentReference {
    pub attachment: u32,
    pub layout: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSubpassDescription.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSubpassDescription {
    pub flags: NonDisposableHandle,
    pub pipeline_bind_point: NonDisposableHandle,
    pub input_attachment_count: u32,
    #[cdump(array(len = self.input_attachment_count))]
    pub p_input_attachments: *const VkAttachmentReference,
    pub color_attachment_count: u32,
    #[cdump(array(len = self.color_attachment_count))]
    pub p_color_attachments: *const VkAttachmentReference,
    #[cdump(array(len = self.color_attachment_count))]
    pub p_resolve_attachments: *const VkAttachmentReference,
    pub p_depth_stencil_attachment: *const VkAttachmentReference,
    pub preserve_attachment_count: u32,
    #[cdump(array(len = self.preserve_attachment_count))]
    pub p_preserve_attachments: *const u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSubpassDependency.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSubpassDependency {
    pub src_subpass: u32,
    pub dst_subpass: u32,
    pub src_stage_mask: NonDisposableHandle,
    pub dst_stage_mask: NonDisposableHandle,
    pub src_access_mask: NonDisposableHandle,
    pub dst_access_mask: NonDisposableHandle,
    pub dependency_flags: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkRenderPassCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkRenderPassCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub attachment_count: u32,
    #[cdump(array(len = self.attachment_count))]
    pub p_attachments: *const VkAttachmentDescription,
    pub subpass_count: u32,
    #[cdump(array(len = self.subpass_count))]
    pub p_subpasses: *const VkSubpassDescription,
    pub dependency_count: u32,
    #[cdump(array(len = self.dependency_count))]
    pub p_dependencies: *const VkSubpassDependency,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkEventCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkEventCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkFenceCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkFenceCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceFeatures.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceFeatures {
    pub robust_buffer_access: NonDisposableHandle,
    pub full_draw_index_uint32: NonDisposableHandle,
    pub image_cube_array: NonDisposableHandle,
    pub independent_blend: NonDisposableHandle,
    pub geometry_shader: NonDisposableHandle,
    pub tessellation_shader: NonDisposableHandle,
    pub sample_rate_shading: NonDisposableHandle,
    pub dual_src_blend: NonDisposableHandle,
    pub logic_op: NonDisposableHandle,
    pub multi_draw_indirect: NonDisposableHandle,
    pub draw_indirect_first_instance: NonDisposableHandle,
    pub depth_clamp: NonDisposableHandle,
    pub depth_bias_clamp: NonDisposableHandle,
    pub fill_mode_non_solid: NonDisposableHandle,
    pub depth_bounds: NonDisposableHandle,
    pub wide_lines: NonDisposableHandle,
    pub large_points: NonDisposableHandle,
    pub alpha_to_one: NonDisposableHandle,
    pub multi_viewport: NonDisposableHandle,
    pub sampler_anisotropy: NonDisposableHandle,
    pub texture_compression_etc2: NonDisposableHandle,
    pub texture_compression_astc_ldr: NonDisposableHandle,
    pub texture_compression_bc: NonDisposableHandle,
    pub occlusion_query_precise: NonDisposableHandle,
    pub pipeline_statistics_query: NonDisposableHandle,
    pub vertex_pipeline_stores_and_atomics: NonDisposableHandle,
    pub fragment_stores_and_atomics: NonDisposableHandle,
    pub shader_tessellation_and_geometry_point_size: NonDisposableHandle,
    pub shader_image_gather_extended: NonDisposableHandle,
    pub shader_storage_image_extended_formats: NonDisposableHandle,
    pub shader_storage_image_multisample: NonDisposableHandle,
    pub shader_storage_image_read_without_format: NonDisposableHandle,
    pub shader_storage_image_write_without_format: NonDisposableHandle,
    pub shader_uniform_buffer_array_dynamic_indexing: NonDisposableHandle,
    pub shader_sampled_image_array_dynamic_indexing: NonDisposableHandle,
    pub shader_storage_buffer_array_dynamic_indexing: NonDisposableHandle,
    pub shader_storage_image_array_dynamic_indexing: NonDisposableHandle,
    pub shader_clip_distance: NonDisposableHandle,
    pub shader_cull_distance: NonDisposableHandle,
    pub shader_float64: NonDisposableHandle,
    pub shader_int64: NonDisposableHandle,
    pub shader_int16: NonDisposableHandle,
    pub shader_resource_residency: NonDisposableHandle,
    pub shader_resource_min_lod: NonDisposableHandle,
    pub sparse_binding: NonDisposableHandle,
    pub sparse_residency_buffer: NonDisposableHandle,
    pub sparse_residency_image2_d: NonDisposableHandle,
    pub sparse_residency_image3_d: NonDisposableHandle,
    pub sparse_residency2_samples: NonDisposableHandle,
    pub sparse_residency4_samples: NonDisposableHandle,
    pub sparse_residency8_samples: NonDisposableHandle,
    pub sparse_residency16_samples: NonDisposableHandle,
    pub sparse_residency_aliased: NonDisposableHandle,
    pub variable_multisample_rate: NonDisposableHandle,
    pub inherited_queries: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceSparseProperties.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceSparseProperties {
    pub residency_standard2_dblock_shape: NonDisposableHandle,
    pub residency_standard2_dmultisample_block_shape: NonDisposableHandle,
    pub residency_standard3_dblock_shape: NonDisposableHandle,
    pub residency_aligned_mip_size: NonDisposableHandle,
    pub residency_non_resident_strict: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceLimits.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceLimits {
    pub max_image_dimension1_d: u32,
    pub max_image_dimension2_d: u32,
    pub max_image_dimension3_d: u32,
    pub max_image_dimension_cube: u32,
    pub max_image_array_layers: u32,
    pub max_texel_buffer_elements: u32,
    pub max_uniform_buffer_range: u32,
    pub max_storage_buffer_range: u32,
    pub max_push_constants_size: u32,
    pub max_memory_allocation_count: u32,
    pub max_sampler_allocation_count: u32,
    pub buffer_image_granularity: NonDisposableHandle,
    pub sparse_address_space_size: NonDisposableHandle,
    pub max_bound_descriptor_sets: u32,
    pub max_per_stage_descriptor_samplers: u32,
    pub max_per_stage_descriptor_uniform_buffers: u32,
    pub max_per_stage_descriptor_storage_buffers: u32,
    pub max_per_stage_descriptor_sampled_images: u32,
    pub max_per_stage_descriptor_storage_images: u32,
    pub max_per_stage_descriptor_input_attachments: u32,
    pub max_per_stage_resources: u32,
    pub max_descriptor_set_samplers: u32,
    pub max_descriptor_set_uniform_buffers: u32,
    pub max_descriptor_set_uniform_buffers_dynamic: u32,
    pub max_descriptor_set_storage_buffers: u32,
    pub max_descriptor_set_storage_buffers_dynamic: u32,
    pub max_descriptor_set_sampled_images: u32,
    pub max_descriptor_set_storage_images: u32,
    pub max_descriptor_set_input_attachments: u32,
    pub max_vertex_input_attributes: u32,
    pub max_vertex_input_bindings: u32,
    pub max_vertex_input_attribute_offset: u32,
    pub max_vertex_input_binding_stride: u32,
    pub max_vertex_output_components: u32,
    pub max_tessellation_generation_level: u32,
    pub max_tessellation_patch_size: u32,
    pub max_tessellation_control_per_vertex_input_components: u32,
    pub max_tessellation_control_per_vertex_output_components: u32,
    pub max_tessellation_control_per_patch_output_components: u32,
    pub max_tessellation_control_total_output_components: u32,
    pub max_tessellation_evaluation_input_components: u32,
    pub max_tessellation_evaluation_output_components: u32,
    pub max_geometry_shader_invocations: u32,
    pub max_geometry_input_components: u32,
    pub max_geometry_output_components: u32,
    pub max_geometry_output_vertices: u32,
    pub max_geometry_total_output_components: u32,
    pub max_fragment_input_components: u32,
    pub max_fragment_output_attachments: u32,
    pub max_fragment_dual_src_attachments: u32,
    pub max_fragment_combined_output_resources: u32,
    pub max_compute_shared_memory_size: u32,
    pub max_compute_work_group_count: [u32; 3],
    pub max_compute_work_group_invocations: u32,
    pub max_compute_work_group_size: [u32; 3],
    pub sub_pixel_precision_bits: u32,
    pub sub_texel_precision_bits: u32,
    pub mipmap_precision_bits: u32,
    pub max_draw_indexed_index_value: u32,
    pub max_draw_indirect_count: u32,
    pub max_sampler_lod_bias: f32,
    pub max_sampler_anisotropy: f32,
    pub max_viewports: u32,
    pub max_viewport_dimensions: [u32; 2],
    pub viewport_bounds_range: [f32; 2],
    pub viewport_sub_pixel_bits: u32,
    pub min_memory_map_alignment: usize,
    pub min_texel_buffer_offset_alignment: NonDisposableHandle,
    pub min_uniform_buffer_offset_alignment: NonDisposableHandle,
    pub min_storage_buffer_offset_alignment: NonDisposableHandle,
    pub min_texel_offset: i32,
    pub max_texel_offset: u32,
    pub min_texel_gather_offset: i32,
    pub max_texel_gather_offset: u32,
    pub min_interpolation_offset: f32,
    pub max_interpolation_offset: f32,
    pub sub_pixel_interpolation_offset_bits: u32,
    pub max_framebuffer_width: u32,
    pub max_framebuffer_height: u32,
    pub max_framebuffer_layers: u32,
    pub framebuffer_color_sample_counts: NonDisposableHandle,
    pub framebuffer_depth_sample_counts: NonDisposableHandle,
    pub framebuffer_stencil_sample_counts: NonDisposableHandle,
    pub framebuffer_no_attachments_sample_counts: NonDisposableHandle,
    pub max_color_attachments: u32,
    pub sampled_image_color_sample_counts: NonDisposableHandle,
    pub sampled_image_integer_sample_counts: NonDisposableHandle,
    pub sampled_image_depth_sample_counts: NonDisposableHandle,
    pub sampled_image_stencil_sample_counts: NonDisposableHandle,
    pub storage_image_sample_counts: NonDisposableHandle,
    pub max_sample_mask_words: u32,
    pub timestamp_compute_and_graphics: NonDisposableHandle,
    pub timestamp_period: f32,
    pub max_clip_distances: u32,
    pub max_cull_distances: u32,
    pub max_combined_clip_and_cull_distances: u32,
    pub discrete_queue_priorities: u32,
    pub point_size_range: [f32; 2],
    pub line_width_range: [f32; 2],
    pub point_size_granularity: f32,
    pub line_width_granularity: f32,
    pub strict_lines: NonDisposableHandle,
    pub standard_sample_locations: NonDisposableHandle,
    pub optimal_buffer_copy_offset_alignment: NonDisposableHandle,
    pub optimal_buffer_copy_row_pitch_alignment: NonDisposableHandle,
    pub non_coherent_atom_size: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSemaphoreCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSemaphoreCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkQueryPoolCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkQueryPoolCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub query_type: NonDisposableHandle,
    pub query_count: u32,
    pub pipeline_statistics: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkFramebufferCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkFramebufferCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub render_pass: NonDisposableHandle,
    pub attachment_count: u32,
    #[cdump(array(len = self.attachment_count))]
    pub p_attachments: *const NonDisposableHandle,
    pub width: u32,
    pub height: u32,
    pub layers: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDrawIndirectCommand.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDrawIndirectCommand {
    pub vertex_count: u32,
    pub instance_count: u32,
    pub first_vertex: u32,
    pub first_instance: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDrawIndexedIndirectCommand.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDrawIndexedIndirectCommand {
    pub index_count: u32,
    pub instance_count: u32,
    pub first_index: u32,
    pub vertex_offset: i32,
    pub first_instance: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDispatchIndirectCommand.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDispatchIndirectCommand {
    pub x: u32,
    pub y: u32,
    pub z: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMultiDrawInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMultiDrawInfoEXT {
    pub first_vertex: u32,
    pub vertex_count: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMultiDrawIndexedInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMultiDrawIndexedInfoEXT {
    pub first_index: u32,
    pub index_count: u32,
    pub vertex_offset: i32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSubmitInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSubmitInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub wait_semaphore_count: u32,
    #[cdump(array(len = self.wait_semaphore_count))]
    pub p_wait_semaphores: *const NonDisposableHandle,
    #[cdump(array(len = self.wait_semaphore_count))]
    pub p_wait_dst_stage_mask: *const NonDisposableHandle,
    pub command_buffer_count: u32,
    #[cdump(array(len = self.command_buffer_count))]
    pub p_command_buffers: *const NonDisposableHandle,
    pub signal_semaphore_count: u32,
    #[cdump(array(len = self.signal_semaphore_count))]
    pub p_signal_semaphores: *const NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDisplayPropertiesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDisplayPropertiesKHR {
    pub display: NonDisposableHandle,
    pub display_name: *const c_char,
    pub physical_dimensions: VkExtent2D,
    pub physical_resolution: VkExtent2D,
    pub supported_transforms: NonDisposableHandle,
    pub plane_reorder_possible: NonDisposableHandle,
    pub persistent_content: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDisplayPlanePropertiesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDisplayPlanePropertiesKHR {
    pub current_display: NonDisposableHandle,
    pub current_stack_index: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDisplayModeParametersKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDisplayModeParametersKHR {
    pub visible_region: VkExtent2D,
    pub refresh_rate: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDisplayModePropertiesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDisplayModePropertiesKHR {
    pub display_mode: NonDisposableHandle,
    pub parameters: VkDisplayModeParametersKHR,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDisplayModeCreateInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDisplayModeCreateInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub parameters: VkDisplayModeParametersKHR,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDisplayPlaneCapabilitiesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDisplayPlaneCapabilitiesKHR {
    pub supported_alpha: NonDisposableHandle,
    pub min_src_position: VkOffset2D,
    pub max_src_position: VkOffset2D,
    pub min_src_extent: VkExtent2D,
    pub max_src_extent: VkExtent2D,
    pub min_dst_position: VkOffset2D,
    pub max_dst_position: VkOffset2D,
    pub min_dst_extent: VkExtent2D,
    pub max_dst_extent: VkExtent2D,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDisplaySurfaceCreateInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDisplaySurfaceCreateInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub display_mode: NonDisposableHandle,
    pub plane_index: u32,
    pub plane_stack_index: u32,
    pub transform: NonDisposableHandle,
    pub global_alpha: f32,
    pub alpha_mode: NonDisposableHandle,
    pub image_extent: VkExtent2D,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDisplayPresentInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDisplayPresentInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub src_rect: VkRect2D,
    pub dst_rect: VkRect2D,
    pub persistent: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSurfaceCapabilitiesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSurfaceCapabilitiesKHR {
    pub min_image_count: u32,
    pub max_image_count: u32,
    pub current_extent: VkExtent2D,
    pub min_image_extent: VkExtent2D,
    pub max_image_extent: VkExtent2D,
    pub max_image_array_layers: u32,
    pub supported_transforms: NonDisposableHandle,
    pub current_transform: NonDisposableHandle,
    pub supported_composite_alpha: NonDisposableHandle,
    pub supported_usage_flags: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAndroidSurfaceCreateInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAndroidSurfaceCreateInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub window: *mut usize,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkViSurfaceCreateInfoNN.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkViSurfaceCreateInfoNN {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    #[cdump(dynamic(serializer = unimplemented_serializer, deserializer = unimplemented_deserializer_mut))]
    pub window: *mut c_void,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkWaylandSurfaceCreateInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkWaylandSurfaceCreateInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub display: *mut usize,
    pub surface: *mut usize,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkWin32SurfaceCreateInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkWin32SurfaceCreateInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub hinstance: vk::HINSTANCE,
    pub hwnd: vk::HANDLE,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkXlibSurfaceCreateInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkXlibSurfaceCreateInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub dpy: *mut usize,
    pub window: usize,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkXcbSurfaceCreateInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkXcbSurfaceCreateInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub connection: *mut usize,
    pub window: usize,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDirectFBSurfaceCreateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDirectFBSurfaceCreateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub dfb: *mut usize,
    pub surface: *mut usize,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImagePipeSurfaceCreateInfoFUCHSIA.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImagePipeSurfaceCreateInfoFUCHSIA {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub image_pipe_handle: vk::zx_handle_t,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkStreamDescriptorSurfaceCreateInfoGGP.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkStreamDescriptorSurfaceCreateInfoGGP {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub stream_descriptor: vk::GgpStreamDescriptor,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkScreenSurfaceCreateInfoQNX.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkScreenSurfaceCreateInfoQNX {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub context: *mut usize,
    pub window: *mut usize,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSurfaceFormatKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSurfaceFormatKHR {
    pub format: NonDisposableHandle,
    pub color_space: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSwapchainCreateInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSwapchainCreateInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub surface: NonDisposableHandle,
    pub min_image_count: u32,
    pub image_format: NonDisposableHandle,
    pub image_color_space: NonDisposableHandle,
    pub image_extent: VkExtent2D,
    pub image_array_layers: u32,
    pub image_usage: NonDisposableHandle,
    pub image_sharing_mode: NonDisposableHandle,
    pub queue_family_index_count: u32,
    #[cdump(array(len = self.queue_family_index_count))]
    pub p_queue_family_indices: *const u32,
    pub pre_transform: NonDisposableHandle,
    pub composite_alpha: NonDisposableHandle,
    pub present_mode: NonDisposableHandle,
    pub clipped: NonDisposableHandle,
    pub old_swapchain: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPresentInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPresentInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub wait_semaphore_count: u32,
    #[cdump(array(len = self.wait_semaphore_count))]
    pub p_wait_semaphores: *const NonDisposableHandle,
    pub swapchain_count: u32,
    #[cdump(array(len = self.swapchain_count))]
    pub p_swapchains: *const NonDisposableHandle,
    #[cdump(array(len = self.swapchain_count))]
    pub p_image_indices: *const u32,
    #[cdump(array(len = self.swapchain_count))]
    pub p_results: *mut NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDebugReportCallbackCreateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDebugReportCallbackCreateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub pfn_callback: vk::PFN_vkDebugReportCallbackEXT,
    #[cdump(dynamic(serializer = unimplemented_serializer, deserializer = unimplemented_deserializer_mut))]
    pub p_user_data: *mut c_void,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkValidationFlagsEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkValidationFlagsEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub disabled_validation_check_count: u32,
    #[cdump(array(len = self.disabled_validation_check_count))]
    pub p_disabled_validation_checks: *const NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkValidationFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkValidationFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub enabled_validation_feature_count: u32,
    #[cdump(array(len = self.enabled_validation_feature_count))]
    pub p_enabled_validation_features: *const NonDisposableHandle,
    pub disabled_validation_feature_count: u32,
    #[cdump(array(len = self.disabled_validation_feature_count))]
    pub p_disabled_validation_features: *const NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkLayerSettingsCreateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkLayerSettingsCreateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub setting_count: u32,
    #[cdump(array(len = self.setting_count))]
    pub p_settings: *const VkLayerSettingEXT,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkLayerSettingEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkLayerSettingEXT {
    pub p_layer_name: *const c_char,
    pub p_setting_name: *const c_char,
    pub type_: NonDisposableHandle,
    pub value_count: u32,
    #[cdump(array(len = self.value_count))]
    #[cdump(dynamic(serializer = unimplemented_serializer, deserializer = unimplemented_deserializer))]
    pub p_values: *const *const c_void, /* TODO: Add correct type */
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineRasterizationStateRasterizationOrderAMD.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineRasterizationStateRasterizationOrderAMD {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub rasterization_order: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDebugMarkerObjectNameInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDebugMarkerObjectNameInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub object_type: NonDisposableHandle,
    pub object: u64,
    pub p_object_name: *const c_char,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDebugMarkerObjectTagInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDebugMarkerObjectTagInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub object_type: NonDisposableHandle,
    pub object: u64,
    pub tag_name: u64,
    pub tag_size: usize,
    #[cdump(array(len = self.tag_size))]
    pub p_tag: *const u8,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDebugMarkerMarkerInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDebugMarkerMarkerInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub p_marker_name: *const c_char,
    pub color: [f32; 4],
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDedicatedAllocationImageCreateInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDedicatedAllocationImageCreateInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub dedicated_allocation: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDedicatedAllocationBufferCreateInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDedicatedAllocationBufferCreateInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub dedicated_allocation: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDedicatedAllocationMemoryAllocateInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDedicatedAllocationMemoryAllocateInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub image: NonDisposableHandle,
    pub buffer: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkExternalImageFormatPropertiesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkExternalImageFormatPropertiesNV {
    pub image_format_properties: VkImageFormatProperties,
    pub external_memory_features: NonDisposableHandle,
    pub export_from_imported_handle_types: NonDisposableHandle,
    pub compatible_handle_types: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkExternalMemoryImageCreateInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkExternalMemoryImageCreateInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub handle_types: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkExportMemoryAllocateInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkExportMemoryAllocateInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub handle_types: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImportMemoryWin32HandleInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImportMemoryWin32HandleInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub handle_type: NonDisposableHandle,
    pub handle: vk::HANDLE,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkExportMemoryWin32HandleInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkExportMemoryWin32HandleInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub p_attributes: *const usize,
    pub dw_access: vk::DWORD,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkWin32KeyedMutexAcquireReleaseInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkWin32KeyedMutexAcquireReleaseInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub acquire_count: u32,
    #[cdump(array(len = self.acquire_count))]
    pub p_acquire_syncs: *const NonDisposableHandle,
    #[cdump(array(len = self.acquire_count))]
    pub p_acquire_keys: *const u64,
    #[cdump(array(len = self.acquire_count))]
    pub p_acquire_timeout_milliseconds: *const u32,
    pub release_count: u32,
    #[cdump(array(len = self.release_count))]
    pub p_release_syncs: *const NonDisposableHandle,
    #[cdump(array(len = self.release_count))]
    pub p_release_keys: *const u64,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub device_generated_commands: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub device_generated_compute: NonDisposableHandle,
    pub device_generated_compute_pipelines: NonDisposableHandle,
    pub device_generated_compute_capture_replay: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDevicePrivateDataCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDevicePrivateDataCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub private_data_slot_request_count: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPrivateDataSlotCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPrivateDataSlotCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDevicePrivateDataFeatures.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDevicePrivateDataFeatures {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub private_data: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub max_graphics_shader_group_count: u32,
    pub max_indirect_sequence_count: u32,
    pub max_indirect_commands_token_count: u32,
    pub max_indirect_commands_stream_count: u32,
    pub max_indirect_commands_token_offset: u32,
    pub max_indirect_commands_stream_stride: u32,
    pub min_sequences_count_buffer_offset_alignment: u32,
    pub min_sequences_index_buffer_offset_alignment: u32,
    pub min_indirect_commands_buffer_offset_alignment: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceMultiDrawPropertiesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceMultiDrawPropertiesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub max_multi_draw_count: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkGraphicsShaderGroupCreateInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkGraphicsShaderGroupCreateInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub stage_count: u32,
    #[cdump(array(len = self.stage_count))]
    pub p_stages: *const VkPipelineShaderStageCreateInfo,
    pub p_vertex_input_state: *const VkPipelineVertexInputStateCreateInfo,
    pub p_tessellation_state: *const VkPipelineTessellationStateCreateInfo,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkGraphicsPipelineShaderGroupsCreateInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkGraphicsPipelineShaderGroupsCreateInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub group_count: u32,
    #[cdump(array(len = self.group_count))]
    pub p_groups: *const VkGraphicsShaderGroupCreateInfoNV,
    pub pipeline_count: u32,
    #[cdump(array(len = self.pipeline_count))]
    pub p_pipelines: *const NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBindShaderGroupIndirectCommandNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBindShaderGroupIndirectCommandNV {
    pub group_index: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBindIndexBufferIndirectCommandNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBindIndexBufferIndirectCommandNV {
    pub buffer_address: NonDisposableHandle,
    pub size: u32,
    pub index_type: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBindVertexBufferIndirectCommandNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBindVertexBufferIndirectCommandNV {
    pub buffer_address: NonDisposableHandle,
    pub size: u32,
    pub stride: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSetStateFlagsIndirectCommandNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSetStateFlagsIndirectCommandNV {
    pub data: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkIndirectCommandsStreamNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkIndirectCommandsStreamNV {
    pub buffer: NonDisposableHandle,
    pub offset: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkIndirectCommandsLayoutTokenNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkIndirectCommandsLayoutTokenNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub token_type: NonDisposableHandle,
    pub stream: u32,
    pub offset: u32,
    pub vertex_binding_unit: u32,
    pub vertex_dynamic_stride: NonDisposableHandle,
    pub pushconstant_pipeline_layout: NonDisposableHandle,
    pub pushconstant_shader_stage_flags: NonDisposableHandle,
    pub pushconstant_offset: u32,
    pub pushconstant_size: u32,
    pub indirect_state_flags: NonDisposableHandle,
    pub index_type_count: u32,
    #[cdump(array(len = self.index_type_count))]
    pub p_index_types: *const NonDisposableHandle,
    #[cdump(array(len = self.index_type_count))]
    pub p_index_type_values: *const u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkIndirectCommandsLayoutCreateInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkIndirectCommandsLayoutCreateInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub pipeline_bind_point: NonDisposableHandle,
    pub token_count: u32,
    #[cdump(array(len = self.token_count))]
    pub p_tokens: *const VkIndirectCommandsLayoutTokenNV,
    pub stream_count: u32,
    #[cdump(array(len = self.stream_count))]
    pub p_stream_strides: *const u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkGeneratedCommandsInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkGeneratedCommandsInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub pipeline_bind_point: NonDisposableHandle,
    pub pipeline: NonDisposableHandle,
    pub indirect_commands_layout: NonDisposableHandle,
    pub stream_count: u32,
    #[cdump(array(len = self.stream_count))]
    pub p_streams: *const VkIndirectCommandsStreamNV,
    pub sequences_count: u32,
    pub preprocess_buffer: NonDisposableHandle,
    pub preprocess_offset: NonDisposableHandle,
    pub preprocess_size: NonDisposableHandle,
    pub sequences_count_buffer: NonDisposableHandle,
    pub sequences_count_offset: NonDisposableHandle,
    pub sequences_index_buffer: NonDisposableHandle,
    pub sequences_index_offset: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkGeneratedCommandsMemoryRequirementsInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkGeneratedCommandsMemoryRequirementsInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub pipeline_bind_point: NonDisposableHandle,
    pub pipeline: NonDisposableHandle,
    pub indirect_commands_layout: NonDisposableHandle,
    pub max_sequences_count: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineIndirectDeviceAddressInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineIndirectDeviceAddressInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub pipeline_bind_point: NonDisposableHandle,
    pub pipeline: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBindPipelineIndirectCommandNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBindPipelineIndirectCommandNV {
    pub pipeline_address: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceFeatures2.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceFeatures2 {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub features: VkPhysicalDeviceFeatures,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceProperties2.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceProperties2 {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub properties: VkPhysicalDeviceProperties,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkFormatProperties2.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkFormatProperties2 {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub format_properties: VkFormatProperties,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImageFormatProperties2.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImageFormatProperties2 {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub image_format_properties: VkImageFormatProperties,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceImageFormatInfo2.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceImageFormatInfo2 {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub format: NonDisposableHandle,
    pub type_: NonDisposableHandle,
    pub tiling: NonDisposableHandle,
    pub usage: NonDisposableHandle,
    pub flags: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkQueueFamilyProperties2.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkQueueFamilyProperties2 {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub queue_family_properties: VkQueueFamilyProperties,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceMemoryProperties2.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceMemoryProperties2 {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub memory_properties: VkPhysicalDeviceMemoryProperties,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSparseImageFormatProperties2.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSparseImageFormatProperties2 {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub properties: VkSparseImageFormatProperties,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceSparseImageFormatInfo2.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceSparseImageFormatInfo2 {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub format: NonDisposableHandle,
    pub type_: NonDisposableHandle,
    pub samples: vk::SampleCountFlags,
    pub usage: NonDisposableHandle,
    pub tiling: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDevicePushDescriptorPropertiesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDevicePushDescriptorPropertiesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub max_push_descriptors: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkConformanceVersion.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkConformanceVersion {
    pub major: u8,
    pub minor: u8,
    pub subminor: u8,
    pub patch: u8,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceDriverProperties.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceDriverProperties {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub driver_id: NonDisposableHandle,
    pub driver_name: [c_char; vk::MAX_DRIVER_NAME_SIZE],
    pub driver_info: [c_char; vk::MAX_DRIVER_INFO_SIZE],
    pub conformance_version: VkConformanceVersion,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPresentRegionsKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPresentRegionsKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub swapchain_count: u32,
    #[cdump(array(len = self.swapchain_count))]
    pub p_regions: *const VkPresentRegionKHR,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPresentRegionKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPresentRegionKHR {
    pub rectangle_count: u32,
    #[cdump(array(len = self.rectangle_count))]
    pub p_rectangles: *const VkRectLayerKHR,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkRectLayerKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkRectLayerKHR {
    pub offset: VkOffset2D,
    pub extent: VkExtent2D,
    pub layer: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceVariablePointersFeatures.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceVariablePointersFeatures {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub variable_pointers_storage_buffer: NonDisposableHandle,
    pub variable_pointers: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkExternalMemoryProperties.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkExternalMemoryProperties {
    pub external_memory_features: NonDisposableHandle,
    pub export_from_imported_handle_types: NonDisposableHandle,
    pub compatible_handle_types: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceExternalImageFormatInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceExternalImageFormatInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub handle_type: vk::ExternalMemoryHandleTypeFlags,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkExternalImageFormatProperties.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkExternalImageFormatProperties {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub external_memory_properties: VkExternalMemoryProperties,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceExternalBufferInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceExternalBufferInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub usage: NonDisposableHandle,
    pub handle_type: vk::ExternalMemoryHandleTypeFlags,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkExternalBufferProperties.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkExternalBufferProperties {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub external_memory_properties: VkExternalMemoryProperties,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceIDProperties.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceIDProperties {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub device_uuid: [u8; vk::UUID_SIZE],
    pub driver_uuid: [u8; vk::UUID_SIZE],
    pub device_luid: [u8; vk::LUID_SIZE],
    pub device_node_mask: u32,
    pub device_luidvalid: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkExternalMemoryImageCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkExternalMemoryImageCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub handle_types: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkExternalMemoryBufferCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkExternalMemoryBufferCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub handle_types: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkExportMemoryAllocateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkExportMemoryAllocateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub handle_types: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImportMemoryWin32HandleInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImportMemoryWin32HandleInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub handle_type: vk::ExternalMemoryHandleTypeFlags,
    pub handle: vk::HANDLE,
    pub name: vk::LPCWSTR,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkExportMemoryWin32HandleInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkExportMemoryWin32HandleInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub p_attributes: *const usize,
    pub dw_access: vk::DWORD,
    pub name: vk::LPCWSTR,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImportMemoryZirconHandleInfoFUCHSIA.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImportMemoryZirconHandleInfoFUCHSIA {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub handle_type: vk::ExternalMemoryHandleTypeFlags,
    pub handle: vk::zx_handle_t,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMemoryZirconHandlePropertiesFUCHSIA.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMemoryZirconHandlePropertiesFUCHSIA {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub memory_type_bits: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMemoryGetZirconHandleInfoFUCHSIA.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMemoryGetZirconHandleInfoFUCHSIA {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub memory: NonDisposableHandle,
    pub handle_type: vk::ExternalMemoryHandleTypeFlags,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMemoryWin32HandlePropertiesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMemoryWin32HandlePropertiesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub memory_type_bits: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMemoryGetWin32HandleInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMemoryGetWin32HandleInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub memory: NonDisposableHandle,
    pub handle_type: vk::ExternalMemoryHandleTypeFlags,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImportMemoryFdInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImportMemoryFdInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub handle_type: vk::ExternalMemoryHandleTypeFlags,
    pub fd: std::os::raw::c_int,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMemoryFdPropertiesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMemoryFdPropertiesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub memory_type_bits: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMemoryGetFdInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMemoryGetFdInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub memory: NonDisposableHandle,
    pub handle_type: vk::ExternalMemoryHandleTypeFlags,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkWin32KeyedMutexAcquireReleaseInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkWin32KeyedMutexAcquireReleaseInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub acquire_count: u32,
    #[cdump(array(len = self.acquire_count))]
    pub p_acquire_syncs: *const NonDisposableHandle,
    #[cdump(array(len = self.acquire_count))]
    pub p_acquire_keys: *const u64,
    #[cdump(array(len = self.acquire_count))]
    pub p_acquire_timeouts: *const u32,
    pub release_count: u32,
    #[cdump(array(len = self.release_count))]
    pub p_release_syncs: *const NonDisposableHandle,
    #[cdump(array(len = self.release_count))]
    pub p_release_keys: *const u64,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceExternalSemaphoreInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceExternalSemaphoreInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub handle_type: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkExternalSemaphoreProperties.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkExternalSemaphoreProperties {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub export_from_imported_handle_types: NonDisposableHandle,
    pub compatible_handle_types: NonDisposableHandle,
    pub external_semaphore_features: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkExportSemaphoreCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkExportSemaphoreCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub handle_types: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImportSemaphoreWin32HandleInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImportSemaphoreWin32HandleInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub semaphore: NonDisposableHandle,
    pub flags: NonDisposableHandle,
    pub handle_type: NonDisposableHandle,
    pub handle: vk::HANDLE,
    pub name: vk::LPCWSTR,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkExportSemaphoreWin32HandleInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkExportSemaphoreWin32HandleInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub p_attributes: *const usize,
    pub dw_access: vk::DWORD,
    pub name: vk::LPCWSTR,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkD3D12FenceSubmitInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkD3D12FenceSubmitInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub wait_semaphore_values_count: u32,
    #[cdump(array(len = self.wait_semaphore_values_count))]
    pub p_wait_semaphore_values: *const u64,
    pub signal_semaphore_values_count: u32,
    #[cdump(array(len = self.signal_semaphore_values_count))]
    pub p_signal_semaphore_values: *const u64,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSemaphoreGetWin32HandleInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSemaphoreGetWin32HandleInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub semaphore: NonDisposableHandle,
    pub handle_type: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImportSemaphoreFdInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImportSemaphoreFdInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub semaphore: NonDisposableHandle,
    pub flags: NonDisposableHandle,
    pub handle_type: NonDisposableHandle,
    pub fd: std::os::raw::c_int,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSemaphoreGetFdInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSemaphoreGetFdInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub semaphore: NonDisposableHandle,
    pub handle_type: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImportSemaphoreZirconHandleInfoFUCHSIA.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImportSemaphoreZirconHandleInfoFUCHSIA {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub semaphore: NonDisposableHandle,
    pub flags: NonDisposableHandle,
    pub handle_type: NonDisposableHandle,
    pub zircon_handle: vk::zx_handle_t,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSemaphoreGetZirconHandleInfoFUCHSIA.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSemaphoreGetZirconHandleInfoFUCHSIA {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub semaphore: NonDisposableHandle,
    pub handle_type: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceExternalFenceInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceExternalFenceInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub handle_type: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkExternalFenceProperties.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkExternalFenceProperties {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub export_from_imported_handle_types: NonDisposableHandle,
    pub compatible_handle_types: NonDisposableHandle,
    pub external_fence_features: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkExportFenceCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkExportFenceCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub handle_types: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImportFenceWin32HandleInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImportFenceWin32HandleInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub fence: NonDisposableHandle,
    pub flags: NonDisposableHandle,
    pub handle_type: NonDisposableHandle,
    pub handle: vk::HANDLE,
    pub name: vk::LPCWSTR,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkExportFenceWin32HandleInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkExportFenceWin32HandleInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub p_attributes: *const usize,
    pub dw_access: vk::DWORD,
    pub name: vk::LPCWSTR,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkFenceGetWin32HandleInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkFenceGetWin32HandleInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub fence: NonDisposableHandle,
    pub handle_type: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImportFenceFdInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImportFenceFdInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub fence: NonDisposableHandle,
    pub flags: NonDisposableHandle,
    pub handle_type: NonDisposableHandle,
    pub fd: std::os::raw::c_int,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkFenceGetFdInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkFenceGetFdInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub fence: NonDisposableHandle,
    pub handle_type: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceMultiviewFeatures.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceMultiviewFeatures {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub multiview: NonDisposableHandle,
    pub multiview_geometry_shader: NonDisposableHandle,
    pub multiview_tessellation_shader: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceMultiviewProperties.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceMultiviewProperties {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub max_multiview_view_count: u32,
    pub max_multiview_instance_index: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkRenderPassMultiviewCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkRenderPassMultiviewCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub subpass_count: u32,
    #[cdump(array(len = self.subpass_count))]
    pub p_view_masks: *const u32,
    pub dependency_count: u32,
    #[cdump(array(len = self.dependency_count))]
    pub p_view_offsets: *const i32,
    pub correlation_mask_count: u32,
    #[cdump(array(len = self.correlation_mask_count))]
    pub p_correlation_masks: *const u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSurfaceCapabilities2EXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSurfaceCapabilities2EXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub min_image_count: u32,
    pub max_image_count: u32,
    pub current_extent: VkExtent2D,
    pub min_image_extent: VkExtent2D,
    pub max_image_extent: VkExtent2D,
    pub max_image_array_layers: u32,
    pub supported_transforms: NonDisposableHandle,
    pub current_transform: NonDisposableHandle,
    pub supported_composite_alpha: NonDisposableHandle,
    pub supported_usage_flags: NonDisposableHandle,
    pub supported_surface_counters: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDisplayPowerInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDisplayPowerInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub power_state: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDeviceEventInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDeviceEventInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub device_event: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDisplayEventInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDisplayEventInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub display_event: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSwapchainCounterCreateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSwapchainCounterCreateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub surface_counters: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceGroupProperties.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceGroupProperties {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub physical_device_count: u32,
    #[cdump(array(len = self.physical_device_count))]
    pub physical_devices: [NonDisposableHandle; vk::MAX_DEVICE_GROUP_SIZE],
    pub subset_allocation: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMemoryAllocateFlagsInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMemoryAllocateFlagsInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub device_mask: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBindBufferMemoryInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBindBufferMemoryInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub buffer: NonDisposableHandle,
    pub memory: NonDisposableHandle,
    pub memory_offset: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBindBufferMemoryDeviceGroupInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBindBufferMemoryDeviceGroupInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub device_index_count: u32,
    #[cdump(array(len = self.device_index_count))]
    pub p_device_indices: *const u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBindImageMemoryInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBindImageMemoryInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub image: NonDisposableHandle,
    pub memory: NonDisposableHandle,
    pub memory_offset: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBindImageMemoryDeviceGroupInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBindImageMemoryDeviceGroupInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub device_index_count: u32,
    #[cdump(array(len = self.device_index_count))]
    pub p_device_indices: *const u32,
    pub split_instance_bind_region_count: u32,
    #[cdump(array(len = self.split_instance_bind_region_count))]
    pub p_split_instance_bind_regions: *const VkRect2D,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDeviceGroupRenderPassBeginInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDeviceGroupRenderPassBeginInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub device_mask: u32,
    pub device_render_area_count: u32,
    #[cdump(array(len = self.device_render_area_count))]
    pub p_device_render_areas: *const VkRect2D,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDeviceGroupCommandBufferBeginInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDeviceGroupCommandBufferBeginInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub device_mask: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDeviceGroupSubmitInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDeviceGroupSubmitInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub wait_semaphore_count: u32,
    #[cdump(array(len = self.wait_semaphore_count))]
    pub p_wait_semaphore_device_indices: *const u32,
    pub command_buffer_count: u32,
    #[cdump(array(len = self.command_buffer_count))]
    pub p_command_buffer_device_masks: *const u32,
    pub signal_semaphore_count: u32,
    #[cdump(array(len = self.signal_semaphore_count))]
    pub p_signal_semaphore_device_indices: *const u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDeviceGroupBindSparseInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDeviceGroupBindSparseInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub resource_device_index: u32,
    pub memory_device_index: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDeviceGroupPresentCapabilitiesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDeviceGroupPresentCapabilitiesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub present_mask: [u32; vk::MAX_DEVICE_GROUP_SIZE],
    pub modes: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImageSwapchainCreateInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImageSwapchainCreateInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub swapchain: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBindImageMemorySwapchainInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBindImageMemorySwapchainInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub swapchain: NonDisposableHandle,
    pub image_index: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAcquireNextImageInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAcquireNextImageInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub swapchain: NonDisposableHandle,
    pub timeout: u64,
    pub semaphore: NonDisposableHandle,
    pub fence: NonDisposableHandle,
    pub device_mask: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDeviceGroupPresentInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDeviceGroupPresentInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub swapchain_count: u32,
    #[cdump(array(len = self.swapchain_count))]
    pub p_device_masks: *const u32,
    pub mode: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDeviceGroupDeviceCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDeviceGroupDeviceCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub physical_device_count: u32,
    #[cdump(array(len = self.physical_device_count))]
    pub p_physical_devices: *const NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDeviceGroupSwapchainCreateInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDeviceGroupSwapchainCreateInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub modes: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDescriptorUpdateTemplateEntry.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDescriptorUpdateTemplateEntry {
    pub dst_binding: u32,
    pub dst_array_element: u32,
    pub descriptor_count: u32,
    pub descriptor_type: NonDisposableHandle,
    pub offset: usize,
    pub stride: usize,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDescriptorUpdateTemplateCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDescriptorUpdateTemplateCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub descriptor_update_entry_count: u32,
    #[cdump(array(len = self.descriptor_update_entry_count))]
    pub p_descriptor_update_entries: *const VkDescriptorUpdateTemplateEntry,
    pub template_type: NonDisposableHandle,
    pub descriptor_set_layout: NonDisposableHandle,
    pub pipeline_bind_point: NonDisposableHandle,
    pub pipeline_layout: NonDisposableHandle,
    pub set: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkXYColorEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkXYColorEXT {
    pub x: f32,
    pub y: f32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDevicePresentIdFeaturesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDevicePresentIdFeaturesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub present_id: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPresentIdKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPresentIdKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub swapchain_count: u32,
    #[cdump(array(len = self.swapchain_count))]
    pub p_present_ids: *const u64,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDevicePresentWaitFeaturesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDevicePresentWaitFeaturesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub present_wait: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkHdrMetadataEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkHdrMetadataEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub display_primary_red: VkXYColorEXT,
    pub display_primary_green: VkXYColorEXT,
    pub display_primary_blue: VkXYColorEXT,
    pub white_point: VkXYColorEXT,
    pub max_luminance: f32,
    pub min_luminance: f32,
    pub max_content_light_level: f32,
    pub max_frame_average_light_level: f32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDisplayNativeHdrSurfaceCapabilitiesAMD.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDisplayNativeHdrSurfaceCapabilitiesAMD {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub local_dimming_support: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSwapchainDisplayNativeHdrCreateInfoAMD.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSwapchainDisplayNativeHdrCreateInfoAMD {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub local_dimming_enable: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkRefreshCycleDurationGOOGLE.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkRefreshCycleDurationGOOGLE {
    pub refresh_duration: u64,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPastPresentationTimingGOOGLE.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPastPresentationTimingGOOGLE {
    pub present_id: u32,
    pub desired_present_time: u64,
    pub actual_present_time: u64,
    pub earliest_present_time: u64,
    pub present_margin: u64,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPresentTimesInfoGOOGLE.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPresentTimesInfoGOOGLE {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub swapchain_count: u32,
    #[cdump(array(len = self.swapchain_count))]
    pub p_times: *const VkPresentTimeGOOGLE,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPresentTimeGOOGLE.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPresentTimeGOOGLE {
    pub present_id: u32,
    pub desired_present_time: u64,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkIOSSurfaceCreateInfoMVK.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkIOSSurfaceCreateInfoMVK {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    #[cdump(dynamic(serializer = unimplemented_serializer, deserializer = unimplemented_deserializer))]
    pub p_view: *const c_void,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMacOSSurfaceCreateInfoMVK.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMacOSSurfaceCreateInfoMVK {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    #[cdump(dynamic(serializer = unimplemented_serializer, deserializer = unimplemented_deserializer))]
    pub p_view: *const c_void,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMetalSurfaceCreateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMetalSurfaceCreateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    #[cdump(dynamic(serializer = unimplemented_serializer, deserializer = unimplemented_deserializer))]
    pub p_layer: *const c_void,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkViewportWScalingNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkViewportWScalingNV {
    pub xcoeff: f32,
    pub ycoeff: f32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineViewportWScalingStateCreateInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineViewportWScalingStateCreateInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub viewport_wscaling_enable: NonDisposableHandle,
    pub viewport_count: u32,
    #[cdump(array(len = self.viewport_count))]
    pub p_viewport_wscalings: *const VkViewportWScalingNV,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkViewportSwizzleNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkViewportSwizzleNV {
    pub x: NonDisposableHandle,
    pub y: NonDisposableHandle,
    pub z: NonDisposableHandle,
    pub w: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineViewportSwizzleStateCreateInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineViewportSwizzleStateCreateInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub viewport_count: u32,
    #[cdump(array(len = self.viewport_count))]
    pub p_viewport_swizzles: *const VkViewportSwizzleNV,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceDiscardRectanglePropertiesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceDiscardRectanglePropertiesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub max_discard_rectangles: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineDiscardRectangleStateCreateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineDiscardRectangleStateCreateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub discard_rectangle_mode: NonDisposableHandle,
    pub discard_rectangle_count: u32,
    #[cdump(array(len = self.discard_rectangle_count))]
    pub p_discard_rectangles: *const VkRect2D,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub per_view_position_all_components: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkInputAttachmentAspectReference.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkInputAttachmentAspectReference {
    pub subpass: u32,
    pub input_attachment_index: u32,
    pub aspect_mask: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkRenderPassInputAttachmentAspectCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkRenderPassInputAttachmentAspectCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub aspect_reference_count: u32,
    #[cdump(array(len = self.aspect_reference_count))]
    pub p_aspect_references: *const VkInputAttachmentAspectReference,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceSurfaceInfo2KHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceSurfaceInfo2KHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub surface: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSurfaceCapabilities2KHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSurfaceCapabilities2KHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub surface_capabilities: VkSurfaceCapabilitiesKHR,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSurfaceFormat2KHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSurfaceFormat2KHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub surface_format: VkSurfaceFormatKHR,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDisplayProperties2KHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDisplayProperties2KHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub display_properties: VkDisplayPropertiesKHR,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDisplayPlaneProperties2KHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDisplayPlaneProperties2KHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub display_plane_properties: VkDisplayPlanePropertiesKHR,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDisplayModeProperties2KHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDisplayModeProperties2KHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub display_mode_properties: VkDisplayModePropertiesKHR,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDisplayPlaneInfo2KHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDisplayPlaneInfo2KHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub mode: NonDisposableHandle,
    pub plane_index: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDisplayPlaneCapabilities2KHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDisplayPlaneCapabilities2KHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub capabilities: VkDisplayPlaneCapabilitiesKHR,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSharedPresentSurfaceCapabilitiesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSharedPresentSurfaceCapabilitiesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shared_present_supported_usage_flags: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDevice16BitStorageFeatures.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDevice16BitStorageFeatures {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub storage_buffer16_bit_access: NonDisposableHandle,
    pub uniform_and_storage_buffer16_bit_access: NonDisposableHandle,
    pub storage_push_constant16: NonDisposableHandle,
    pub storage_input_output16: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceSubgroupProperties.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceSubgroupProperties {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub subgroup_size: u32,
    pub supported_stages: NonDisposableHandle,
    pub supported_operations: NonDisposableHandle,
    pub quad_operations_in_all_stages: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shader_subgroup_extended_types: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBufferMemoryRequirementsInfo2.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBufferMemoryRequirementsInfo2 {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub buffer: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDeviceBufferMemoryRequirements.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDeviceBufferMemoryRequirements {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub p_create_info: *const VkBufferCreateInfo,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImageMemoryRequirementsInfo2.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImageMemoryRequirementsInfo2 {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub image: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImageSparseMemoryRequirementsInfo2.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImageSparseMemoryRequirementsInfo2 {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub image: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDeviceImageMemoryRequirements.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDeviceImageMemoryRequirements {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub p_create_info: *const VkImageCreateInfo,
    pub plane_aspect: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMemoryRequirements2.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMemoryRequirements2 {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub memory_requirements: VkMemoryRequirements,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSparseImageMemoryRequirements2.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSparseImageMemoryRequirements2 {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub memory_requirements: VkSparseImageMemoryRequirements,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDevicePointClippingProperties.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDevicePointClippingProperties {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub point_clipping_behavior: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMemoryDedicatedRequirements.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMemoryDedicatedRequirements {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub prefers_dedicated_allocation: NonDisposableHandle,
    pub requires_dedicated_allocation: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMemoryDedicatedAllocateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMemoryDedicatedAllocateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub image: NonDisposableHandle,
    pub buffer: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImageViewUsageCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImageViewUsageCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub usage: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImageViewSlicedCreateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImageViewSlicedCreateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub slice_offset: u32,
    pub slice_count: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineTessellationDomainOriginStateCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineTessellationDomainOriginStateCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub domain_origin: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSamplerYcbcrConversionInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSamplerYcbcrConversionInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub conversion: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSamplerYcbcrConversionCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSamplerYcbcrConversionCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub format: NonDisposableHandle,
    pub ycbcr_model: NonDisposableHandle,
    pub ycbcr_range: NonDisposableHandle,
    pub components: VkComponentMapping,
    pub x_chroma_offset: NonDisposableHandle,
    pub y_chroma_offset: NonDisposableHandle,
    pub chroma_filter: NonDisposableHandle,
    pub force_explicit_reconstruction: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBindImagePlaneMemoryInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBindImagePlaneMemoryInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub plane_aspect: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImagePlaneMemoryRequirementsInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImagePlaneMemoryRequirementsInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub plane_aspect: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceSamplerYcbcrConversionFeatures.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceSamplerYcbcrConversionFeatures {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub sampler_ycbcr_conversion: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSamplerYcbcrConversionImageFormatProperties.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSamplerYcbcrConversionImageFormatProperties {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub combined_image_sampler_descriptor_count: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkTextureLODGatherFormatPropertiesAMD.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkTextureLODGatherFormatPropertiesAMD {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub supports_texture_gather_lodbias_amd: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkConditionalRenderingBeginInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkConditionalRenderingBeginInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub buffer: NonDisposableHandle,
    pub offset: NonDisposableHandle,
    pub flags: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkProtectedSubmitInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkProtectedSubmitInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub protected_submit: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceProtectedMemoryFeatures.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceProtectedMemoryFeatures {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub protected_memory: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceProtectedMemoryProperties.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceProtectedMemoryProperties {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub protected_no_fault: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDeviceQueueInfo2.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDeviceQueueInfo2 {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub queue_family_index: u32,
    pub queue_index: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineCoverageToColorStateCreateInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineCoverageToColorStateCreateInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub coverage_to_color_enable: NonDisposableHandle,
    pub coverage_to_color_location: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceSamplerFilterMinmaxProperties.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceSamplerFilterMinmaxProperties {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub filter_minmax_single_component_formats: NonDisposableHandle,
    pub filter_minmax_image_component_mapping: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSampleLocationEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSampleLocationEXT {
    pub x: f32,
    pub y: f32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSampleLocationsInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSampleLocationsInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub sample_locations_per_pixel: vk::SampleCountFlags,
    pub sample_location_grid_size: VkExtent2D,
    pub sample_locations_count: u32,
    #[cdump(array(len = self.sample_locations_count))]
    pub p_sample_locations: *const VkSampleLocationEXT,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAttachmentSampleLocationsEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAttachmentSampleLocationsEXT {
    pub attachment_index: u32,
    pub sample_locations_info: VkSampleLocationsInfoEXT,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSubpassSampleLocationsEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSubpassSampleLocationsEXT {
    pub subpass_index: u32,
    pub sample_locations_info: VkSampleLocationsInfoEXT,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkRenderPassSampleLocationsBeginInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkRenderPassSampleLocationsBeginInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub attachment_initial_sample_locations_count: u32,
    #[cdump(array(len = self.attachment_initial_sample_locations_count))]
    pub p_attachment_initial_sample_locations: *const VkAttachmentSampleLocationsEXT,
    pub post_subpass_sample_locations_count: u32,
    #[cdump(array(len = self.post_subpass_sample_locations_count))]
    pub p_post_subpass_sample_locations: *const VkSubpassSampleLocationsEXT,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineSampleLocationsStateCreateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineSampleLocationsStateCreateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub sample_locations_enable: NonDisposableHandle,
    pub sample_locations_info: VkSampleLocationsInfoEXT,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceSampleLocationsPropertiesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceSampleLocationsPropertiesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub sample_location_sample_counts: NonDisposableHandle,
    pub max_sample_location_grid_size: VkExtent2D,
    pub sample_location_coordinate_range: [f32; 2],
    pub sample_location_sub_pixel_bits: u32,
    pub variable_sample_locations: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMultisamplePropertiesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMultisamplePropertiesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub max_sample_location_grid_size: VkExtent2D,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSamplerReductionModeCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSamplerReductionModeCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub reduction_mode: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub advanced_blend_coherent_operations: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceMultiDrawFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceMultiDrawFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub multi_draw: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub advanced_blend_max_color_attachments: u32,
    pub advanced_blend_independent_blend: NonDisposableHandle,
    pub advanced_blend_non_premultiplied_src_color: NonDisposableHandle,
    pub advanced_blend_non_premultiplied_dst_color: NonDisposableHandle,
    pub advanced_blend_correlated_overlap: NonDisposableHandle,
    pub advanced_blend_all_operations: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineColorBlendAdvancedStateCreateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineColorBlendAdvancedStateCreateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub src_premultiplied: NonDisposableHandle,
    pub dst_premultiplied: NonDisposableHandle,
    pub blend_overlap: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceInlineUniformBlockFeatures.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceInlineUniformBlockFeatures {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub inline_uniform_block: NonDisposableHandle,
    pub descriptor_binding_inline_uniform_block_update_after_bind: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceInlineUniformBlockProperties.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceInlineUniformBlockProperties {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub max_inline_uniform_block_size: u32,
    pub max_per_stage_descriptor_inline_uniform_blocks: u32,
    pub max_per_stage_descriptor_update_after_bind_inline_uniform_blocks: u32,
    pub max_descriptor_set_inline_uniform_blocks: u32,
    pub max_descriptor_set_update_after_bind_inline_uniform_blocks: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkWriteDescriptorSetInlineUniformBlock.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkWriteDescriptorSetInlineUniformBlock {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub data_size: u32,
    #[cdump(array(len = self.data_size))]
    pub p_data: *const u8,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDescriptorPoolInlineUniformBlockCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDescriptorPoolInlineUniformBlockCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub max_inline_uniform_block_bindings: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineCoverageModulationStateCreateInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineCoverageModulationStateCreateInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub coverage_modulation_mode: NonDisposableHandle,
    pub coverage_modulation_table_enable: NonDisposableHandle,
    pub coverage_modulation_table_count: u32,
    #[cdump(array(len = self.coverage_modulation_table_count))]
    pub p_coverage_modulation_table: *const f32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImageFormatListCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImageFormatListCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub view_format_count: u32,
    #[cdump(array(len = self.view_format_count))]
    pub p_view_formats: *const NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkValidationCacheCreateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkValidationCacheCreateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub initial_data_size: usize,
    #[cdump(array(len = self.initial_data_size))]
    pub p_initial_data: *const u8,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkShaderModuleValidationCacheCreateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkShaderModuleValidationCacheCreateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub validation_cache: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceMaintenance3Properties.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceMaintenance3Properties {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub max_per_set_descriptors: u32,
    pub max_memory_allocation_size: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceMaintenance4Features.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceMaintenance4Features {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub maintenance4: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceMaintenance4Properties.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceMaintenance4Properties {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub max_buffer_size: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceMaintenance5FeaturesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceMaintenance5FeaturesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub maintenance5: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceMaintenance5PropertiesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceMaintenance5PropertiesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub early_fragment_multisample_coverage_after_sample_counting: NonDisposableHandle,
    pub early_fragment_sample_mask_test_before_sample_counting: NonDisposableHandle,
    pub depth_stencil_swizzle_one_support: NonDisposableHandle,
    pub polygon_mode_point_size: NonDisposableHandle,
    pub non_strict_single_pixel_wide_lines_use_parallelogram: NonDisposableHandle,
    pub non_strict_wide_lines_use_parallelogram: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceMaintenance6FeaturesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceMaintenance6FeaturesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub maintenance6: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceMaintenance6PropertiesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceMaintenance6PropertiesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub block_texel_view_compatible_multiple_layers: NonDisposableHandle,
    pub max_combined_image_sampler_descriptor_count: u32,
    pub fragment_shading_rate_clamp_combiner_inputs: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkRenderingAreaInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkRenderingAreaInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub view_mask: u32,
    pub color_attachment_count: u32,
    #[cdump(array(len = self.color_attachment_count))]
    pub p_color_attachment_formats: *const NonDisposableHandle,
    pub depth_attachment_format: NonDisposableHandle,
    pub stencil_attachment_format: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDescriptorSetLayoutSupport.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDescriptorSetLayoutSupport {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub supported: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderDrawParametersFeatures.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceShaderDrawParametersFeatures {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shader_draw_parameters: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderFloat16Int8Features.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceShaderFloat16Int8Features {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shader_float16: NonDisposableHandle,
    pub shader_int8: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceFloatControlsProperties.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceFloatControlsProperties {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub denorm_behavior_independence: NonDisposableHandle,
    pub rounding_mode_independence: NonDisposableHandle,
    pub shader_signed_zero_inf_nan_preserve_float16: NonDisposableHandle,
    pub shader_signed_zero_inf_nan_preserve_float32: NonDisposableHandle,
    pub shader_signed_zero_inf_nan_preserve_float64: NonDisposableHandle,
    pub shader_denorm_preserve_float16: NonDisposableHandle,
    pub shader_denorm_preserve_float32: NonDisposableHandle,
    pub shader_denorm_preserve_float64: NonDisposableHandle,
    pub shader_denorm_flush_to_zero_float16: NonDisposableHandle,
    pub shader_denorm_flush_to_zero_float32: NonDisposableHandle,
    pub shader_denorm_flush_to_zero_float64: NonDisposableHandle,
    pub shader_rounding_mode_rtefloat16: NonDisposableHandle,
    pub shader_rounding_mode_rtefloat32: NonDisposableHandle,
    pub shader_rounding_mode_rtefloat64: NonDisposableHandle,
    pub shader_rounding_mode_rtzfloat16: NonDisposableHandle,
    pub shader_rounding_mode_rtzfloat32: NonDisposableHandle,
    pub shader_rounding_mode_rtzfloat64: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceHostQueryResetFeatures.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceHostQueryResetFeatures {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub host_query_reset: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkNativeBufferUsage2ANDROID.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkNativeBufferUsage2ANDROID {
    pub consumer: u64,
    pub producer: u64,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkNativeBufferANDROID.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkNativeBufferANDROID {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    #[cdump(dynamic(serializer = unimplemented_serializer, deserializer = unimplemented_deserializer))]
    pub handle: *const c_void,
    pub stride: std::os::raw::c_int,
    pub format: std::os::raw::c_int,
    pub usage: std::os::raw::c_int,
    pub usage2: VkNativeBufferUsage2ANDROID,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSwapchainImageCreateInfoANDROID.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSwapchainImageCreateInfoANDROID {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub usage: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDevicePresentationPropertiesANDROID.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDevicePresentationPropertiesANDROID {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub shared_image: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkShaderResourceUsageAMD.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkShaderResourceUsageAMD {
    pub num_used_vgprs: u32,
    pub num_used_sgprs: u32,
    pub lds_size_per_local_work_group: u32,
    pub lds_usage_size_in_bytes: usize,
    pub scratch_mem_usage_in_bytes: usize,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkShaderStatisticsInfoAMD.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkShaderStatisticsInfoAMD {
    pub shader_stage_mask: NonDisposableHandle,
    pub resource_usage: VkShaderResourceUsageAMD,
    pub num_physical_vgprs: u32,
    pub num_physical_sgprs: u32,
    pub num_available_vgprs: u32,
    pub num_available_sgprs: u32,
    pub compute_work_group_size: [u32; 3],
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDeviceQueueGlobalPriorityCreateInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDeviceQueueGlobalPriorityCreateInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub global_priority: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub global_priority_query: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkQueueFamilyGlobalPriorityPropertiesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkQueueFamilyGlobalPriorityPropertiesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub priority_count: u32,
    #[cdump(array(len = self.priority_count))]
    pub priorities: [NonDisposableHandle; vk::MAX_GLOBAL_PRIORITY_SIZE_KHR],
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDebugUtilsObjectNameInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDebugUtilsObjectNameInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub object_type: NonDisposableHandle,
    pub object_handle: u64,
    pub p_object_name: *const c_char,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDebugUtilsObjectTagInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDebugUtilsObjectTagInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub object_type: NonDisposableHandle,
    pub object_handle: u64,
    pub tag_name: u64,
    pub tag_size: usize,
    #[cdump(array(len = self.tag_size))]
    pub p_tag: *const u8,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDebugUtilsLabelEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDebugUtilsLabelEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub p_label_name: *const c_char,
    pub color: [f32; 4],
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDebugUtilsMessengerCreateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDebugUtilsMessengerCreateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub message_severity: NonDisposableHandle,
    pub message_type: NonDisposableHandle,
    pub pfn_user_callback: vk::PFN_vkDebugUtilsMessengerCallbackEXT,
    #[cdump(dynamic(serializer = unimplemented_serializer, deserializer = unimplemented_deserializer_mut))]
    pub p_user_data: *mut c_void,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDebugUtilsMessengerCallbackDataEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDebugUtilsMessengerCallbackDataEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub p_message_id_name: *const c_char,
    pub message_id_number: i32,
    pub p_message: *const c_char,
    pub queue_label_count: u32,
    #[cdump(array(len = self.queue_label_count))]
    pub p_queue_labels: *const VkDebugUtilsLabelEXT,
    pub cmd_buf_label_count: u32,
    #[cdump(array(len = self.cmd_buf_label_count))]
    pub p_cmd_buf_labels: *const VkDebugUtilsLabelEXT,
    pub object_count: u32,
    #[cdump(array(len = self.object_count))]
    pub p_objects: *const VkDebugUtilsObjectNameInfoEXT,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceDeviceMemoryReportFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceDeviceMemoryReportFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub device_memory_report: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDeviceDeviceMemoryReportCreateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDeviceDeviceMemoryReportCreateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub pfn_user_callback: vk::PFN_vkDeviceMemoryReportCallbackEXT,
    #[cdump(dynamic(serializer = unimplemented_serializer, deserializer = unimplemented_deserializer_mut))]
    pub p_user_data: *mut c_void,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDeviceMemoryReportCallbackDataEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDeviceMemoryReportCallbackDataEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub flags: NonDisposableHandle,
    pub type_: NonDisposableHandle,
    pub memory_object_id: u64,
    pub size: NonDisposableHandle,
    pub object_type: NonDisposableHandle,
    pub object_handle: u64,
    pub heap_index: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImportMemoryHostPointerInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImportMemoryHostPointerInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub handle_type: vk::ExternalMemoryHandleTypeFlags,
    #[cdump(dynamic(serializer = unimplemented_serializer, deserializer = unimplemented_deserializer_mut))]
    pub p_host_pointer: *mut c_void,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMemoryHostPointerPropertiesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMemoryHostPointerPropertiesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub memory_type_bits: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceExternalMemoryHostPropertiesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceExternalMemoryHostPropertiesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub min_imported_host_pointer_alignment: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceConservativeRasterizationPropertiesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceConservativeRasterizationPropertiesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub primitive_overestimation_size: f32,
    pub max_extra_primitive_overestimation_size: f32,
    pub extra_primitive_overestimation_size_granularity: f32,
    pub primitive_underestimation: NonDisposableHandle,
    pub conservative_point_and_line_rasterization: NonDisposableHandle,
    pub degenerate_triangles_rasterized: NonDisposableHandle,
    pub degenerate_lines_rasterized: NonDisposableHandle,
    pub fully_covered_fragment_shader_input_variable: NonDisposableHandle,
    pub conservative_rasterization_post_depth_coverage: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkCalibratedTimestampInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkCalibratedTimestampInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub time_domain: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderCorePropertiesAMD.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceShaderCorePropertiesAMD {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shader_engine_count: u32,
    pub shader_arrays_per_engine_count: u32,
    pub compute_units_per_shader_array: u32,
    pub simd_per_compute_unit: u32,
    pub wavefronts_per_simd: u32,
    pub wavefront_size: u32,
    pub sgprs_per_simd: u32,
    pub min_sgpr_allocation: u32,
    pub max_sgpr_allocation: u32,
    pub sgpr_allocation_granularity: u32,
    pub vgprs_per_simd: u32,
    pub min_vgpr_allocation: u32,
    pub max_vgpr_allocation: u32,
    pub vgpr_allocation_granularity: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderCoreProperties2AMD.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceShaderCoreProperties2AMD {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shader_core_features: NonDisposableHandle,
    pub active_compute_unit_count: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineRasterizationConservativeStateCreateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineRasterizationConservativeStateCreateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub conservative_rasterization_mode: NonDisposableHandle,
    pub extra_primitive_overestimation_size: f32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceDescriptorIndexingFeatures.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceDescriptorIndexingFeatures {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shader_input_attachment_array_dynamic_indexing: NonDisposableHandle,
    pub shader_uniform_texel_buffer_array_dynamic_indexing: NonDisposableHandle,
    pub shader_storage_texel_buffer_array_dynamic_indexing: NonDisposableHandle,
    pub shader_uniform_buffer_array_non_uniform_indexing: NonDisposableHandle,
    pub shader_sampled_image_array_non_uniform_indexing: NonDisposableHandle,
    pub shader_storage_buffer_array_non_uniform_indexing: NonDisposableHandle,
    pub shader_storage_image_array_non_uniform_indexing: NonDisposableHandle,
    pub shader_input_attachment_array_non_uniform_indexing: NonDisposableHandle,
    pub shader_uniform_texel_buffer_array_non_uniform_indexing: NonDisposableHandle,
    pub shader_storage_texel_buffer_array_non_uniform_indexing: NonDisposableHandle,
    pub descriptor_binding_uniform_buffer_update_after_bind: NonDisposableHandle,
    pub descriptor_binding_sampled_image_update_after_bind: NonDisposableHandle,
    pub descriptor_binding_storage_image_update_after_bind: NonDisposableHandle,
    pub descriptor_binding_storage_buffer_update_after_bind: NonDisposableHandle,
    pub descriptor_binding_uniform_texel_buffer_update_after_bind: NonDisposableHandle,
    pub descriptor_binding_storage_texel_buffer_update_after_bind: NonDisposableHandle,
    pub descriptor_binding_update_unused_while_pending: NonDisposableHandle,
    pub descriptor_binding_partially_bound: NonDisposableHandle,
    pub descriptor_binding_variable_descriptor_count: NonDisposableHandle,
    pub runtime_descriptor_array: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceDescriptorIndexingProperties.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceDescriptorIndexingProperties {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub max_update_after_bind_descriptors_in_all_pools: u32,
    pub shader_uniform_buffer_array_non_uniform_indexing_native: NonDisposableHandle,
    pub shader_sampled_image_array_non_uniform_indexing_native: NonDisposableHandle,
    pub shader_storage_buffer_array_non_uniform_indexing_native: NonDisposableHandle,
    pub shader_storage_image_array_non_uniform_indexing_native: NonDisposableHandle,
    pub shader_input_attachment_array_non_uniform_indexing_native: NonDisposableHandle,
    pub robust_buffer_access_update_after_bind: NonDisposableHandle,
    pub quad_divergent_implicit_lod: NonDisposableHandle,
    pub max_per_stage_descriptor_update_after_bind_samplers: u32,
    pub max_per_stage_descriptor_update_after_bind_uniform_buffers: u32,
    pub max_per_stage_descriptor_update_after_bind_storage_buffers: u32,
    pub max_per_stage_descriptor_update_after_bind_sampled_images: u32,
    pub max_per_stage_descriptor_update_after_bind_storage_images: u32,
    pub max_per_stage_descriptor_update_after_bind_input_attachments: u32,
    pub max_per_stage_update_after_bind_resources: u32,
    pub max_descriptor_set_update_after_bind_samplers: u32,
    pub max_descriptor_set_update_after_bind_uniform_buffers: u32,
    pub max_descriptor_set_update_after_bind_uniform_buffers_dynamic: u32,
    pub max_descriptor_set_update_after_bind_storage_buffers: u32,
    pub max_descriptor_set_update_after_bind_storage_buffers_dynamic: u32,
    pub max_descriptor_set_update_after_bind_sampled_images: u32,
    pub max_descriptor_set_update_after_bind_storage_images: u32,
    pub max_descriptor_set_update_after_bind_input_attachments: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDescriptorSetLayoutBindingFlagsCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDescriptorSetLayoutBindingFlagsCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub binding_count: u32,
    #[cdump(array(len = self.binding_count))]
    pub p_binding_flags: *const NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDescriptorSetVariableDescriptorCountAllocateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDescriptorSetVariableDescriptorCountAllocateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub descriptor_set_count: u32,
    #[cdump(array(len = self.descriptor_set_count))]
    pub p_descriptor_counts: *const u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDescriptorSetVariableDescriptorCountLayoutSupport.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDescriptorSetVariableDescriptorCountLayoutSupport {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub max_variable_descriptor_count: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAttachmentDescription2.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAttachmentDescription2 {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub format: NonDisposableHandle,
    pub samples: vk::SampleCountFlags,
    pub load_op: NonDisposableHandle,
    pub store_op: NonDisposableHandle,
    pub stencil_load_op: NonDisposableHandle,
    pub stencil_store_op: NonDisposableHandle,
    pub initial_layout: NonDisposableHandle,
    pub final_layout: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAttachmentReference2.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAttachmentReference2 {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub attachment: u32,
    pub layout: NonDisposableHandle,
    pub aspect_mask: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSubpassDescription2.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSubpassDescription2 {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub pipeline_bind_point: NonDisposableHandle,
    pub view_mask: u32,
    pub input_attachment_count: u32,
    #[cdump(array(len = self.input_attachment_count))]
    pub p_input_attachments: *const VkAttachmentReference2,
    pub color_attachment_count: u32,
    #[cdump(array(len = self.color_attachment_count))]
    pub p_color_attachments: *const VkAttachmentReference2,
    #[cdump(array(len = self.color_attachment_count))]
    pub p_resolve_attachments: *const VkAttachmentReference2,
    pub p_depth_stencil_attachment: *const VkAttachmentReference2,
    pub preserve_attachment_count: u32,
    #[cdump(array(len = self.preserve_attachment_count))]
    pub p_preserve_attachments: *const u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSubpassDependency2.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSubpassDependency2 {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub src_subpass: u32,
    pub dst_subpass: u32,
    pub src_stage_mask: NonDisposableHandle,
    pub dst_stage_mask: NonDisposableHandle,
    pub src_access_mask: NonDisposableHandle,
    pub dst_access_mask: NonDisposableHandle,
    pub dependency_flags: NonDisposableHandle,
    pub view_offset: i32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkRenderPassCreateInfo2.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkRenderPassCreateInfo2 {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub attachment_count: u32,
    #[cdump(array(len = self.attachment_count))]
    pub p_attachments: *const VkAttachmentDescription2,
    pub subpass_count: u32,
    #[cdump(array(len = self.subpass_count))]
    pub p_subpasses: *const VkSubpassDescription2,
    pub dependency_count: u32,
    #[cdump(array(len = self.dependency_count))]
    pub p_dependencies: *const VkSubpassDependency2,
    pub correlated_view_mask_count: u32,
    #[cdump(array(len = self.correlated_view_mask_count))]
    pub p_correlated_view_masks: *const u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSubpassBeginInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSubpassBeginInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub contents: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSubpassEndInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSubpassEndInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceTimelineSemaphoreFeatures.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceTimelineSemaphoreFeatures {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub timeline_semaphore: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceTimelineSemaphoreProperties.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceTimelineSemaphoreProperties {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub max_timeline_semaphore_value_difference: u64,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSemaphoreTypeCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSemaphoreTypeCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub semaphore_type: NonDisposableHandle,
    pub initial_value: u64,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkTimelineSemaphoreSubmitInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkTimelineSemaphoreSubmitInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub wait_semaphore_value_count: u32,
    #[cdump(array(len = self.wait_semaphore_value_count))]
    pub p_wait_semaphore_values: *const u64,
    pub signal_semaphore_value_count: u32,
    #[cdump(array(len = self.signal_semaphore_value_count))]
    pub p_signal_semaphore_values: *const u64,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSemaphoreWaitInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSemaphoreWaitInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub semaphore_count: u32,
    #[cdump(array(len = self.semaphore_count))]
    pub p_semaphores: *const NonDisposableHandle,
    #[cdump(array(len = self.semaphore_count))]
    pub p_values: *const u64,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSemaphoreSignalInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSemaphoreSignalInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub semaphore: NonDisposableHandle,
    pub value: u64,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVertexInputBindingDivisorDescriptionKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVertexInputBindingDivisorDescriptionKHR {
    pub binding: u32,
    pub divisor: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineVertexInputDivisorStateCreateInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineVertexInputDivisorStateCreateInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub vertex_binding_divisor_count: u32,
    #[cdump(array(len = self.vertex_binding_divisor_count))]
    pub p_vertex_binding_divisors: *const VkVertexInputBindingDivisorDescriptionKHR,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub max_vertex_attrib_divisor: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceVertexAttributeDivisorPropertiesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceVertexAttributeDivisorPropertiesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub max_vertex_attrib_divisor: u32,
    pub supports_non_zero_first_instance: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDevicePCIBusInfoPropertiesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDevicePCIBusInfoPropertiesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub pci_domain: u32,
    pub pci_bus: u32,
    pub pci_device: u32,
    pub pci_function: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImportAndroidHardwareBufferInfoANDROID.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImportAndroidHardwareBufferInfoANDROID {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub buffer: *mut usize,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAndroidHardwareBufferUsageANDROID.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAndroidHardwareBufferUsageANDROID {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub android_hardware_buffer_usage: u64,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAndroidHardwareBufferPropertiesANDROID.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAndroidHardwareBufferPropertiesANDROID {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub allocation_size: NonDisposableHandle,
    pub memory_type_bits: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMemoryGetAndroidHardwareBufferInfoANDROID.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMemoryGetAndroidHardwareBufferInfoANDROID {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub memory: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAndroidHardwareBufferFormatPropertiesANDROID.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAndroidHardwareBufferFormatPropertiesANDROID {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub format: NonDisposableHandle,
    pub external_format: u64,
    pub format_features: NonDisposableHandle,
    pub sampler_ycbcr_conversion_components: VkComponentMapping,
    pub suggested_ycbcr_model: NonDisposableHandle,
    pub suggested_ycbcr_range: NonDisposableHandle,
    pub suggested_xchroma_offset: NonDisposableHandle,
    pub suggested_ychroma_offset: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkCommandBufferInheritanceConditionalRenderingInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkCommandBufferInheritanceConditionalRenderingInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub conditional_rendering_enable: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkExternalFormatANDROID.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkExternalFormatANDROID {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub external_format: u64,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDevice8BitStorageFeatures.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDevice8BitStorageFeatures {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub storage_buffer8_bit_access: NonDisposableHandle,
    pub uniform_and_storage_buffer8_bit_access: NonDisposableHandle,
    pub storage_push_constant8: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceConditionalRenderingFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceConditionalRenderingFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub conditional_rendering: NonDisposableHandle,
    pub inherited_conditional_rendering: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceVulkanMemoryModelFeatures.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceVulkanMemoryModelFeatures {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub vulkan_memory_model: NonDisposableHandle,
    pub vulkan_memory_model_device_scope: NonDisposableHandle,
    pub vulkan_memory_model_availability_visibility_chains: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderAtomicInt64Features.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceShaderAtomicInt64Features {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shader_buffer_int64_atomics: NonDisposableHandle,
    pub shader_shared_int64_atomics: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderAtomicFloatFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceShaderAtomicFloatFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shader_buffer_float32_atomics: NonDisposableHandle,
    pub shader_buffer_float32_atomic_add: NonDisposableHandle,
    pub shader_buffer_float64_atomics: NonDisposableHandle,
    pub shader_buffer_float64_atomic_add: NonDisposableHandle,
    pub shader_shared_float32_atomics: NonDisposableHandle,
    pub shader_shared_float32_atomic_add: NonDisposableHandle,
    pub shader_shared_float64_atomics: NonDisposableHandle,
    pub shader_shared_float64_atomic_add: NonDisposableHandle,
    pub shader_image_float32_atomics: NonDisposableHandle,
    pub shader_image_float32_atomic_add: NonDisposableHandle,
    pub sparse_image_float32_atomics: NonDisposableHandle,
    pub sparse_image_float32_atomic_add: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shader_buffer_float16_atomics: NonDisposableHandle,
    pub shader_buffer_float16_atomic_add: NonDisposableHandle,
    pub shader_buffer_float16_atomic_min_max: NonDisposableHandle,
    pub shader_buffer_float32_atomic_min_max: NonDisposableHandle,
    pub shader_buffer_float64_atomic_min_max: NonDisposableHandle,
    pub shader_shared_float16_atomics: NonDisposableHandle,
    pub shader_shared_float16_atomic_add: NonDisposableHandle,
    pub shader_shared_float16_atomic_min_max: NonDisposableHandle,
    pub shader_shared_float32_atomic_min_max: NonDisposableHandle,
    pub shader_shared_float64_atomic_min_max: NonDisposableHandle,
    pub shader_image_float32_atomic_min_max: NonDisposableHandle,
    pub sparse_image_float32_atomic_min_max: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceVertexAttributeDivisorFeaturesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceVertexAttributeDivisorFeaturesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub vertex_attribute_instance_rate_divisor: NonDisposableHandle,
    pub vertex_attribute_instance_rate_zero_divisor: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkQueueFamilyCheckpointPropertiesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkQueueFamilyCheckpointPropertiesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub checkpoint_execution_stage_mask: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkCheckpointDataNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkCheckpointDataNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub stage: vk::PipelineStageFlags,
    #[cdump(dynamic(serializer = unimplemented_serializer, deserializer = unimplemented_deserializer_mut))]
    pub p_checkpoint_marker: *mut c_void,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceDepthStencilResolveProperties.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceDepthStencilResolveProperties {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub supported_depth_resolve_modes: NonDisposableHandle,
    pub supported_stencil_resolve_modes: NonDisposableHandle,
    pub independent_resolve_none: NonDisposableHandle,
    pub independent_resolve: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSubpassDescriptionDepthStencilResolve.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSubpassDescriptionDepthStencilResolve {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub depth_resolve_mode: NonDisposableHandle,
    pub stencil_resolve_mode: NonDisposableHandle,
    pub p_depth_stencil_resolve_attachment: *const VkAttachmentReference2,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImageViewASTCDecodeModeEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImageViewASTCDecodeModeEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub decode_mode: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceASTCDecodeFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceASTCDecodeFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub decode_mode_shared_exponent: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceTransformFeedbackFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceTransformFeedbackFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub transform_feedback: NonDisposableHandle,
    pub geometry_streams: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceTransformFeedbackPropertiesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceTransformFeedbackPropertiesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub max_transform_feedback_streams: u32,
    pub max_transform_feedback_buffers: u32,
    pub max_transform_feedback_buffer_size: NonDisposableHandle,
    pub max_transform_feedback_stream_data_size: u32,
    pub max_transform_feedback_buffer_data_size: u32,
    pub max_transform_feedback_buffer_data_stride: u32,
    pub transform_feedback_queries: NonDisposableHandle,
    pub transform_feedback_streams_lines_triangles: NonDisposableHandle,
    pub transform_feedback_rasterization_stream_select: NonDisposableHandle,
    pub transform_feedback_draw: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineRasterizationStateStreamCreateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineRasterizationStateStreamCreateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub rasterization_stream: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub representative_fragment_test: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineRepresentativeFragmentTestStateCreateInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineRepresentativeFragmentTestStateCreateInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub representative_fragment_test_enable: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceExclusiveScissorFeaturesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceExclusiveScissorFeaturesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub exclusive_scissor: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineViewportExclusiveScissorStateCreateInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineViewportExclusiveScissorStateCreateInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub exclusive_scissor_count: u32,
    #[cdump(array(len = self.exclusive_scissor_count))]
    pub p_exclusive_scissors: *const VkRect2D,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceCornerSampledImageFeaturesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceCornerSampledImageFeaturesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub corner_sampled_image: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceComputeShaderDerivativesFeaturesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceComputeShaderDerivativesFeaturesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub compute_derivative_group_quads: NonDisposableHandle,
    pub compute_derivative_group_linear: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderImageFootprintFeaturesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceShaderImageFootprintFeaturesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub image_footprint: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub dedicated_allocation_image_aliasing: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceCopyMemoryIndirectFeaturesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceCopyMemoryIndirectFeaturesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub indirect_copy: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceCopyMemoryIndirectPropertiesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceCopyMemoryIndirectPropertiesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub supported_queues: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceMemoryDecompressionFeaturesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceMemoryDecompressionFeaturesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub memory_decompression: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceMemoryDecompressionPropertiesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceMemoryDecompressionPropertiesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub decompression_methods: NonDisposableHandle,
    pub max_decompression_indirect_count: u64,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkShadingRatePaletteNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkShadingRatePaletteNV {
    pub shading_rate_palette_entry_count: u32,
    #[cdump(array(len = self.shading_rate_palette_entry_count))]
    pub p_shading_rate_palette_entries: *const NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineViewportShadingRateImageStateCreateInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineViewportShadingRateImageStateCreateInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub shading_rate_image_enable: NonDisposableHandle,
    pub viewport_count: u32,
    #[cdump(array(len = self.viewport_count))]
    pub p_shading_rate_palettes: *const VkShadingRatePaletteNV,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShadingRateImageFeaturesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceShadingRateImageFeaturesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shading_rate_image: NonDisposableHandle,
    pub shading_rate_coarse_sample_order: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShadingRateImagePropertiesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceShadingRateImagePropertiesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shading_rate_texel_size: VkExtent2D,
    pub shading_rate_palette_size: u32,
    pub shading_rate_max_coarse_samples: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceInvocationMaskFeaturesHUAWEI.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceInvocationMaskFeaturesHUAWEI {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub invocation_mask: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkCoarseSampleLocationNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkCoarseSampleLocationNV {
    pub pixel_x: u32,
    pub pixel_y: u32,
    pub sample: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkCoarseSampleOrderCustomNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkCoarseSampleOrderCustomNV {
    pub shading_rate: NonDisposableHandle,
    pub sample_count: u32,
    pub sample_location_count: u32,
    #[cdump(array(len = self.sample_location_count))]
    pub p_sample_locations: *const VkCoarseSampleLocationNV,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineViewportCoarseSampleOrderStateCreateInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineViewportCoarseSampleOrderStateCreateInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub sample_order_type: NonDisposableHandle,
    pub custom_sample_order_count: u32,
    #[cdump(array(len = self.custom_sample_order_count))]
    pub p_custom_sample_orders: *const VkCoarseSampleOrderCustomNV,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceMeshShaderFeaturesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceMeshShaderFeaturesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub task_shader: NonDisposableHandle,
    pub mesh_shader: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceMeshShaderPropertiesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceMeshShaderPropertiesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub max_draw_mesh_tasks_count: u32,
    pub max_task_work_group_invocations: u32,
    pub max_task_work_group_size: [u32; 3],
    pub max_task_total_memory_size: u32,
    pub max_task_output_count: u32,
    pub max_mesh_work_group_invocations: u32,
    pub max_mesh_work_group_size: [u32; 3],
    pub max_mesh_total_memory_size: u32,
    pub max_mesh_output_vertices: u32,
    pub max_mesh_output_primitives: u32,
    pub max_mesh_multiview_view_count: u32,
    pub mesh_output_per_vertex_granularity: u32,
    pub mesh_output_per_primitive_granularity: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDrawMeshTasksIndirectCommandNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDrawMeshTasksIndirectCommandNV {
    pub task_count: u32,
    pub first_task: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceMeshShaderFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceMeshShaderFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub task_shader: NonDisposableHandle,
    pub mesh_shader: NonDisposableHandle,
    pub multiview_mesh_shader: NonDisposableHandle,
    pub primitive_fragment_shading_rate_mesh_shader: NonDisposableHandle,
    pub mesh_shader_queries: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceMeshShaderPropertiesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceMeshShaderPropertiesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub max_task_work_group_total_count: u32,
    pub max_task_work_group_count: [u32; 3],
    pub max_task_work_group_invocations: u32,
    pub max_task_work_group_size: [u32; 3],
    pub max_task_payload_size: u32,
    pub max_task_shared_memory_size: u32,
    pub max_task_payload_and_shared_memory_size: u32,
    pub max_mesh_work_group_total_count: u32,
    pub max_mesh_work_group_count: [u32; 3],
    pub max_mesh_work_group_invocations: u32,
    pub max_mesh_work_group_size: [u32; 3],
    pub max_mesh_shared_memory_size: u32,
    pub max_mesh_payload_and_shared_memory_size: u32,
    pub max_mesh_output_memory_size: u32,
    pub max_mesh_payload_and_output_memory_size: u32,
    pub max_mesh_output_components: u32,
    pub max_mesh_output_vertices: u32,
    pub max_mesh_output_primitives: u32,
    pub max_mesh_output_layers: u32,
    pub max_mesh_multiview_view_count: u32,
    pub mesh_output_per_vertex_granularity: u32,
    pub mesh_output_per_primitive_granularity: u32,
    pub max_preferred_task_work_group_invocations: u32,
    pub max_preferred_mesh_work_group_invocations: u32,
    pub prefers_local_invocation_vertex_output: NonDisposableHandle,
    pub prefers_local_invocation_primitive_output: NonDisposableHandle,
    pub prefers_compact_vertex_output: NonDisposableHandle,
    pub prefers_compact_primitive_output: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDrawMeshTasksIndirectCommandEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDrawMeshTasksIndirectCommandEXT {
    pub group_count_x: u32,
    pub group_count_y: u32,
    pub group_count_z: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkRayTracingShaderGroupCreateInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkRayTracingShaderGroupCreateInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub type_: NonDisposableHandle,
    pub general_shader: u32,
    pub closest_hit_shader: u32,
    pub any_hit_shader: u32,
    pub intersection_shader: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkRayTracingShaderGroupCreateInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkRayTracingShaderGroupCreateInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub type_: NonDisposableHandle,
    pub general_shader: u32,
    pub closest_hit_shader: u32,
    pub any_hit_shader: u32,
    pub intersection_shader: u32,
    #[cdump(dynamic(serializer = unimplemented_serializer, deserializer = unimplemented_deserializer))]
    pub p_shader_group_capture_replay_handle: *const c_void,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkRayTracingPipelineCreateInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkRayTracingPipelineCreateInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub stage_count: u32,
    #[cdump(array(len = self.stage_count))]
    pub p_stages: *const VkPipelineShaderStageCreateInfo,
    pub group_count: u32,
    #[cdump(array(len = self.group_count))]
    pub p_groups: *const VkRayTracingShaderGroupCreateInfoNV,
    pub max_recursion_depth: u32,
    pub layout: NonDisposableHandle,
    pub base_pipeline_handle: NonDisposableHandle,
    pub base_pipeline_index: i32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkRayTracingPipelineCreateInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkRayTracingPipelineCreateInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub stage_count: u32,
    #[cdump(array(len = self.stage_count))]
    pub p_stages: *const VkPipelineShaderStageCreateInfo,
    pub group_count: u32,
    #[cdump(array(len = self.group_count))]
    pub p_groups: *const VkRayTracingShaderGroupCreateInfoKHR,
    pub max_pipeline_ray_recursion_depth: u32,
    pub p_library_info: *const VkPipelineLibraryCreateInfoKHR,
    pub p_library_interface: *const VkRayTracingPipelineInterfaceCreateInfoKHR,
    pub p_dynamic_state: *const VkPipelineDynamicStateCreateInfo,
    pub layout: NonDisposableHandle,
    pub base_pipeline_handle: NonDisposableHandle,
    pub base_pipeline_index: i32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkGeometryTrianglesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkGeometryTrianglesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub vertex_data: NonDisposableHandle,
    pub vertex_offset: NonDisposableHandle,
    pub vertex_count: u32,
    pub vertex_stride: NonDisposableHandle,
    pub vertex_format: NonDisposableHandle,
    pub index_data: NonDisposableHandle,
    pub index_offset: NonDisposableHandle,
    pub index_count: u32,
    pub index_type: NonDisposableHandle,
    pub transform_data: NonDisposableHandle,
    pub transform_offset: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkGeometryAABBNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkGeometryAABBNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub aabb_data: NonDisposableHandle,
    pub num_aabbs: u32,
    pub stride: u32,
    pub offset: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkGeometryDataNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkGeometryDataNV {
    pub triangles: VkGeometryTrianglesNV,
    pub aabbs: VkGeometryAABBNV,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkGeometryNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkGeometryNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub geometry_type: NonDisposableHandle,
    pub geometry: VkGeometryDataNV,
    pub flags: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAccelerationStructureInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAccelerationStructureInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub type_: NonDisposableHandle,
    pub flags: NonDisposableHandle,
    pub instance_count: u32,
    pub geometry_count: u32,
    #[cdump(array(len = self.geometry_count))]
    pub p_geometries: *const VkGeometryNV,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAccelerationStructureCreateInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAccelerationStructureCreateInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub compacted_size: NonDisposableHandle,
    pub info: VkAccelerationStructureInfoNV,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBindAccelerationStructureMemoryInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBindAccelerationStructureMemoryInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub acceleration_structure: NonDisposableHandle,
    pub memory: NonDisposableHandle,
    pub memory_offset: NonDisposableHandle,
    pub device_index_count: u32,
    #[cdump(array(len = self.device_index_count))]
    pub p_device_indices: *const u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkWriteDescriptorSetAccelerationStructureKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkWriteDescriptorSetAccelerationStructureKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub acceleration_structure_count: u32,
    #[cdump(array(len = self.acceleration_structure_count))]
    pub p_acceleration_structures: *const NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkWriteDescriptorSetAccelerationStructureNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkWriteDescriptorSetAccelerationStructureNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub acceleration_structure_count: u32,
    #[cdump(array(len = self.acceleration_structure_count))]
    pub p_acceleration_structures: *const NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAccelerationStructureMemoryRequirementsInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAccelerationStructureMemoryRequirementsInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub type_: NonDisposableHandle,
    pub acceleration_structure: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceAccelerationStructureFeaturesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceAccelerationStructureFeaturesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub acceleration_structure: NonDisposableHandle,
    pub acceleration_structure_capture_replay: NonDisposableHandle,
    pub acceleration_structure_indirect_build: NonDisposableHandle,
    pub acceleration_structure_host_commands: NonDisposableHandle,
    pub descriptor_binding_acceleration_structure_update_after_bind: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceRayTracingPipelineFeaturesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceRayTracingPipelineFeaturesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub ray_tracing_pipeline: NonDisposableHandle,
    pub ray_tracing_pipeline_shader_group_handle_capture_replay: NonDisposableHandle,
    pub ray_tracing_pipeline_shader_group_handle_capture_replay_mixed: NonDisposableHandle,
    pub ray_tracing_pipeline_trace_rays_indirect: NonDisposableHandle,
    pub ray_traversal_primitive_culling: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceRayQueryFeaturesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceRayQueryFeaturesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub ray_query: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceAccelerationStructurePropertiesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceAccelerationStructurePropertiesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub max_geometry_count: u64,
    pub max_instance_count: u64,
    pub max_primitive_count: u64,
    pub max_per_stage_descriptor_acceleration_structures: u32,
    pub max_per_stage_descriptor_update_after_bind_acceleration_structures: u32,
    pub max_descriptor_set_acceleration_structures: u32,
    pub max_descriptor_set_update_after_bind_acceleration_structures: u32,
    pub min_acceleration_structure_scratch_offset_alignment: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceRayTracingPipelinePropertiesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceRayTracingPipelinePropertiesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shader_group_handle_size: u32,
    pub max_ray_recursion_depth: u32,
    pub max_shader_group_stride: u32,
    pub shader_group_base_alignment: u32,
    pub shader_group_handle_capture_replay_size: u32,
    pub max_ray_dispatch_invocation_count: u32,
    pub shader_group_handle_alignment: u32,
    pub max_ray_hit_attribute_size: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceRayTracingPropertiesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceRayTracingPropertiesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shader_group_handle_size: u32,
    pub max_recursion_depth: u32,
    pub max_shader_group_stride: u32,
    pub shader_group_base_alignment: u32,
    pub max_geometry_count: u64,
    pub max_instance_count: u64,
    pub max_triangle_count: u64,
    pub max_descriptor_set_acceleration_structures: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkStridedDeviceAddressRegionKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkStridedDeviceAddressRegionKHR {
    pub device_address: NonDisposableHandle,
    pub stride: NonDisposableHandle,
    pub size: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkTraceRaysIndirectCommandKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkTraceRaysIndirectCommandKHR {
    pub width: u32,
    pub height: u32,
    pub depth: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkTraceRaysIndirectCommand2KHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkTraceRaysIndirectCommand2KHR {
    pub raygen_shader_record_address: NonDisposableHandle,
    pub raygen_shader_record_size: NonDisposableHandle,
    pub miss_shader_binding_table_address: NonDisposableHandle,
    pub miss_shader_binding_table_size: NonDisposableHandle,
    pub miss_shader_binding_table_stride: NonDisposableHandle,
    pub hit_shader_binding_table_address: NonDisposableHandle,
    pub hit_shader_binding_table_size: NonDisposableHandle,
    pub hit_shader_binding_table_stride: NonDisposableHandle,
    pub callable_shader_binding_table_address: NonDisposableHandle,
    pub callable_shader_binding_table_size: NonDisposableHandle,
    pub callable_shader_binding_table_stride: NonDisposableHandle,
    pub width: u32,
    pub height: u32,
    pub depth: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub ray_tracing_maintenance1: NonDisposableHandle,
    pub ray_tracing_pipeline_trace_rays_indirect2: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDrmFormatModifierPropertiesListEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDrmFormatModifierPropertiesListEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub drm_format_modifier_count: u32,
    #[cdump(array(len = self.drm_format_modifier_count))]
    pub p_drm_format_modifier_properties: *mut VkDrmFormatModifierPropertiesEXT,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDrmFormatModifierPropertiesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDrmFormatModifierPropertiesEXT {
    pub drm_format_modifier: u64,
    pub drm_format_modifier_plane_count: u32,
    pub drm_format_modifier_tiling_features: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceImageDrmFormatModifierInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceImageDrmFormatModifierInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub drm_format_modifier: u64,
    pub sharing_mode: NonDisposableHandle,
    pub queue_family_index_count: u32,
    #[cdump(array(len = self.queue_family_index_count))]
    pub p_queue_family_indices: *const u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImageDrmFormatModifierListCreateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImageDrmFormatModifierListCreateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub drm_format_modifier_count: u32,
    #[cdump(array(len = self.drm_format_modifier_count))]
    pub p_drm_format_modifiers: *const u64,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImageDrmFormatModifierExplicitCreateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImageDrmFormatModifierExplicitCreateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub drm_format_modifier: u64,
    pub drm_format_modifier_plane_count: u32,
    #[cdump(array(len = self.drm_format_modifier_plane_count))]
    pub p_plane_layouts: *const VkSubresourceLayout,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImageDrmFormatModifierPropertiesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImageDrmFormatModifierPropertiesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub drm_format_modifier: u64,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImageStencilUsageCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImageStencilUsageCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub stencil_usage: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDeviceMemoryOverallocationCreateInfoAMD.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDeviceMemoryOverallocationCreateInfoAMD {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub overallocation_behavior: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceFragmentDensityMapFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceFragmentDensityMapFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub fragment_density_map: NonDisposableHandle,
    pub fragment_density_map_dynamic: NonDisposableHandle,
    pub fragment_density_map_non_subsampled_images: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceFragmentDensityMap2FeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceFragmentDensityMap2FeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub fragment_density_map_deferred: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub fragment_density_map_offset: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceFragmentDensityMapPropertiesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceFragmentDensityMapPropertiesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub min_fragment_density_texel_size: VkExtent2D,
    pub max_fragment_density_texel_size: VkExtent2D,
    pub fragment_density_invocations: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceFragmentDensityMap2PropertiesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceFragmentDensityMap2PropertiesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub subsampled_loads: NonDisposableHandle,
    pub subsampled_coarse_reconstruction_early_access: NonDisposableHandle,
    pub max_subsampled_array_layers: u32,
    pub max_descriptor_set_subsampled_samplers: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub fragment_density_offset_granularity: VkExtent2D,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkRenderPassFragmentDensityMapCreateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkRenderPassFragmentDensityMapCreateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub fragment_density_map_attachment: VkAttachmentReference,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSubpassFragmentDensityMapOffsetEndInfoQCOM.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSubpassFragmentDensityMapOffsetEndInfoQCOM {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub fragment_density_offset_count: u32,
    #[cdump(array(len = self.fragment_density_offset_count))]
    pub p_fragment_density_offsets: *const VkOffset2D,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceScalarBlockLayoutFeatures.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceScalarBlockLayoutFeatures {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub scalar_block_layout: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSurfaceProtectedCapabilitiesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSurfaceProtectedCapabilitiesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub supports_protected: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceUniformBufferStandardLayoutFeatures.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceUniformBufferStandardLayoutFeatures {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub uniform_buffer_standard_layout: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceDepthClipEnableFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceDepthClipEnableFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub depth_clip_enable: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineRasterizationDepthClipStateCreateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineRasterizationDepthClipStateCreateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub depth_clip_enable: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceMemoryBudgetPropertiesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceMemoryBudgetPropertiesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub heap_budget: [NonDisposableHandle; vk::MAX_MEMORY_HEAPS],
    pub heap_usage: [NonDisposableHandle; vk::MAX_MEMORY_HEAPS],
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceMemoryPriorityFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceMemoryPriorityFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub memory_priority: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMemoryPriorityAllocateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMemoryPriorityAllocateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub priority: f32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub pageable_device_local_memory: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceBufferDeviceAddressFeatures.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceBufferDeviceAddressFeatures {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub buffer_device_address: NonDisposableHandle,
    pub buffer_device_address_capture_replay: NonDisposableHandle,
    pub buffer_device_address_multi_device: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceBufferDeviceAddressFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceBufferDeviceAddressFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub buffer_device_address: NonDisposableHandle,
    pub buffer_device_address_capture_replay: NonDisposableHandle,
    pub buffer_device_address_multi_device: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBufferDeviceAddressInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBufferDeviceAddressInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub buffer: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBufferOpaqueCaptureAddressCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBufferOpaqueCaptureAddressCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub opaque_capture_address: u64,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBufferDeviceAddressCreateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBufferDeviceAddressCreateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub device_address: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceImageViewImageFormatInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceImageViewImageFormatInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub image_view_type: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkFilterCubicImageViewImageFormatPropertiesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkFilterCubicImageViewImageFormatPropertiesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub filter_cubic: NonDisposableHandle,
    pub filter_cubic_minmax: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceImagelessFramebufferFeatures.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceImagelessFramebufferFeatures {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub imageless_framebuffer: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkFramebufferAttachmentsCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkFramebufferAttachmentsCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub attachment_image_info_count: u32,
    #[cdump(array(len = self.attachment_image_info_count))]
    pub p_attachment_image_infos: *const VkFramebufferAttachmentImageInfo,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkFramebufferAttachmentImageInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkFramebufferAttachmentImageInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub usage: NonDisposableHandle,
    pub width: u32,
    pub height: u32,
    pub layer_count: u32,
    pub view_format_count: u32,
    #[cdump(array(len = self.view_format_count))]
    pub p_view_formats: *const NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkRenderPassAttachmentBeginInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkRenderPassAttachmentBeginInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub attachment_count: u32,
    #[cdump(array(len = self.attachment_count))]
    pub p_attachments: *const NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceTextureCompressionASTCHDRFeatures.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceTextureCompressionASTCHDRFeatures {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub texture_compression_astc_hdr: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceCooperativeMatrixFeaturesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceCooperativeMatrixFeaturesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub cooperative_matrix: NonDisposableHandle,
    pub cooperative_matrix_robust_buffer_access: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceCooperativeMatrixPropertiesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceCooperativeMatrixPropertiesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub cooperative_matrix_supported_stages: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkCooperativeMatrixPropertiesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkCooperativeMatrixPropertiesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub m_size: u32,
    pub n_size: u32,
    pub k_size: u32,
    pub a_type: NonDisposableHandle,
    pub b_type: NonDisposableHandle,
    pub c_type: NonDisposableHandle,
    pub d_type: NonDisposableHandle,
    pub scope: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceYcbcrImageArraysFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceYcbcrImageArraysFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub ycbcr_image_arrays: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImageViewHandleInfoNVX.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImageViewHandleInfoNVX {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub image_view: NonDisposableHandle,
    pub descriptor_type: NonDisposableHandle,
    pub sampler: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImageViewAddressPropertiesNVX.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImageViewAddressPropertiesNVX {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub device_address: NonDisposableHandle,
    pub size: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPresentFrameTokenGGP.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPresentFrameTokenGGP {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub frame_token: vk::GgpFrameToken,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineCreationFeedback.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineCreationFeedback {
    pub flags: NonDisposableHandle,
    pub duration: u64,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineCreationFeedbackCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineCreationFeedbackCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub p_pipeline_creation_feedback: *mut VkPipelineCreationFeedback,
    pub pipeline_stage_creation_feedback_count: u32,
    #[cdump(array(len = self.pipeline_stage_creation_feedback_count))]
    pub p_pipeline_stage_creation_feedbacks: *mut VkPipelineCreationFeedback,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSurfaceFullScreenExclusiveInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSurfaceFullScreenExclusiveInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub full_screen_exclusive: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSurfaceFullScreenExclusiveWin32InfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSurfaceFullScreenExclusiveWin32InfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub hmonitor: vk::HMONITOR,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSurfaceCapabilitiesFullScreenExclusiveEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSurfaceCapabilitiesFullScreenExclusiveEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub full_screen_exclusive_supported: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDevicePresentBarrierFeaturesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDevicePresentBarrierFeaturesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub present_barrier: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSurfaceCapabilitiesPresentBarrierNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSurfaceCapabilitiesPresentBarrierNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub present_barrier_supported: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSwapchainPresentBarrierCreateInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSwapchainPresentBarrierCreateInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub present_barrier_enable: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDevicePerformanceQueryFeaturesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDevicePerformanceQueryFeaturesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub performance_counter_query_pools: NonDisposableHandle,
    pub performance_counter_multiple_query_pools: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDevicePerformanceQueryPropertiesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDevicePerformanceQueryPropertiesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub allow_command_buffer_query_copies: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPerformanceCounterKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPerformanceCounterKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub unit: NonDisposableHandle,
    pub scope: NonDisposableHandle,
    pub storage: NonDisposableHandle,
    pub uuid: [u8; vk::UUID_SIZE],
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPerformanceCounterDescriptionKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPerformanceCounterDescriptionKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub flags: NonDisposableHandle,
    pub name: [c_char; vk::MAX_DESCRIPTION_SIZE],
    pub category: [c_char; vk::MAX_DESCRIPTION_SIZE],
    pub description: [c_char; vk::MAX_DESCRIPTION_SIZE],
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkQueryPoolPerformanceCreateInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkQueryPoolPerformanceCreateInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub queue_family_index: u32,
    pub counter_index_count: u32,
    #[cdump(array(len = self.counter_index_count))]
    pub p_counter_indices: *const u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPerformanceCounterResultKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPerformanceCounterResultKHR {
    pub int32: i32,
    pub int64: i64,
    pub uint32: u32,
    pub uint64: u64,
    pub float32: f32,
    pub float64: f64,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAcquireProfilingLockInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAcquireProfilingLockInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub timeout: u64,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPerformanceQuerySubmitInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPerformanceQuerySubmitInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub counter_pass_index: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkHeadlessSurfaceCreateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkHeadlessSurfaceCreateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceCoverageReductionModeFeaturesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceCoverageReductionModeFeaturesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub coverage_reduction_mode: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineCoverageReductionStateCreateInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineCoverageReductionStateCreateInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub coverage_reduction_mode: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkFramebufferMixedSamplesCombinationNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkFramebufferMixedSamplesCombinationNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub coverage_reduction_mode: NonDisposableHandle,
    pub rasterization_samples: vk::SampleCountFlags,
    pub depth_stencil_samples: NonDisposableHandle,
    pub color_samples: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shader_integer_functions2: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPerformanceValueDataINTEL.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPerformanceValueDataINTEL {
    pub value32: u32,
    pub value64: u64,
    pub value_float: f32,
    pub value_bool: NonDisposableHandle,
    pub value_string: *const c_char,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPerformanceValueINTEL.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPerformanceValueINTEL {
    pub type_: NonDisposableHandle,
    pub data: VkPerformanceValueDataINTEL,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkInitializePerformanceApiInfoINTEL.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkInitializePerformanceApiInfoINTEL {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    #[cdump(dynamic(serializer = unimplemented_serializer, deserializer = unimplemented_deserializer_mut))]
    pub p_user_data: *mut c_void,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkQueryPoolPerformanceQueryCreateInfoINTEL.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkQueryPoolPerformanceQueryCreateInfoINTEL {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub performance_counters_sampling: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPerformanceMarkerInfoINTEL.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPerformanceMarkerInfoINTEL {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub marker: u64,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPerformanceStreamMarkerInfoINTEL.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPerformanceStreamMarkerInfoINTEL {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub marker: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPerformanceOverrideInfoINTEL.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPerformanceOverrideInfoINTEL {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub type_: NonDisposableHandle,
    pub enable: NonDisposableHandle,
    pub parameter: u64,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPerformanceConfigurationAcquireInfoINTEL.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPerformanceConfigurationAcquireInfoINTEL {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub type_: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderClockFeaturesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceShaderClockFeaturesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shader_subgroup_clock: NonDisposableHandle,
    pub shader_device_clock: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceIndexTypeUint8FeaturesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceIndexTypeUint8FeaturesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub index_type_uint8: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderSMBuiltinsPropertiesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceShaderSMBuiltinsPropertiesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shader_smcount: u32,
    pub shader_warps_per_sm: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderSMBuiltinsFeaturesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceShaderSMBuiltinsFeaturesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shader_smbuiltins: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub fragment_shader_sample_interlock: NonDisposableHandle,
    pub fragment_shader_pixel_interlock: NonDisposableHandle,
    pub fragment_shader_shading_rate_interlock: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub separate_depth_stencil_layouts: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAttachmentReferenceStencilLayout.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAttachmentReferenceStencilLayout {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub stencil_layout: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub primitive_topology_list_restart: NonDisposableHandle,
    pub primitive_topology_patch_list_restart: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAttachmentDescriptionStencilLayout.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAttachmentDescriptionStencilLayout {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub stencil_initial_layout: NonDisposableHandle,
    pub stencil_final_layout: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub pipeline_executable_info: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub pipeline: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineExecutablePropertiesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineExecutablePropertiesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub stages: NonDisposableHandle,
    pub name: [c_char; vk::MAX_DESCRIPTION_SIZE],
    pub description: [c_char; vk::MAX_DESCRIPTION_SIZE],
    pub subgroup_size: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineExecutableInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineExecutableInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub pipeline: NonDisposableHandle,
    pub executable_index: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineExecutableStatisticValueKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineExecutableStatisticValueKHR {
    pub b32: NonDisposableHandle,
    pub i64: i64,
    pub u64: u64,
    pub f64: f64,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineExecutableStatisticKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineExecutableStatisticKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub name: [c_char; vk::MAX_DESCRIPTION_SIZE],
    pub description: [c_char; vk::MAX_DESCRIPTION_SIZE],
    pub format: NonDisposableHandle,
    pub value: VkPipelineExecutableStatisticValueKHR,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineExecutableInternalRepresentationKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineExecutableInternalRepresentationKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub name: [c_char; vk::MAX_DESCRIPTION_SIZE],
    pub description: [c_char; vk::MAX_DESCRIPTION_SIZE],
    pub is_text: NonDisposableHandle,
    pub data_size: usize,
    #[cdump(array(len = self.data_size))]
    pub p_data: *const u8,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shader_demote_to_helper_invocation: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub texel_buffer_alignment: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceTexelBufferAlignmentProperties.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceTexelBufferAlignmentProperties {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub storage_texel_buffer_offset_alignment_bytes: NonDisposableHandle,
    pub storage_texel_buffer_offset_single_texel_alignment: NonDisposableHandle,
    pub uniform_texel_buffer_offset_alignment_bytes: NonDisposableHandle,
    pub uniform_texel_buffer_offset_single_texel_alignment: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceSubgroupSizeControlFeatures.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceSubgroupSizeControlFeatures {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub subgroup_size_control: NonDisposableHandle,
    pub compute_full_subgroups: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceSubgroupSizeControlProperties.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceSubgroupSizeControlProperties {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub min_subgroup_size: u32,
    pub max_subgroup_size: u32,
    pub max_compute_workgroup_subgroups: u32,
    pub required_subgroup_size_stages: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineShaderStageRequiredSubgroupSizeCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineShaderStageRequiredSubgroupSizeCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub required_subgroup_size: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSubpassShadingPipelineCreateInfoHUAWEI.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSubpassShadingPipelineCreateInfoHUAWEI {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub render_pass: NonDisposableHandle,
    pub subpass: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceSubpassShadingPropertiesHUAWEI.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceSubpassShadingPropertiesHUAWEI {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub max_subpass_shading_workgroup_size_aspect_ratio: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub max_work_group_count: [u32; 3],
    pub max_work_group_size: [u32; 3],
    pub max_output_cluster_count: u32,
    pub indirect_buffer_offset_alignment: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMemoryOpaqueCaptureAddressAllocateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMemoryOpaqueCaptureAddressAllocateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub opaque_capture_address: u64,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDeviceMemoryOpaqueCaptureAddressInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDeviceMemoryOpaqueCaptureAddressInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub memory: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceLineRasterizationFeaturesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceLineRasterizationFeaturesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub rectangular_lines: NonDisposableHandle,
    pub bresenham_lines: NonDisposableHandle,
    pub smooth_lines: NonDisposableHandle,
    pub stippled_rectangular_lines: NonDisposableHandle,
    pub stippled_bresenham_lines: NonDisposableHandle,
    pub stippled_smooth_lines: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceLineRasterizationPropertiesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceLineRasterizationPropertiesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub line_sub_pixel_precision_bits: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineRasterizationLineStateCreateInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineRasterizationLineStateCreateInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub line_rasterization_mode: NonDisposableHandle,
    pub stippled_line_enable: NonDisposableHandle,
    pub line_stipple_factor: u32,
    pub line_stipple_pattern: u16,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDevicePipelineCreationCacheControlFeatures.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDevicePipelineCreationCacheControlFeatures {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub pipeline_creation_cache_control: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceVulkan11Features.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceVulkan11Features {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub storage_buffer16_bit_access: NonDisposableHandle,
    pub uniform_and_storage_buffer16_bit_access: NonDisposableHandle,
    pub storage_push_constant16: NonDisposableHandle,
    pub storage_input_output16: NonDisposableHandle,
    pub multiview: NonDisposableHandle,
    pub multiview_geometry_shader: NonDisposableHandle,
    pub multiview_tessellation_shader: NonDisposableHandle,
    pub variable_pointers_storage_buffer: NonDisposableHandle,
    pub variable_pointers: NonDisposableHandle,
    pub protected_memory: NonDisposableHandle,
    pub sampler_ycbcr_conversion: NonDisposableHandle,
    pub shader_draw_parameters: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceVulkan11Properties.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceVulkan11Properties {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub device_uuid: [u8; vk::UUID_SIZE],
    pub driver_uuid: [u8; vk::UUID_SIZE],
    pub device_luid: [u8; vk::LUID_SIZE],
    pub device_node_mask: u32,
    pub device_luidvalid: NonDisposableHandle,
    pub subgroup_size: u32,
    pub subgroup_supported_stages: NonDisposableHandle,
    pub subgroup_supported_operations: NonDisposableHandle,
    pub subgroup_quad_operations_in_all_stages: NonDisposableHandle,
    pub point_clipping_behavior: NonDisposableHandle,
    pub max_multiview_view_count: u32,
    pub max_multiview_instance_index: u32,
    pub protected_no_fault: NonDisposableHandle,
    pub max_per_set_descriptors: u32,
    pub max_memory_allocation_size: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceVulkan12Features.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceVulkan12Features {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub sampler_mirror_clamp_to_edge: NonDisposableHandle,
    pub draw_indirect_count: NonDisposableHandle,
    pub storage_buffer8_bit_access: NonDisposableHandle,
    pub uniform_and_storage_buffer8_bit_access: NonDisposableHandle,
    pub storage_push_constant8: NonDisposableHandle,
    pub shader_buffer_int64_atomics: NonDisposableHandle,
    pub shader_shared_int64_atomics: NonDisposableHandle,
    pub shader_float16: NonDisposableHandle,
    pub shader_int8: NonDisposableHandle,
    pub descriptor_indexing: NonDisposableHandle,
    pub shader_input_attachment_array_dynamic_indexing: NonDisposableHandle,
    pub shader_uniform_texel_buffer_array_dynamic_indexing: NonDisposableHandle,
    pub shader_storage_texel_buffer_array_dynamic_indexing: NonDisposableHandle,
    pub shader_uniform_buffer_array_non_uniform_indexing: NonDisposableHandle,
    pub shader_sampled_image_array_non_uniform_indexing: NonDisposableHandle,
    pub shader_storage_buffer_array_non_uniform_indexing: NonDisposableHandle,
    pub shader_storage_image_array_non_uniform_indexing: NonDisposableHandle,
    pub shader_input_attachment_array_non_uniform_indexing: NonDisposableHandle,
    pub shader_uniform_texel_buffer_array_non_uniform_indexing: NonDisposableHandle,
    pub shader_storage_texel_buffer_array_non_uniform_indexing: NonDisposableHandle,
    pub descriptor_binding_uniform_buffer_update_after_bind: NonDisposableHandle,
    pub descriptor_binding_sampled_image_update_after_bind: NonDisposableHandle,
    pub descriptor_binding_storage_image_update_after_bind: NonDisposableHandle,
    pub descriptor_binding_storage_buffer_update_after_bind: NonDisposableHandle,
    pub descriptor_binding_uniform_texel_buffer_update_after_bind: NonDisposableHandle,
    pub descriptor_binding_storage_texel_buffer_update_after_bind: NonDisposableHandle,
    pub descriptor_binding_update_unused_while_pending: NonDisposableHandle,
    pub descriptor_binding_partially_bound: NonDisposableHandle,
    pub descriptor_binding_variable_descriptor_count: NonDisposableHandle,
    pub runtime_descriptor_array: NonDisposableHandle,
    pub sampler_filter_minmax: NonDisposableHandle,
    pub scalar_block_layout: NonDisposableHandle,
    pub imageless_framebuffer: NonDisposableHandle,
    pub uniform_buffer_standard_layout: NonDisposableHandle,
    pub shader_subgroup_extended_types: NonDisposableHandle,
    pub separate_depth_stencil_layouts: NonDisposableHandle,
    pub host_query_reset: NonDisposableHandle,
    pub timeline_semaphore: NonDisposableHandle,
    pub buffer_device_address: NonDisposableHandle,
    pub buffer_device_address_capture_replay: NonDisposableHandle,
    pub buffer_device_address_multi_device: NonDisposableHandle,
    pub vulkan_memory_model: NonDisposableHandle,
    pub vulkan_memory_model_device_scope: NonDisposableHandle,
    pub vulkan_memory_model_availability_visibility_chains: NonDisposableHandle,
    pub shader_output_viewport_index: NonDisposableHandle,
    pub shader_output_layer: NonDisposableHandle,
    pub subgroup_broadcast_dynamic_id: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceVulkan12Properties.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceVulkan12Properties {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub driver_id: NonDisposableHandle,
    pub driver_name: [c_char; vk::MAX_DRIVER_NAME_SIZE],
    pub driver_info: [c_char; vk::MAX_DRIVER_INFO_SIZE],
    pub conformance_version: VkConformanceVersion,
    pub denorm_behavior_independence: NonDisposableHandle,
    pub rounding_mode_independence: NonDisposableHandle,
    pub shader_signed_zero_inf_nan_preserve_float16: NonDisposableHandle,
    pub shader_signed_zero_inf_nan_preserve_float32: NonDisposableHandle,
    pub shader_signed_zero_inf_nan_preserve_float64: NonDisposableHandle,
    pub shader_denorm_preserve_float16: NonDisposableHandle,
    pub shader_denorm_preserve_float32: NonDisposableHandle,
    pub shader_denorm_preserve_float64: NonDisposableHandle,
    pub shader_denorm_flush_to_zero_float16: NonDisposableHandle,
    pub shader_denorm_flush_to_zero_float32: NonDisposableHandle,
    pub shader_denorm_flush_to_zero_float64: NonDisposableHandle,
    pub shader_rounding_mode_rtefloat16: NonDisposableHandle,
    pub shader_rounding_mode_rtefloat32: NonDisposableHandle,
    pub shader_rounding_mode_rtefloat64: NonDisposableHandle,
    pub shader_rounding_mode_rtzfloat16: NonDisposableHandle,
    pub shader_rounding_mode_rtzfloat32: NonDisposableHandle,
    pub shader_rounding_mode_rtzfloat64: NonDisposableHandle,
    pub max_update_after_bind_descriptors_in_all_pools: u32,
    pub shader_uniform_buffer_array_non_uniform_indexing_native: NonDisposableHandle,
    pub shader_sampled_image_array_non_uniform_indexing_native: NonDisposableHandle,
    pub shader_storage_buffer_array_non_uniform_indexing_native: NonDisposableHandle,
    pub shader_storage_image_array_non_uniform_indexing_native: NonDisposableHandle,
    pub shader_input_attachment_array_non_uniform_indexing_native: NonDisposableHandle,
    pub robust_buffer_access_update_after_bind: NonDisposableHandle,
    pub quad_divergent_implicit_lod: NonDisposableHandle,
    pub max_per_stage_descriptor_update_after_bind_samplers: u32,
    pub max_per_stage_descriptor_update_after_bind_uniform_buffers: u32,
    pub max_per_stage_descriptor_update_after_bind_storage_buffers: u32,
    pub max_per_stage_descriptor_update_after_bind_sampled_images: u32,
    pub max_per_stage_descriptor_update_after_bind_storage_images: u32,
    pub max_per_stage_descriptor_update_after_bind_input_attachments: u32,
    pub max_per_stage_update_after_bind_resources: u32,
    pub max_descriptor_set_update_after_bind_samplers: u32,
    pub max_descriptor_set_update_after_bind_uniform_buffers: u32,
    pub max_descriptor_set_update_after_bind_uniform_buffers_dynamic: u32,
    pub max_descriptor_set_update_after_bind_storage_buffers: u32,
    pub max_descriptor_set_update_after_bind_storage_buffers_dynamic: u32,
    pub max_descriptor_set_update_after_bind_sampled_images: u32,
    pub max_descriptor_set_update_after_bind_storage_images: u32,
    pub max_descriptor_set_update_after_bind_input_attachments: u32,
    pub supported_depth_resolve_modes: NonDisposableHandle,
    pub supported_stencil_resolve_modes: NonDisposableHandle,
    pub independent_resolve_none: NonDisposableHandle,
    pub independent_resolve: NonDisposableHandle,
    pub filter_minmax_single_component_formats: NonDisposableHandle,
    pub filter_minmax_image_component_mapping: NonDisposableHandle,
    pub max_timeline_semaphore_value_difference: u64,
    pub framebuffer_integer_color_sample_counts: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceVulkan13Features.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceVulkan13Features {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub robust_image_access: NonDisposableHandle,
    pub inline_uniform_block: NonDisposableHandle,
    pub descriptor_binding_inline_uniform_block_update_after_bind: NonDisposableHandle,
    pub pipeline_creation_cache_control: NonDisposableHandle,
    pub private_data: NonDisposableHandle,
    pub shader_demote_to_helper_invocation: NonDisposableHandle,
    pub shader_terminate_invocation: NonDisposableHandle,
    pub subgroup_size_control: NonDisposableHandle,
    pub compute_full_subgroups: NonDisposableHandle,
    pub synchronization2: NonDisposableHandle,
    pub texture_compression_astc_hdr: NonDisposableHandle,
    pub shader_zero_initialize_workgroup_memory: NonDisposableHandle,
    pub dynamic_rendering: NonDisposableHandle,
    pub shader_integer_dot_product: NonDisposableHandle,
    pub maintenance4: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceVulkan13Properties.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceVulkan13Properties {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub min_subgroup_size: u32,
    pub max_subgroup_size: u32,
    pub max_compute_workgroup_subgroups: u32,
    pub required_subgroup_size_stages: NonDisposableHandle,
    pub max_inline_uniform_block_size: u32,
    pub max_per_stage_descriptor_inline_uniform_blocks: u32,
    pub max_per_stage_descriptor_update_after_bind_inline_uniform_blocks: u32,
    pub max_descriptor_set_inline_uniform_blocks: u32,
    pub max_descriptor_set_update_after_bind_inline_uniform_blocks: u32,
    pub max_inline_uniform_total_size: u32,
    pub integer_dot_product8_bit_unsigned_accelerated: NonDisposableHandle,
    pub integer_dot_product8_bit_signed_accelerated: NonDisposableHandle,
    pub integer_dot_product8_bit_mixed_signedness_accelerated: NonDisposableHandle,
    pub integer_dot_product4x8_bit_packed_unsigned_accelerated: NonDisposableHandle,
    pub integer_dot_product4x8_bit_packed_signed_accelerated: NonDisposableHandle,
    pub integer_dot_product4x8_bit_packed_mixed_signedness_accelerated: NonDisposableHandle,
    pub integer_dot_product16_bit_unsigned_accelerated: NonDisposableHandle,
    pub integer_dot_product16_bit_signed_accelerated: NonDisposableHandle,
    pub integer_dot_product16_bit_mixed_signedness_accelerated: NonDisposableHandle,
    pub integer_dot_product32_bit_unsigned_accelerated: NonDisposableHandle,
    pub integer_dot_product32_bit_signed_accelerated: NonDisposableHandle,
    pub integer_dot_product32_bit_mixed_signedness_accelerated: NonDisposableHandle,
    pub integer_dot_product64_bit_unsigned_accelerated: NonDisposableHandle,
    pub integer_dot_product64_bit_signed_accelerated: NonDisposableHandle,
    pub integer_dot_product64_bit_mixed_signedness_accelerated: NonDisposableHandle,
    pub integer_dot_product_accumulating_saturating8_bit_unsigned_accelerated: NonDisposableHandle,
    pub integer_dot_product_accumulating_saturating8_bit_signed_accelerated: NonDisposableHandle,
    pub integer_dot_product_accumulating_saturating8_bit_mixed_signedness_accelerated:
        NonDisposableHandle,
    pub integer_dot_product_accumulating_saturating4x8_bit_packed_unsigned_accelerated:
        NonDisposableHandle,
    pub integer_dot_product_accumulating_saturating4x8_bit_packed_signed_accelerated:
        NonDisposableHandle,
    pub integer_dot_product_accumulating_saturating4x8_bit_packed_mixed_signedness_accelerated:
        NonDisposableHandle,
    pub integer_dot_product_accumulating_saturating16_bit_unsigned_accelerated: NonDisposableHandle,
    pub integer_dot_product_accumulating_saturating16_bit_signed_accelerated: NonDisposableHandle,
    pub integer_dot_product_accumulating_saturating16_bit_mixed_signedness_accelerated:
        NonDisposableHandle,
    pub integer_dot_product_accumulating_saturating32_bit_unsigned_accelerated: NonDisposableHandle,
    pub integer_dot_product_accumulating_saturating32_bit_signed_accelerated: NonDisposableHandle,
    pub integer_dot_product_accumulating_saturating32_bit_mixed_signedness_accelerated:
        NonDisposableHandle,
    pub integer_dot_product_accumulating_saturating64_bit_unsigned_accelerated: NonDisposableHandle,
    pub integer_dot_product_accumulating_saturating64_bit_signed_accelerated: NonDisposableHandle,
    pub integer_dot_product_accumulating_saturating64_bit_mixed_signedness_accelerated:
        NonDisposableHandle,
    pub storage_texel_buffer_offset_alignment_bytes: NonDisposableHandle,
    pub storage_texel_buffer_offset_single_texel_alignment: NonDisposableHandle,
    pub uniform_texel_buffer_offset_alignment_bytes: NonDisposableHandle,
    pub uniform_texel_buffer_offset_single_texel_alignment: NonDisposableHandle,
    pub max_buffer_size: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineCompilerControlCreateInfoAMD.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineCompilerControlCreateInfoAMD {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub compiler_control_flags: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceCoherentMemoryFeaturesAMD.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceCoherentMemoryFeaturesAMD {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub device_coherent_memory: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceToolProperties.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceToolProperties {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub name: [c_char; vk::MAX_EXTENSION_NAME_SIZE],
    pub version: [c_char; vk::MAX_EXTENSION_NAME_SIZE],
    pub purposes: NonDisposableHandle,
    pub description: [c_char; vk::MAX_DESCRIPTION_SIZE],
    pub layer: [c_char; vk::MAX_EXTENSION_NAME_SIZE],
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSamplerCustomBorderColorCreateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSamplerCustomBorderColorCreateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub custom_border_color: VkClearColorValue,
    pub format: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceCustomBorderColorPropertiesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceCustomBorderColorPropertiesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub max_custom_border_color_samplers: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceCustomBorderColorFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceCustomBorderColorFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub custom_border_colors: NonDisposableHandle,
    pub custom_border_color_without_format: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSamplerBorderColorComponentMappingCreateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSamplerBorderColorComponentMappingCreateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub components: VkComponentMapping,
    pub srgb: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceBorderColorSwizzleFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceBorderColorSwizzleFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub border_color_swizzle: NonDisposableHandle,
    pub border_color_swizzle_from_image: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDeviceOrHostAddressKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDeviceOrHostAddressKHR {
    pub device_address: NonDisposableHandle,
    #[cdump(dynamic(serializer = unimplemented_serializer, deserializer = unimplemented_deserializer_mut))]
    pub host_address: *mut c_void,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDeviceOrHostAddressConstKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDeviceOrHostAddressConstKHR {
    pub device_address: NonDisposableHandle,
    #[cdump(dynamic(serializer = unimplemented_serializer, deserializer = unimplemented_deserializer))]
    pub host_address: *const c_void,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDeviceOrHostAddressConstAMDX.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDeviceOrHostAddressConstAMDX {
    pub device_address: NonDisposableHandle,
    #[cdump(dynamic(serializer = unimplemented_serializer, deserializer = unimplemented_deserializer))]
    pub host_address: *const c_void,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAccelerationStructureGeometryTrianglesDataKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAccelerationStructureGeometryTrianglesDataKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub vertex_format: NonDisposableHandle,
    pub vertex_data: VkDeviceOrHostAddressConstKHR,
    pub vertex_stride: NonDisposableHandle,
    pub max_vertex: u32,
    pub index_type: NonDisposableHandle,
    pub index_data: VkDeviceOrHostAddressConstKHR,
    pub transform_data: VkDeviceOrHostAddressConstKHR,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAccelerationStructureGeometryAabbsDataKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAccelerationStructureGeometryAabbsDataKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub data: VkDeviceOrHostAddressConstKHR,
    pub stride: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAccelerationStructureGeometryInstancesDataKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAccelerationStructureGeometryInstancesDataKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub array_of_pointers: NonDisposableHandle,
    pub data: VkDeviceOrHostAddressConstKHR,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAccelerationStructureGeometryDataKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAccelerationStructureGeometryDataKHR {
    pub triangles: VkAccelerationStructureGeometryTrianglesDataKHR,
    pub aabbs: VkAccelerationStructureGeometryAabbsDataKHR,
    pub instances: VkAccelerationStructureGeometryInstancesDataKHR,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAccelerationStructureGeometryKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAccelerationStructureGeometryKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub geometry_type: NonDisposableHandle,
    pub geometry: VkAccelerationStructureGeometryDataKHR,
    pub flags: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAccelerationStructureBuildGeometryInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAccelerationStructureBuildGeometryInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub type_: NonDisposableHandle,
    pub flags: NonDisposableHandle,
    pub mode: NonDisposableHandle,
    pub src_acceleration_structure: NonDisposableHandle,
    pub dst_acceleration_structure: NonDisposableHandle,
    pub geometry_count: u32,
    #[cdump(array(len = self.geometry_count))]
    pub p_geometries: *const VkAccelerationStructureGeometryKHR,
    #[cdump(array(len = self.geometry_count))]
    pub pp_geometries: *const *const VkAccelerationStructureGeometryKHR,
    pub scratch_data: VkDeviceOrHostAddressKHR,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAccelerationStructureBuildRangeInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAccelerationStructureBuildRangeInfoKHR {
    pub primitive_count: u32,
    pub primitive_offset: u32,
    pub first_vertex: u32,
    pub transform_offset: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAccelerationStructureCreateInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAccelerationStructureCreateInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub create_flags: NonDisposableHandle,
    pub buffer: NonDisposableHandle,
    pub offset: NonDisposableHandle,
    pub size: NonDisposableHandle,
    pub type_: NonDisposableHandle,
    pub device_address: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAabbPositionsKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAabbPositionsKHR {
    pub min_x: f32,
    pub min_y: f32,
    pub min_z: f32,
    pub max_x: f32,
    pub max_y: f32,
    pub max_z: f32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkTransformMatrixKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkTransformMatrixKHR {
    pub matrix: [f32; 3],
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAccelerationStructureInstanceKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAccelerationStructureInstanceKHR {
    pub transform: VkTransformMatrixKHR,
    pub instance_custom_index: u32,
    pub mask: u32,
    pub instance_shader_binding_table_record_offset: u32,
    pub flags: NonDisposableHandle,
    pub acceleration_structure_reference: u64,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAccelerationStructureDeviceAddressInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAccelerationStructureDeviceAddressInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub acceleration_structure: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAccelerationStructureVersionInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAccelerationStructureVersionInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    #[cdump(array(len = 2 * vk::UUID_SIZE))]
    pub p_version_data: *const u8,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkCopyAccelerationStructureInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkCopyAccelerationStructureInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub src: NonDisposableHandle,
    pub dst: NonDisposableHandle,
    pub mode: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkCopyAccelerationStructureToMemoryInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkCopyAccelerationStructureToMemoryInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub src: NonDisposableHandle,
    pub dst: VkDeviceOrHostAddressKHR,
    pub mode: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkCopyMemoryToAccelerationStructureInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkCopyMemoryToAccelerationStructureInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub src: VkDeviceOrHostAddressConstKHR,
    pub dst: NonDisposableHandle,
    pub mode: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkRayTracingPipelineInterfaceCreateInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkRayTracingPipelineInterfaceCreateInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub max_pipeline_ray_payload_size: u32,
    pub max_pipeline_ray_hit_attribute_size: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineLibraryCreateInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineLibraryCreateInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub library_count: u32,
    #[cdump(array(len = self.library_count))]
    pub p_libraries: *const NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceExtendedDynamicStateFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceExtendedDynamicStateFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub extended_dynamic_state: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceExtendedDynamicState2FeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceExtendedDynamicState2FeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub extended_dynamic_state2: NonDisposableHandle,
    pub extended_dynamic_state2_logic_op: NonDisposableHandle,
    pub extended_dynamic_state2_patch_control_points: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceExtendedDynamicState3FeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceExtendedDynamicState3FeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub extended_dynamic_state3_tessellation_domain_origin: NonDisposableHandle,
    pub extended_dynamic_state3_depth_clamp_enable: NonDisposableHandle,
    pub extended_dynamic_state3_polygon_mode: NonDisposableHandle,
    pub extended_dynamic_state3_rasterization_samples: NonDisposableHandle,
    pub extended_dynamic_state3_sample_mask: NonDisposableHandle,
    pub extended_dynamic_state3_alpha_to_coverage_enable: NonDisposableHandle,
    pub extended_dynamic_state3_alpha_to_one_enable: NonDisposableHandle,
    pub extended_dynamic_state3_logic_op_enable: NonDisposableHandle,
    pub extended_dynamic_state3_color_blend_enable: NonDisposableHandle,
    pub extended_dynamic_state3_color_blend_equation: NonDisposableHandle,
    pub extended_dynamic_state3_color_write_mask: NonDisposableHandle,
    pub extended_dynamic_state3_rasterization_stream: NonDisposableHandle,
    pub extended_dynamic_state3_conservative_rasterization_mode: NonDisposableHandle,
    pub extended_dynamic_state3_extra_primitive_overestimation_size: NonDisposableHandle,
    pub extended_dynamic_state3_depth_clip_enable: NonDisposableHandle,
    pub extended_dynamic_state3_sample_locations_enable: NonDisposableHandle,
    pub extended_dynamic_state3_color_blend_advanced: NonDisposableHandle,
    pub extended_dynamic_state3_provoking_vertex_mode: NonDisposableHandle,
    pub extended_dynamic_state3_line_rasterization_mode: NonDisposableHandle,
    pub extended_dynamic_state3_line_stipple_enable: NonDisposableHandle,
    pub extended_dynamic_state3_depth_clip_negative_one_to_one: NonDisposableHandle,
    pub extended_dynamic_state3_viewport_wscaling_enable: NonDisposableHandle,
    pub extended_dynamic_state3_viewport_swizzle: NonDisposableHandle,
    pub extended_dynamic_state3_coverage_to_color_enable: NonDisposableHandle,
    pub extended_dynamic_state3_coverage_to_color_location: NonDisposableHandle,
    pub extended_dynamic_state3_coverage_modulation_mode: NonDisposableHandle,
    pub extended_dynamic_state3_coverage_modulation_table_enable: NonDisposableHandle,
    pub extended_dynamic_state3_coverage_modulation_table: NonDisposableHandle,
    pub extended_dynamic_state3_coverage_reduction_mode: NonDisposableHandle,
    pub extended_dynamic_state3_representative_fragment_test_enable: NonDisposableHandle,
    pub extended_dynamic_state3_shading_rate_image_enable: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceExtendedDynamicState3PropertiesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceExtendedDynamicState3PropertiesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub dynamic_primitive_topology_unrestricted: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkColorBlendEquationEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkColorBlendEquationEXT {
    pub src_color_blend_factor: NonDisposableHandle,
    pub dst_color_blend_factor: NonDisposableHandle,
    pub color_blend_op: NonDisposableHandle,
    pub src_alpha_blend_factor: NonDisposableHandle,
    pub dst_alpha_blend_factor: NonDisposableHandle,
    pub alpha_blend_op: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkColorBlendAdvancedEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkColorBlendAdvancedEXT {
    pub advanced_blend_op: NonDisposableHandle,
    pub src_premultiplied: NonDisposableHandle,
    pub dst_premultiplied: NonDisposableHandle,
    pub blend_overlap: NonDisposableHandle,
    pub clamp_results: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkRenderPassTransformBeginInfoQCOM.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkRenderPassTransformBeginInfoQCOM {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub transform: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkCopyCommandTransformInfoQCOM.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkCopyCommandTransformInfoQCOM {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub transform: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkCommandBufferInheritanceRenderPassTransformInfoQCOM.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkCommandBufferInheritanceRenderPassTransformInfoQCOM {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub transform: NonDisposableHandle,
    pub render_area: VkRect2D,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceDiagnosticsConfigFeaturesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceDiagnosticsConfigFeaturesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub diagnostics_config: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDeviceDiagnosticsConfigCreateInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDeviceDiagnosticsConfigCreateInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shader_zero_initialize_workgroup_memory: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shader_subgroup_uniform_control_flow: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceRobustness2FeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceRobustness2FeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub robust_buffer_access2: NonDisposableHandle,
    pub robust_image_access2: NonDisposableHandle,
    pub null_descriptor: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceRobustness2PropertiesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceRobustness2PropertiesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub robust_storage_buffer_access_size_alignment: NonDisposableHandle,
    pub robust_uniform_buffer_access_size_alignment: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceImageRobustnessFeatures.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceImageRobustnessFeatures {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub robust_image_access: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub workgroup_memory_explicit_layout: NonDisposableHandle,
    pub workgroup_memory_explicit_layout_scalar_block_layout: NonDisposableHandle,
    pub workgroup_memory_explicit_layout8_bit_access: NonDisposableHandle,
    pub workgroup_memory_explicit_layout16_bit_access: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDevicePortabilitySubsetFeaturesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDevicePortabilitySubsetFeaturesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub constant_alpha_color_blend_factors: NonDisposableHandle,
    pub events: NonDisposableHandle,
    pub image_view_format_reinterpretation: NonDisposableHandle,
    pub image_view_format_swizzle: NonDisposableHandle,
    pub image_view2_don3_dimage: NonDisposableHandle,
    pub multisample_array_image: NonDisposableHandle,
    pub mutable_comparison_samplers: NonDisposableHandle,
    pub point_polygons: NonDisposableHandle,
    pub sampler_mip_lod_bias: NonDisposableHandle,
    pub separate_stencil_mask_ref: NonDisposableHandle,
    pub shader_sample_rate_interpolation_functions: NonDisposableHandle,
    pub tessellation_isolines: NonDisposableHandle,
    pub tessellation_point_mode: NonDisposableHandle,
    pub triangle_fans: NonDisposableHandle,
    pub vertex_attribute_access_beyond_stride: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDevicePortabilitySubsetPropertiesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDevicePortabilitySubsetPropertiesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub min_vertex_input_binding_stride_alignment: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDevice4444FormatsFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDevice4444FormatsFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub format_a4_r4_g4_b4: NonDisposableHandle,
    pub format_a4_b4_g4_r4: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceSubpassShadingFeaturesHUAWEI.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceSubpassShadingFeaturesHUAWEI {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub subpass_shading: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub clusterculling_shader: NonDisposableHandle,
    pub multiview_cluster_culling_shader: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceClusterCullingShaderVrsFeaturesHUAWEI.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceClusterCullingShaderVrsFeaturesHUAWEI {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub cluster_shading_rate: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBufferCopy2.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBufferCopy2 {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub src_offset: NonDisposableHandle,
    pub dst_offset: NonDisposableHandle,
    pub size: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImageCopy2.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImageCopy2 {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub src_subresource: VkImageSubresourceLayers,
    pub src_offset: VkOffset3D,
    pub dst_subresource: VkImageSubresourceLayers,
    pub dst_offset: VkOffset3D,
    pub extent: VkExtent3D,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImageBlit2.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImageBlit2 {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub src_subresource: VkImageSubresourceLayers,
    pub src_offsets: [VkOffset3D; 2],
    pub dst_subresource: VkImageSubresourceLayers,
    pub dst_offsets: [VkOffset3D; 2],
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBufferImageCopy2.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBufferImageCopy2 {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub buffer_offset: NonDisposableHandle,
    pub buffer_row_length: u32,
    pub buffer_image_height: u32,
    pub image_subresource: VkImageSubresourceLayers,
    pub image_offset: VkOffset3D,
    pub image_extent: VkExtent3D,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImageResolve2.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImageResolve2 {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub src_subresource: VkImageSubresourceLayers,
    pub src_offset: VkOffset3D,
    pub dst_subresource: VkImageSubresourceLayers,
    pub dst_offset: VkOffset3D,
    pub extent: VkExtent3D,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkCopyBufferInfo2.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkCopyBufferInfo2 {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub src_buffer: NonDisposableHandle,
    pub dst_buffer: NonDisposableHandle,
    pub region_count: u32,
    #[cdump(array(len = self.region_count))]
    pub p_regions: *const VkBufferCopy2,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkCopyImageInfo2.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkCopyImageInfo2 {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub src_image: NonDisposableHandle,
    pub src_image_layout: NonDisposableHandle,
    pub dst_image: NonDisposableHandle,
    pub dst_image_layout: NonDisposableHandle,
    pub region_count: u32,
    #[cdump(array(len = self.region_count))]
    pub p_regions: *const VkImageCopy2,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBlitImageInfo2.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBlitImageInfo2 {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub src_image: NonDisposableHandle,
    pub src_image_layout: NonDisposableHandle,
    pub dst_image: NonDisposableHandle,
    pub dst_image_layout: NonDisposableHandle,
    pub region_count: u32,
    #[cdump(array(len = self.region_count))]
    pub p_regions: *const VkImageBlit2,
    pub filter: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkCopyBufferToImageInfo2.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkCopyBufferToImageInfo2 {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub src_buffer: NonDisposableHandle,
    pub dst_image: NonDisposableHandle,
    pub dst_image_layout: NonDisposableHandle,
    pub region_count: u32,
    #[cdump(array(len = self.region_count))]
    pub p_regions: *const VkBufferImageCopy2,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkCopyImageToBufferInfo2.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkCopyImageToBufferInfo2 {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub src_image: NonDisposableHandle,
    pub src_image_layout: NonDisposableHandle,
    pub dst_buffer: NonDisposableHandle,
    pub region_count: u32,
    #[cdump(array(len = self.region_count))]
    pub p_regions: *const VkBufferImageCopy2,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkResolveImageInfo2.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkResolveImageInfo2 {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub src_image: NonDisposableHandle,
    pub src_image_layout: NonDisposableHandle,
    pub dst_image: NonDisposableHandle,
    pub dst_image_layout: NonDisposableHandle,
    pub region_count: u32,
    #[cdump(array(len = self.region_count))]
    pub p_regions: *const VkImageResolve2,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shader_image_int64_atomics: NonDisposableHandle,
    pub sparse_image_int64_atomics: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkFragmentShadingRateAttachmentInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkFragmentShadingRateAttachmentInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub p_fragment_shading_rate_attachment: *const VkAttachmentReference2,
    pub shading_rate_attachment_texel_size: VkExtent2D,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineFragmentShadingRateStateCreateInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineFragmentShadingRateStateCreateInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub fragment_size: VkExtent2D,
    pub combiner_ops: [NonDisposableHandle; 2],
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceFragmentShadingRateFeaturesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceFragmentShadingRateFeaturesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub pipeline_fragment_shading_rate: NonDisposableHandle,
    pub primitive_fragment_shading_rate: NonDisposableHandle,
    pub attachment_fragment_shading_rate: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceFragmentShadingRatePropertiesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceFragmentShadingRatePropertiesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub min_fragment_shading_rate_attachment_texel_size: VkExtent2D,
    pub max_fragment_shading_rate_attachment_texel_size: VkExtent2D,
    pub max_fragment_shading_rate_attachment_texel_size_aspect_ratio: u32,
    pub primitive_fragment_shading_rate_with_multiple_viewports: NonDisposableHandle,
    pub layered_shading_rate_attachments: NonDisposableHandle,
    pub fragment_shading_rate_non_trivial_combiner_ops: NonDisposableHandle,
    pub max_fragment_size: VkExtent2D,
    pub max_fragment_size_aspect_ratio: u32,
    pub max_fragment_shading_rate_coverage_samples: u32,
    pub max_fragment_shading_rate_rasterization_samples: vk::SampleCountFlags,
    pub fragment_shading_rate_with_shader_depth_stencil_writes: NonDisposableHandle,
    pub fragment_shading_rate_with_sample_mask: NonDisposableHandle,
    pub fragment_shading_rate_with_shader_sample_mask: NonDisposableHandle,
    pub fragment_shading_rate_with_conservative_rasterization: NonDisposableHandle,
    pub fragment_shading_rate_with_fragment_shader_interlock: NonDisposableHandle,
    pub fragment_shading_rate_with_custom_sample_locations: NonDisposableHandle,
    pub fragment_shading_rate_strict_multiply_combiner: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceFragmentShadingRateKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceFragmentShadingRateKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub sample_counts: NonDisposableHandle,
    pub fragment_size: VkExtent2D,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderTerminateInvocationFeatures.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceShaderTerminateInvocationFeatures {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shader_terminate_invocation: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub fragment_shading_rate_enums: NonDisposableHandle,
    pub supersample_fragment_shading_rates: NonDisposableHandle,
    pub no_invocation_fragment_shading_rates: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub max_fragment_shading_rate_invocation_count: vk::SampleCountFlags,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineFragmentShadingRateEnumStateCreateInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineFragmentShadingRateEnumStateCreateInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub shading_rate_type: NonDisposableHandle,
    pub shading_rate: NonDisposableHandle,
    pub combiner_ops: [NonDisposableHandle; 2],
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAccelerationStructureBuildSizesInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAccelerationStructureBuildSizesInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub acceleration_structure_size: NonDisposableHandle,
    pub update_scratch_size: NonDisposableHandle,
    pub build_scratch_size: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceImage2DViewOf3DFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceImage2DViewOf3DFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub image2_dview_of3_d: NonDisposableHandle,
    pub sampler2_dview_of3_d: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub image_sliced_view_of3_d: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub attachment_feedback_loop_dynamic_state: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub mutable_descriptor_type: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMutableDescriptorTypeListEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMutableDescriptorTypeListEXT {
    pub descriptor_type_count: u32,
    #[cdump(array(len = self.descriptor_type_count))]
    pub p_descriptor_types: *const NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMutableDescriptorTypeCreateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMutableDescriptorTypeCreateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub mutable_descriptor_type_list_count: u32,
    #[cdump(array(len = self.mutable_descriptor_type_list_count))]
    pub p_mutable_descriptor_type_lists: *const VkMutableDescriptorTypeListEXT,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceDepthClipControlFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceDepthClipControlFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub depth_clip_control: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineViewportDepthClipControlCreateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineViewportDepthClipControlCreateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub negative_one_to_one: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub vertex_input_dynamic_state: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceExternalMemoryRDMAFeaturesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceExternalMemoryRDMAFeaturesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub external_memory_rdma: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVertexInputBindingDescription2EXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVertexInputBindingDescription2EXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub binding: u32,
    pub stride: u32,
    pub input_rate: NonDisposableHandle,
    pub divisor: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVertexInputAttributeDescription2EXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVertexInputAttributeDescription2EXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub location: u32,
    pub binding: u32,
    pub format: NonDisposableHandle,
    pub offset: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceColorWriteEnableFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceColorWriteEnableFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub color_write_enable: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineColorWriteCreateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineColorWriteCreateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub attachment_count: u32,
    #[cdump(array(len = self.attachment_count))]
    pub p_color_write_enables: *const NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMemoryBarrier2.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMemoryBarrier2 {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub src_stage_mask: NonDisposableHandle,
    pub src_access_mask: NonDisposableHandle,
    pub dst_stage_mask: NonDisposableHandle,
    pub dst_access_mask: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImageMemoryBarrier2.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImageMemoryBarrier2 {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub src_stage_mask: NonDisposableHandle,
    pub src_access_mask: NonDisposableHandle,
    pub dst_stage_mask: NonDisposableHandle,
    pub dst_access_mask: NonDisposableHandle,
    pub old_layout: NonDisposableHandle,
    pub new_layout: NonDisposableHandle,
    pub src_queue_family_index: u32,
    pub dst_queue_family_index: u32,
    pub image: NonDisposableHandle,
    pub subresource_range: VkImageSubresourceRange,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBufferMemoryBarrier2.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBufferMemoryBarrier2 {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub src_stage_mask: NonDisposableHandle,
    pub src_access_mask: NonDisposableHandle,
    pub dst_stage_mask: NonDisposableHandle,
    pub dst_access_mask: NonDisposableHandle,
    pub src_queue_family_index: u32,
    pub dst_queue_family_index: u32,
    pub buffer: NonDisposableHandle,
    pub offset: NonDisposableHandle,
    pub size: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDependencyInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDependencyInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub dependency_flags: NonDisposableHandle,
    pub memory_barrier_count: u32,
    #[cdump(array(len = self.memory_barrier_count))]
    pub p_memory_barriers: *const VkMemoryBarrier2,
    pub buffer_memory_barrier_count: u32,
    #[cdump(array(len = self.buffer_memory_barrier_count))]
    pub p_buffer_memory_barriers: *const VkBufferMemoryBarrier2,
    pub image_memory_barrier_count: u32,
    #[cdump(array(len = self.image_memory_barrier_count))]
    pub p_image_memory_barriers: *const VkImageMemoryBarrier2,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSemaphoreSubmitInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSemaphoreSubmitInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub semaphore: NonDisposableHandle,
    pub value: u64,
    pub stage_mask: NonDisposableHandle,
    pub device_index: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkCommandBufferSubmitInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkCommandBufferSubmitInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub command_buffer: NonDisposableHandle,
    pub device_mask: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSubmitInfo2.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSubmitInfo2 {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub wait_semaphore_info_count: u32,
    #[cdump(array(len = self.wait_semaphore_info_count))]
    pub p_wait_semaphore_infos: *const VkSemaphoreSubmitInfo,
    pub command_buffer_info_count: u32,
    #[cdump(array(len = self.command_buffer_info_count))]
    pub p_command_buffer_infos: *const VkCommandBufferSubmitInfo,
    pub signal_semaphore_info_count: u32,
    #[cdump(array(len = self.signal_semaphore_info_count))]
    pub p_signal_semaphore_infos: *const VkSemaphoreSubmitInfo,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkQueueFamilyCheckpointProperties2NV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkQueueFamilyCheckpointProperties2NV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub checkpoint_execution_stage_mask: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkCheckpointData2NV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkCheckpointData2NV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub stage: NonDisposableHandle,
    #[cdump(dynamic(serializer = unimplemented_serializer, deserializer = unimplemented_deserializer_mut))]
    pub p_checkpoint_marker: *mut c_void,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceSynchronization2Features.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceSynchronization2Features {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub synchronization2: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceHostImageCopyFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceHostImageCopyFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub host_image_copy: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceHostImageCopyPropertiesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceHostImageCopyPropertiesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub copy_src_layout_count: u32,
    #[cdump(array(len = self.copy_src_layout_count))]
    pub p_copy_src_layouts: *mut NonDisposableHandle,
    pub copy_dst_layout_count: u32,
    #[cdump(array(len = self.copy_dst_layout_count))]
    pub p_copy_dst_layouts: *mut NonDisposableHandle,
    pub optimal_tiling_layout_uuid: [u8; vk::UUID_SIZE],
    pub identical_memory_type_requirements: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMemoryToImageCopyEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMemoryToImageCopyEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    #[cdump(dynamic(serializer = unimplemented_serializer, deserializer = unimplemented_deserializer))]
    pub p_host_pointer: *const c_void,
    pub memory_row_length: u32,
    pub memory_image_height: u32,
    pub image_subresource: VkImageSubresourceLayers,
    pub image_offset: VkOffset3D,
    pub image_extent: VkExtent3D,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImageToMemoryCopyEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImageToMemoryCopyEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    #[cdump(dynamic(serializer = unimplemented_serializer, deserializer = unimplemented_deserializer_mut))]
    pub p_host_pointer: *mut c_void,
    pub memory_row_length: u32,
    pub memory_image_height: u32,
    pub image_subresource: VkImageSubresourceLayers,
    pub image_offset: VkOffset3D,
    pub image_extent: VkExtent3D,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkCopyMemoryToImageInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkCopyMemoryToImageInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub dst_image: NonDisposableHandle,
    pub dst_image_layout: NonDisposableHandle,
    pub region_count: u32,
    #[cdump(array(len = self.region_count))]
    pub p_regions: *const VkMemoryToImageCopyEXT,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkCopyImageToMemoryInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkCopyImageToMemoryInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub src_image: NonDisposableHandle,
    pub src_image_layout: NonDisposableHandle,
    pub region_count: u32,
    #[cdump(array(len = self.region_count))]
    pub p_regions: *const VkImageToMemoryCopyEXT,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkCopyImageToImageInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkCopyImageToImageInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub src_image: NonDisposableHandle,
    pub src_image_layout: NonDisposableHandle,
    pub dst_image: NonDisposableHandle,
    pub dst_image_layout: NonDisposableHandle,
    pub region_count: u32,
    #[cdump(array(len = self.region_count))]
    pub p_regions: *const VkImageCopy2,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkHostImageLayoutTransitionInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkHostImageLayoutTransitionInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub image: NonDisposableHandle,
    pub old_layout: NonDisposableHandle,
    pub new_layout: NonDisposableHandle,
    pub subresource_range: VkImageSubresourceRange,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSubresourceHostMemcpySizeEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSubresourceHostMemcpySizeEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub size: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkHostImageCopyDevicePerformanceQueryEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkHostImageCopyDevicePerformanceQueryEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub optimal_device_access: NonDisposableHandle,
    pub identical_memory_layout: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub primitives_generated_query: NonDisposableHandle,
    pub primitives_generated_query_with_rasterizer_discard: NonDisposableHandle,
    pub primitives_generated_query_with_non_zero_streams: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceLegacyDitheringFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceLegacyDitheringFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub legacy_dithering: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub multisampled_render_to_single_sampled: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSubpassResolvePerformanceQueryEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSubpassResolvePerformanceQueryEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub optimal: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMultisampledRenderToSingleSampledInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMultisampledRenderToSingleSampledInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub multisampled_render_to_single_sampled_enable: NonDisposableHandle,
    pub rasterization_samples: vk::SampleCountFlags,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDevicePipelineProtectedAccessFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDevicePipelineProtectedAccessFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub pipeline_protected_access: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkQueueFamilyVideoPropertiesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkQueueFamilyVideoPropertiesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub video_codec_operations: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkQueueFamilyQueryResultStatusPropertiesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkQueueFamilyQueryResultStatusPropertiesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub query_result_status_support: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoProfileListInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoProfileListInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub profile_count: u32,
    #[cdump(array(len = self.profile_count))]
    pub p_profiles: *const VkVideoProfileInfoKHR,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceVideoFormatInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceVideoFormatInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub image_usage: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoFormatPropertiesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoFormatPropertiesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub format: NonDisposableHandle,
    pub component_mapping: VkComponentMapping,
    pub image_create_flags: NonDisposableHandle,
    pub image_type: NonDisposableHandle,
    pub image_tiling: NonDisposableHandle,
    pub image_usage_flags: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoProfileInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoProfileInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub video_codec_operation: NonDisposableHandle,
    pub chroma_subsampling: NonDisposableHandle,
    pub luma_bit_depth: NonDisposableHandle,
    pub chroma_bit_depth: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoCapabilitiesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoCapabilitiesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub flags: NonDisposableHandle,
    pub min_bitstream_buffer_offset_alignment: NonDisposableHandle,
    pub min_bitstream_buffer_size_alignment: NonDisposableHandle,
    pub picture_access_granularity: VkExtent2D,
    pub min_coded_extent: VkExtent2D,
    pub max_coded_extent: VkExtent2D,
    pub max_dpb_slots: u32,
    pub max_active_reference_pictures: u32,
    pub std_header_version: VkExtensionProperties,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoSessionMemoryRequirementsKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoSessionMemoryRequirementsKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub memory_bind_index: u32,
    pub memory_requirements: VkMemoryRequirements,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBindVideoSessionMemoryInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBindVideoSessionMemoryInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub memory_bind_index: u32,
    pub memory: NonDisposableHandle,
    pub memory_offset: NonDisposableHandle,
    pub memory_size: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoPictureResourceInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoPictureResourceInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub coded_offset: VkOffset2D,
    pub coded_extent: VkExtent2D,
    pub base_array_layer: u32,
    pub image_view_binding: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoReferenceSlotInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoReferenceSlotInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub slot_index: i32,
    pub p_picture_resource: *const VkVideoPictureResourceInfoKHR,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoDecodeCapabilitiesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoDecodeCapabilitiesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub flags: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoDecodeUsageInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoDecodeUsageInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub video_usage_hints: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoDecodeInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoDecodeInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub src_buffer: NonDisposableHandle,
    pub src_buffer_offset: NonDisposableHandle,
    pub src_buffer_range: NonDisposableHandle,
    pub dst_picture_resource: VkVideoPictureResourceInfoKHR,
    pub p_setup_reference_slot: *const VkVideoReferenceSlotInfoKHR,
    pub reference_slot_count: u32,
    #[cdump(array(len = self.reference_slot_count))]
    pub p_reference_slots: *const VkVideoReferenceSlotInfoKHR,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceVideoMaintenance1FeaturesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceVideoMaintenance1FeaturesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub video_maintenance1: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoInlineQueryInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoInlineQueryInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub query_pool: NonDisposableHandle,
    pub first_query: u32,
    pub query_count: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoDecodeH264ProfileInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoDecodeH264ProfileInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub std_profile_idc: vk::native::StdVideoH264ProfileIdc,
    pub picture_layout: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoDecodeH264CapabilitiesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoDecodeH264CapabilitiesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub max_level_idc: vk::native::StdVideoH264LevelIdc,
    pub field_offset_granularity: VkOffset2D,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoDecodeH264SessionParametersAddInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoDecodeH264SessionParametersAddInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub std_spscount: u32,
    #[cdump(array(len = self.std_spscount))]
    pub p_std_spss: *const StdVideoH264SequenceParameterSet,
    pub std_ppscount: u32,
    #[cdump(array(len = self.std_ppscount))]
    pub p_std_ppss: *const StdVideoH264PictureParameterSet,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoDecodeH264SessionParametersCreateInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoDecodeH264SessionParametersCreateInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub max_std_spscount: u32,
    pub max_std_ppscount: u32,
    pub p_parameters_add_info: *const VkVideoDecodeH264SessionParametersAddInfoKHR,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoDecodeH264PictureInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoDecodeH264PictureInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub p_std_picture_info: *const StdVideoDecodeH264PictureInfo,
    pub slice_count: u32,
    #[cdump(array(len = self.slice_count))]
    pub p_slice_offsets: *const u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoDecodeH264DpbSlotInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoDecodeH264DpbSlotInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub p_std_reference_info: *const StdVideoDecodeH264ReferenceInfo,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoDecodeH265ProfileInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoDecodeH265ProfileInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub std_profile_idc: vk::native::StdVideoH265ProfileIdc,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoDecodeH265CapabilitiesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoDecodeH265CapabilitiesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub max_level_idc: vk::native::StdVideoH265LevelIdc,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoDecodeH265SessionParametersAddInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoDecodeH265SessionParametersAddInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub std_vpscount: u32,
    #[cdump(array(len = self.std_vpscount))]
    pub p_std_vpss: *const StdVideoH265VideoParameterSet,
    pub std_spscount: u32,
    #[cdump(array(len = self.std_spscount))]
    pub p_std_spss: *const StdVideoH265SequenceParameterSet,
    pub std_ppscount: u32,
    #[cdump(array(len = self.std_ppscount))]
    pub p_std_ppss: *const StdVideoH265PictureParameterSet,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoDecodeH265SessionParametersCreateInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoDecodeH265SessionParametersCreateInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub max_std_vpscount: u32,
    pub max_std_spscount: u32,
    pub max_std_ppscount: u32,
    pub p_parameters_add_info: *const VkVideoDecodeH265SessionParametersAddInfoKHR,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoDecodeH265PictureInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoDecodeH265PictureInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub p_std_picture_info: *const StdVideoDecodeH265PictureInfo,
    pub slice_segment_count: u32,
    #[cdump(array(len = self.slice_segment_count))]
    pub p_slice_segment_offsets: *const u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoDecodeH265DpbSlotInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoDecodeH265DpbSlotInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub p_std_reference_info: *const StdVideoDecodeH265ReferenceInfo,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoDecodeAV1ProfileInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoDecodeAV1ProfileInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub std_profile: vk::native::StdVideoAV1Profile,
    pub film_grain_support: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoDecodeAV1CapabilitiesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoDecodeAV1CapabilitiesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub max_level: vk::native::StdVideoAV1Level,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoDecodeAV1SessionParametersCreateInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoDecodeAV1SessionParametersCreateInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub p_std_sequence_header: *const StdVideoAV1SequenceHeader,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoDecodeAV1PictureInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoDecodeAV1PictureInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub p_std_picture_info: *const StdVideoDecodeAV1PictureInfo,
    pub reference_name_slot_indices: [i32; vk::MAX_VIDEO_AV1_REFERENCES_PER_FRAME_KHR],
    pub frame_header_offset: u32,
    pub tile_count: u32,
    #[cdump(array(len = self.tile_count))]
    pub p_tile_offsets: *const u32,
    #[cdump(array(len = self.tile_count))]
    pub p_tile_sizes: *const u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoDecodeAV1DpbSlotInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoDecodeAV1DpbSlotInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub p_std_reference_info: *const StdVideoDecodeAV1ReferenceInfo,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoSessionCreateInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoSessionCreateInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub queue_family_index: u32,
    pub flags: NonDisposableHandle,
    pub p_video_profile: *const VkVideoProfileInfoKHR,
    pub picture_format: NonDisposableHandle,
    pub max_coded_extent: VkExtent2D,
    pub reference_picture_format: NonDisposableHandle,
    pub max_dpb_slots: u32,
    pub max_active_reference_pictures: u32,
    pub p_std_header_version: *const VkExtensionProperties,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoSessionParametersCreateInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoSessionParametersCreateInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub video_session_parameters_template: NonDisposableHandle,
    pub video_session: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoSessionParametersUpdateInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoSessionParametersUpdateInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub update_sequence_count: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeSessionParametersGetInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeSessionParametersGetInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub video_session_parameters: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeSessionParametersFeedbackInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeSessionParametersFeedbackInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub has_overrides: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoBeginCodingInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoBeginCodingInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub video_session: NonDisposableHandle,
    pub video_session_parameters: NonDisposableHandle,
    pub reference_slot_count: u32,
    #[cdump(array(len = self.reference_slot_count))]
    pub p_reference_slots: *const VkVideoReferenceSlotInfoKHR,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEndCodingInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEndCodingInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoCodingControlInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoCodingControlInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeUsageInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeUsageInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub video_usage_hints: NonDisposableHandle,
    pub video_content_hints: NonDisposableHandle,
    pub tuning_mode: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub dst_buffer: NonDisposableHandle,
    pub dst_buffer_offset: NonDisposableHandle,
    pub dst_buffer_range: NonDisposableHandle,
    pub src_picture_resource: VkVideoPictureResourceInfoKHR,
    pub p_setup_reference_slot: *const VkVideoReferenceSlotInfoKHR,
    pub reference_slot_count: u32,
    #[cdump(array(len = self.reference_slot_count))]
    pub p_reference_slots: *const VkVideoReferenceSlotInfoKHR,
    pub preceding_externally_encoded_bytes: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkQueryPoolVideoEncodeFeedbackCreateInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkQueryPoolVideoEncodeFeedbackCreateInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub encode_feedback_flags: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeQualityLevelInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeQualityLevelInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub quality_level: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceVideoEncodeQualityLevelInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceVideoEncodeQualityLevelInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub p_video_profile: *const VkVideoProfileInfoKHR,
    pub quality_level: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeQualityLevelPropertiesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeQualityLevelPropertiesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub preferred_rate_control_mode: NonDisposableHandle,
    pub preferred_rate_control_layer_count: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeRateControlInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeRateControlInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub rate_control_mode: NonDisposableHandle,
    pub layer_count: u32,
    #[cdump(array(len = self.layer_count))]
    pub p_layers: *const VkVideoEncodeRateControlLayerInfoKHR,
    pub virtual_buffer_size_in_ms: u32,
    pub initial_virtual_buffer_size_in_ms: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeRateControlLayerInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeRateControlLayerInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub average_bitrate: u64,
    pub max_bitrate: u64,
    pub frame_rate_numerator: u32,
    pub frame_rate_denominator: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeCapabilitiesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeCapabilitiesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub flags: NonDisposableHandle,
    pub rate_control_modes: NonDisposableHandle,
    pub max_rate_control_layers: u32,
    pub max_bitrate: u64,
    pub max_quality_levels: u32,
    pub encode_input_picture_granularity: VkExtent2D,
    pub supported_encode_feedback_flags: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeH264CapabilitiesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeH264CapabilitiesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub flags: NonDisposableHandle,
    pub max_level_idc: vk::native::StdVideoH264LevelIdc,
    pub max_slice_count: u32,
    pub max_ppicture_l0_reference_count: u32,
    pub max_bpicture_l0_reference_count: u32,
    pub max_l1_reference_count: u32,
    pub max_temporal_layer_count: u32,
    pub expect_dyadic_temporal_layer_pattern: NonDisposableHandle,
    pub min_qp: i32,
    pub max_qp: i32,
    pub prefers_gop_remaining_frames: NonDisposableHandle,
    pub requires_gop_remaining_frames: NonDisposableHandle,
    pub std_syntax_flags: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeH264QualityLevelPropertiesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeH264QualityLevelPropertiesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub preferred_rate_control_flags: NonDisposableHandle,
    pub preferred_gop_frame_count: u32,
    pub preferred_idr_period: u32,
    pub preferred_consecutive_bframe_count: u32,
    pub preferred_temporal_layer_count: u32,
    pub preferred_constant_qp: VkVideoEncodeH264QpKHR,
    pub preferred_max_l0_reference_count: u32,
    pub preferred_max_l1_reference_count: u32,
    pub preferred_std_entropy_coding_mode_flag: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeH264SessionCreateInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeH264SessionCreateInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub use_max_level_idc: NonDisposableHandle,
    pub max_level_idc: vk::native::StdVideoH264LevelIdc,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeH264SessionParametersAddInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeH264SessionParametersAddInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub std_spscount: u32,
    #[cdump(array(len = self.std_spscount))]
    pub p_std_spss: *const StdVideoH264SequenceParameterSet,
    pub std_ppscount: u32,
    #[cdump(array(len = self.std_ppscount))]
    pub p_std_ppss: *const StdVideoH264PictureParameterSet,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeH264SessionParametersCreateInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeH264SessionParametersCreateInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub max_std_spscount: u32,
    pub max_std_ppscount: u32,
    pub p_parameters_add_info: *const VkVideoEncodeH264SessionParametersAddInfoKHR,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeH264SessionParametersGetInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeH264SessionParametersGetInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub write_std_sps: NonDisposableHandle,
    pub write_std_pps: NonDisposableHandle,
    pub std_spsid: u32,
    pub std_ppsid: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeH264SessionParametersFeedbackInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeH264SessionParametersFeedbackInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub has_std_spsoverrides: NonDisposableHandle,
    pub has_std_ppsoverrides: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeH264DpbSlotInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeH264DpbSlotInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub p_std_reference_info: *const StdVideoEncodeH264ReferenceInfo,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeH264PictureInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeH264PictureInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub nalu_slice_entry_count: u32,
    #[cdump(array(len = self.nalu_slice_entry_count))]
    pub p_nalu_slice_entries: *const VkVideoEncodeH264NaluSliceInfoKHR,
    pub p_std_picture_info: *const StdVideoEncodeH264PictureInfo,
    pub generate_prefix_nalu: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeH264ProfileInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeH264ProfileInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub std_profile_idc: vk::native::StdVideoH264ProfileIdc,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeH264NaluSliceInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeH264NaluSliceInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub constant_qp: i32,
    pub p_std_slice_header: *const StdVideoEncodeH264SliceHeader,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeH264RateControlInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeH264RateControlInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub gop_frame_count: u32,
    pub idr_period: u32,
    pub consecutive_bframe_count: u32,
    pub temporal_layer_count: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeH264QpKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeH264QpKHR {
    pub qp_i: i32,
    pub qp_p: i32,
    pub qp_b: i32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeH264FrameSizeKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeH264FrameSizeKHR {
    pub frame_isize: u32,
    pub frame_psize: u32,
    pub frame_bsize: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeH264GopRemainingFrameInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeH264GopRemainingFrameInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub use_gop_remaining_frames: NonDisposableHandle,
    pub gop_remaining_i: u32,
    pub gop_remaining_p: u32,
    pub gop_remaining_b: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeH264RateControlLayerInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeH264RateControlLayerInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub use_min_qp: NonDisposableHandle,
    pub min_qp: VkVideoEncodeH264QpKHR,
    pub use_max_qp: NonDisposableHandle,
    pub max_qp: VkVideoEncodeH264QpKHR,
    pub use_max_frame_size: NonDisposableHandle,
    pub max_frame_size: VkVideoEncodeH264FrameSizeKHR,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeH265CapabilitiesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeH265CapabilitiesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub flags: NonDisposableHandle,
    pub max_level_idc: vk::native::StdVideoH265LevelIdc,
    pub max_slice_segment_count: u32,
    pub max_tiles: VkExtent2D,
    pub ctb_sizes: NonDisposableHandle,
    pub transform_block_sizes: NonDisposableHandle,
    pub max_ppicture_l0_reference_count: u32,
    pub max_bpicture_l0_reference_count: u32,
    pub max_l1_reference_count: u32,
    pub max_sub_layer_count: u32,
    pub expect_dyadic_temporal_sub_layer_pattern: NonDisposableHandle,
    pub min_qp: i32,
    pub max_qp: i32,
    pub prefers_gop_remaining_frames: NonDisposableHandle,
    pub requires_gop_remaining_frames: NonDisposableHandle,
    pub std_syntax_flags: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeH265QualityLevelPropertiesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeH265QualityLevelPropertiesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub preferred_rate_control_flags: NonDisposableHandle,
    pub preferred_gop_frame_count: u32,
    pub preferred_idr_period: u32,
    pub preferred_consecutive_bframe_count: u32,
    pub preferred_sub_layer_count: u32,
    pub preferred_constant_qp: VkVideoEncodeH265QpKHR,
    pub preferred_max_l0_reference_count: u32,
    pub preferred_max_l1_reference_count: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeH265SessionCreateInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeH265SessionCreateInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub use_max_level_idc: NonDisposableHandle,
    pub max_level_idc: vk::native::StdVideoH265LevelIdc,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeH265SessionParametersAddInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeH265SessionParametersAddInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub std_vpscount: u32,
    #[cdump(array(len = self.std_vpscount))]
    pub p_std_vpss: *const StdVideoH265VideoParameterSet,
    pub std_spscount: u32,
    #[cdump(array(len = self.std_spscount))]
    pub p_std_spss: *const StdVideoH265SequenceParameterSet,
    pub std_ppscount: u32,
    #[cdump(array(len = self.std_ppscount))]
    pub p_std_ppss: *const StdVideoH265PictureParameterSet,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeH265SessionParametersCreateInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeH265SessionParametersCreateInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub max_std_vpscount: u32,
    pub max_std_spscount: u32,
    pub max_std_ppscount: u32,
    pub p_parameters_add_info: *const VkVideoEncodeH265SessionParametersAddInfoKHR,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeH265SessionParametersGetInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeH265SessionParametersGetInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub write_std_vps: NonDisposableHandle,
    pub write_std_sps: NonDisposableHandle,
    pub write_std_pps: NonDisposableHandle,
    pub std_vpsid: u32,
    pub std_spsid: u32,
    pub std_ppsid: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeH265SessionParametersFeedbackInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeH265SessionParametersFeedbackInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub has_std_vpsoverrides: NonDisposableHandle,
    pub has_std_spsoverrides: NonDisposableHandle,
    pub has_std_ppsoverrides: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeH265PictureInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeH265PictureInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub nalu_slice_segment_entry_count: u32,
    #[cdump(array(len = self.nalu_slice_segment_entry_count))]
    pub p_nalu_slice_segment_entries: *const VkVideoEncodeH265NaluSliceSegmentInfoKHR,
    pub p_std_picture_info: *const StdVideoEncodeH265PictureInfo,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeH265NaluSliceSegmentInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeH265NaluSliceSegmentInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub constant_qp: i32,
    pub p_std_slice_segment_header: *const StdVideoEncodeH265SliceSegmentHeader,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeH265RateControlInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeH265RateControlInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub gop_frame_count: u32,
    pub idr_period: u32,
    pub consecutive_bframe_count: u32,
    pub sub_layer_count: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeH265QpKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeH265QpKHR {
    pub qp_i: i32,
    pub qp_p: i32,
    pub qp_b: i32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeH265FrameSizeKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeH265FrameSizeKHR {
    pub frame_isize: u32,
    pub frame_psize: u32,
    pub frame_bsize: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeH265GopRemainingFrameInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeH265GopRemainingFrameInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub use_gop_remaining_frames: NonDisposableHandle,
    pub gop_remaining_i: u32,
    pub gop_remaining_p: u32,
    pub gop_remaining_b: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeH265RateControlLayerInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeH265RateControlLayerInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub use_min_qp: NonDisposableHandle,
    pub min_qp: VkVideoEncodeH265QpKHR,
    pub use_max_qp: NonDisposableHandle,
    pub max_qp: VkVideoEncodeH265QpKHR,
    pub use_max_frame_size: NonDisposableHandle,
    pub max_frame_size: VkVideoEncodeH265FrameSizeKHR,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeH265ProfileInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeH265ProfileInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub std_profile_idc: vk::native::StdVideoH265ProfileIdc,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkVideoEncodeH265DpbSlotInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkVideoEncodeH265DpbSlotInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub p_std_reference_info: *const StdVideoEncodeH265ReferenceInfo,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceInheritedViewportScissorFeaturesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceInheritedViewportScissorFeaturesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub inherited_viewport_scissor2_d: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkCommandBufferInheritanceViewportScissorInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkCommandBufferInheritanceViewportScissorInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub viewport_scissor2_d: NonDisposableHandle,
    pub viewport_depth_count: u32,
    pub p_viewport_depths: *const VkViewport,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub ycbcr2plane444_formats: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceProvokingVertexFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceProvokingVertexFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub provoking_vertex_last: NonDisposableHandle,
    pub transform_feedback_preserves_provoking_vertex: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceProvokingVertexPropertiesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceProvokingVertexPropertiesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub provoking_vertex_mode_per_pipeline: NonDisposableHandle,
    pub transform_feedback_preserves_triangle_fan_provoking_vertex: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineRasterizationProvokingVertexStateCreateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineRasterizationProvokingVertexStateCreateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub provoking_vertex_mode: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkCuModuleCreateInfoNVX.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkCuModuleCreateInfoNVX {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub data_size: usize,
    #[cdump(array(len = self.data_size))]
    pub p_data: *const u8,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkCuFunctionCreateInfoNVX.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkCuFunctionCreateInfoNVX {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub module: NonDisposableHandle,
    pub p_name: *const c_char,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkCuLaunchInfoNVX.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkCuLaunchInfoNVX {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub function: NonDisposableHandle,
    pub grid_dim_x: u32,
    pub grid_dim_y: u32,
    pub grid_dim_z: u32,
    pub block_dim_x: u32,
    pub block_dim_y: u32,
    pub block_dim_z: u32,
    pub shared_mem_bytes: u32,
    pub param_count: usize,
    #[cdump(array(len = self.param_count))]
    #[cdump(dynamic(serializer = unimplemented_serializer, deserializer = unimplemented_deserializer))]
    pub p_params: *const *const c_void,
    pub extra_count: usize,
    #[cdump(array(len = self.extra_count))]
    #[cdump(dynamic(serializer = unimplemented_serializer, deserializer = unimplemented_deserializer))]
    pub p_extras: *const *const c_void,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceDescriptorBufferFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceDescriptorBufferFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub descriptor_buffer: NonDisposableHandle,
    pub descriptor_buffer_capture_replay: NonDisposableHandle,
    pub descriptor_buffer_image_layout_ignored: NonDisposableHandle,
    pub descriptor_buffer_push_descriptors: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceDescriptorBufferPropertiesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceDescriptorBufferPropertiesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub combined_image_sampler_descriptor_single_array: NonDisposableHandle,
    pub bufferless_push_descriptors: NonDisposableHandle,
    pub allow_sampler_image_view_post_submit_creation: NonDisposableHandle,
    pub descriptor_buffer_offset_alignment: NonDisposableHandle,
    pub max_descriptor_buffer_bindings: u32,
    pub max_resource_descriptor_buffer_bindings: u32,
    pub max_sampler_descriptor_buffer_bindings: u32,
    pub max_embedded_immutable_sampler_bindings: u32,
    pub max_embedded_immutable_samplers: u32,
    pub buffer_capture_replay_descriptor_data_size: usize,
    pub image_capture_replay_descriptor_data_size: usize,
    pub image_view_capture_replay_descriptor_data_size: usize,
    pub sampler_capture_replay_descriptor_data_size: usize,
    pub acceleration_structure_capture_replay_descriptor_data_size: usize,
    pub sampler_descriptor_size: usize,
    pub combined_image_sampler_descriptor_size: usize,
    pub sampled_image_descriptor_size: usize,
    pub storage_image_descriptor_size: usize,
    pub uniform_texel_buffer_descriptor_size: usize,
    pub robust_uniform_texel_buffer_descriptor_size: usize,
    pub storage_texel_buffer_descriptor_size: usize,
    pub robust_storage_texel_buffer_descriptor_size: usize,
    pub uniform_buffer_descriptor_size: usize,
    pub robust_uniform_buffer_descriptor_size: usize,
    pub storage_buffer_descriptor_size: usize,
    pub robust_storage_buffer_descriptor_size: usize,
    pub input_attachment_descriptor_size: usize,
    pub acceleration_structure_descriptor_size: usize,
    pub max_sampler_descriptor_buffer_range: NonDisposableHandle,
    pub max_resource_descriptor_buffer_range: NonDisposableHandle,
    pub sampler_descriptor_buffer_address_space_size: NonDisposableHandle,
    pub resource_descriptor_buffer_address_space_size: NonDisposableHandle,
    pub descriptor_buffer_address_space_size: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub combined_image_sampler_density_map_descriptor_size: usize,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDescriptorAddressInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDescriptorAddressInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub address: NonDisposableHandle,
    pub range: NonDisposableHandle,
    pub format: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDescriptorBufferBindingInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDescriptorBufferBindingInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub address: NonDisposableHandle,
    pub usage: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDescriptorBufferBindingPushDescriptorBufferHandleEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDescriptorBufferBindingPushDescriptorBufferHandleEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub buffer: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDescriptorDataEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDescriptorDataEXT {
    pub p_sampler: *const NonDisposableHandle,
    pub p_combined_image_sampler: *const VkDescriptorImageInfo,
    pub p_input_attachment_image: *const VkDescriptorImageInfo,
    pub p_sampled_image: *const VkDescriptorImageInfo,
    pub p_storage_image: *const VkDescriptorImageInfo,
    pub p_uniform_texel_buffer: *const VkDescriptorAddressInfoEXT,
    pub p_storage_texel_buffer: *const VkDescriptorAddressInfoEXT,
    pub p_uniform_buffer: *const VkDescriptorAddressInfoEXT,
    pub p_storage_buffer: *const VkDescriptorAddressInfoEXT,
    pub acceleration_structure: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDescriptorGetInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDescriptorGetInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub type_: NonDisposableHandle,
    pub data: VkDescriptorDataEXT,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBufferCaptureDescriptorDataInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBufferCaptureDescriptorDataInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub buffer: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImageCaptureDescriptorDataInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImageCaptureDescriptorDataInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub image: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImageViewCaptureDescriptorDataInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImageViewCaptureDescriptorDataInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub image_view: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSamplerCaptureDescriptorDataInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSamplerCaptureDescriptorDataInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub sampler: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAccelerationStructureCaptureDescriptorDataInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAccelerationStructureCaptureDescriptorDataInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub acceleration_structure: NonDisposableHandle,
    pub acceleration_structure_nv: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkOpaqueCaptureDescriptorDataCreateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkOpaqueCaptureDescriptorDataCreateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    #[cdump(dynamic(serializer = unimplemented_serializer, deserializer = unimplemented_deserializer))]
    pub opaque_capture_descriptor_data: *const c_void,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderIntegerDotProductFeatures.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceShaderIntegerDotProductFeatures {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shader_integer_dot_product: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderIntegerDotProductProperties.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceShaderIntegerDotProductProperties {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub integer_dot_product8_bit_unsigned_accelerated: NonDisposableHandle,
    pub integer_dot_product8_bit_signed_accelerated: NonDisposableHandle,
    pub integer_dot_product8_bit_mixed_signedness_accelerated: NonDisposableHandle,
    pub integer_dot_product4x8_bit_packed_unsigned_accelerated: NonDisposableHandle,
    pub integer_dot_product4x8_bit_packed_signed_accelerated: NonDisposableHandle,
    pub integer_dot_product4x8_bit_packed_mixed_signedness_accelerated: NonDisposableHandle,
    pub integer_dot_product16_bit_unsigned_accelerated: NonDisposableHandle,
    pub integer_dot_product16_bit_signed_accelerated: NonDisposableHandle,
    pub integer_dot_product16_bit_mixed_signedness_accelerated: NonDisposableHandle,
    pub integer_dot_product32_bit_unsigned_accelerated: NonDisposableHandle,
    pub integer_dot_product32_bit_signed_accelerated: NonDisposableHandle,
    pub integer_dot_product32_bit_mixed_signedness_accelerated: NonDisposableHandle,
    pub integer_dot_product64_bit_unsigned_accelerated: NonDisposableHandle,
    pub integer_dot_product64_bit_signed_accelerated: NonDisposableHandle,
    pub integer_dot_product64_bit_mixed_signedness_accelerated: NonDisposableHandle,
    pub integer_dot_product_accumulating_saturating8_bit_unsigned_accelerated: NonDisposableHandle,
    pub integer_dot_product_accumulating_saturating8_bit_signed_accelerated: NonDisposableHandle,
    pub integer_dot_product_accumulating_saturating8_bit_mixed_signedness_accelerated:
        NonDisposableHandle,
    pub integer_dot_product_accumulating_saturating4x8_bit_packed_unsigned_accelerated:
        NonDisposableHandle,
    pub integer_dot_product_accumulating_saturating4x8_bit_packed_signed_accelerated:
        NonDisposableHandle,
    pub integer_dot_product_accumulating_saturating4x8_bit_packed_mixed_signedness_accelerated:
        NonDisposableHandle,
    pub integer_dot_product_accumulating_saturating16_bit_unsigned_accelerated: NonDisposableHandle,
    pub integer_dot_product_accumulating_saturating16_bit_signed_accelerated: NonDisposableHandle,
    pub integer_dot_product_accumulating_saturating16_bit_mixed_signedness_accelerated:
        NonDisposableHandle,
    pub integer_dot_product_accumulating_saturating32_bit_unsigned_accelerated: NonDisposableHandle,
    pub integer_dot_product_accumulating_saturating32_bit_signed_accelerated: NonDisposableHandle,
    pub integer_dot_product_accumulating_saturating32_bit_mixed_signedness_accelerated:
        NonDisposableHandle,
    pub integer_dot_product_accumulating_saturating64_bit_unsigned_accelerated: NonDisposableHandle,
    pub integer_dot_product_accumulating_saturating64_bit_signed_accelerated: NonDisposableHandle,
    pub integer_dot_product_accumulating_saturating64_bit_mixed_signedness_accelerated:
        NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceDrmPropertiesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceDrmPropertiesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub has_primary: NonDisposableHandle,
    pub has_render: NonDisposableHandle,
    pub primary_major: i64,
    pub primary_minor: i64,
    pub render_major: i64,
    pub render_minor: i64,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub fragment_shader_barycentric: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub tri_strip_vertex_order_independent_of_provoking_vertex: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceRayTracingMotionBlurFeaturesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceRayTracingMotionBlurFeaturesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub ray_tracing_motion_blur: NonDisposableHandle,
    pub ray_tracing_motion_blur_pipeline_trace_rays_indirect: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceRayTracingValidationFeaturesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceRayTracingValidationFeaturesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub ray_tracing_validation: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAccelerationStructureGeometryMotionTrianglesDataNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAccelerationStructureGeometryMotionTrianglesDataNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub vertex_data: VkDeviceOrHostAddressConstKHR,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAccelerationStructureMotionInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAccelerationStructureMotionInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub max_instances: u32,
    pub flags: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSRTDataNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSRTDataNV {
    pub sx: f32,
    pub a: f32,
    pub b: f32,
    pub pvx: f32,
    pub sy: f32,
    pub c: f32,
    pub pvy: f32,
    pub sz: f32,
    pub pvz: f32,
    pub qx: f32,
    pub qy: f32,
    pub qz: f32,
    pub qw: f32,
    pub tx: f32,
    pub ty: f32,
    pub tz: f32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAccelerationStructureSRTMotionInstanceNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAccelerationStructureSRTMotionInstanceNV {
    pub transform_t0: VkSRTDataNV,
    pub transform_t1: VkSRTDataNV,
    pub instance_custom_index: u32,
    pub mask: u32,
    pub instance_shader_binding_table_record_offset: u32,
    pub flags: NonDisposableHandle,
    pub acceleration_structure_reference: u64,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAccelerationStructureMatrixMotionInstanceNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAccelerationStructureMatrixMotionInstanceNV {
    pub transform_t0: VkTransformMatrixKHR,
    pub transform_t1: VkTransformMatrixKHR,
    pub instance_custom_index: u32,
    pub mask: u32,
    pub instance_shader_binding_table_record_offset: u32,
    pub flags: NonDisposableHandle,
    pub acceleration_structure_reference: u64,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAccelerationStructureMotionInstanceDataNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAccelerationStructureMotionInstanceDataNV {
    pub static_instance: VkAccelerationStructureInstanceKHR,
    pub matrix_motion_instance: VkAccelerationStructureMatrixMotionInstanceNV,
    pub srt_motion_instance: VkAccelerationStructureSRTMotionInstanceNV,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAccelerationStructureMotionInstanceNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAccelerationStructureMotionInstanceNV {
    pub type_: NonDisposableHandle,
    pub flags: NonDisposableHandle,
    pub data: VkAccelerationStructureMotionInstanceDataNV,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMemoryGetRemoteAddressInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMemoryGetRemoteAddressInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub memory: NonDisposableHandle,
    pub handle_type: vk::ExternalMemoryHandleTypeFlags,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImportMemoryBufferCollectionFUCHSIA.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImportMemoryBufferCollectionFUCHSIA {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub collection: NonDisposableHandle,
    pub index: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBufferCollectionImageCreateInfoFUCHSIA.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBufferCollectionImageCreateInfoFUCHSIA {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub collection: NonDisposableHandle,
    pub index: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBufferCollectionBufferCreateInfoFUCHSIA.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBufferCollectionBufferCreateInfoFUCHSIA {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub collection: NonDisposableHandle,
    pub index: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBufferCollectionCreateInfoFUCHSIA.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBufferCollectionCreateInfoFUCHSIA {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub collection_token: vk::zx_handle_t,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBufferCollectionPropertiesFUCHSIA.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBufferCollectionPropertiesFUCHSIA {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub memory_type_bits: u32,
    pub buffer_count: u32,
    pub create_info_index: u32,
    pub sysmem_pixel_format: u64,
    pub format_features: NonDisposableHandle,
    pub sysmem_color_space_index: VkSysmemColorSpaceFUCHSIA,
    pub sampler_ycbcr_conversion_components: VkComponentMapping,
    pub suggested_ycbcr_model: NonDisposableHandle,
    pub suggested_ycbcr_range: NonDisposableHandle,
    pub suggested_xchroma_offset: NonDisposableHandle,
    pub suggested_ychroma_offset: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBufferConstraintsInfoFUCHSIA.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBufferConstraintsInfoFUCHSIA {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub create_info: VkBufferCreateInfo,
    pub required_format_features: NonDisposableHandle,
    pub buffer_collection_constraints: VkBufferCollectionConstraintsInfoFUCHSIA,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSysmemColorSpaceFUCHSIA.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSysmemColorSpaceFUCHSIA {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub color_space: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImageFormatConstraintsInfoFUCHSIA.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImageFormatConstraintsInfoFUCHSIA {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub image_create_info: VkImageCreateInfo,
    pub required_format_features: NonDisposableHandle,
    pub flags: NonDisposableHandle,
    pub sysmem_pixel_format: u64,
    pub color_space_count: u32,
    #[cdump(array(len = self.color_space_count))]
    pub p_color_spaces: *const VkSysmemColorSpaceFUCHSIA,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImageConstraintsInfoFUCHSIA.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImageConstraintsInfoFUCHSIA {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub format_constraints_count: u32,
    #[cdump(array(len = self.format_constraints_count))]
    pub p_format_constraints: *const VkImageFormatConstraintsInfoFUCHSIA,
    pub buffer_collection_constraints: VkBufferCollectionConstraintsInfoFUCHSIA,
    pub flags: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBufferCollectionConstraintsInfoFUCHSIA.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBufferCollectionConstraintsInfoFUCHSIA {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub min_buffer_count: u32,
    pub max_buffer_count: u32,
    pub min_buffer_count_for_camping: u32,
    pub min_buffer_count_for_dedicated_slack: u32,
    pub min_buffer_count_for_shared_slack: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkCudaModuleCreateInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkCudaModuleCreateInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub data_size: usize,
    #[cdump(array(len = self.data_size))]
    pub p_data: *const u8,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkCudaFunctionCreateInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkCudaFunctionCreateInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub module: NonDisposableHandle,
    pub p_name: *const c_char,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkCudaLaunchInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkCudaLaunchInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub function: NonDisposableHandle,
    pub grid_dim_x: u32,
    pub grid_dim_y: u32,
    pub grid_dim_z: u32,
    pub block_dim_x: u32,
    pub block_dim_y: u32,
    pub block_dim_z: u32,
    pub shared_mem_bytes: u32,
    pub param_count: usize,
    #[cdump(array(len = self.param_count))]
    #[cdump(dynamic(serializer = unimplemented_serializer, deserializer = unimplemented_deserializer))]
    pub p_params: *const *const c_void,
    pub extra_count: usize,
    #[cdump(array(len = self.extra_count))]
    #[cdump(dynamic(serializer = unimplemented_serializer, deserializer = unimplemented_deserializer))]
    pub p_extras: *const *const c_void,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub format_rgba10x6_without_ycb_cr_sampler: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkFormatProperties3.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkFormatProperties3 {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub linear_tiling_features: NonDisposableHandle,
    pub optimal_tiling_features: NonDisposableHandle,
    pub buffer_features: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDrmFormatModifierPropertiesList2EXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDrmFormatModifierPropertiesList2EXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub drm_format_modifier_count: u32,
    #[cdump(array(len = self.drm_format_modifier_count))]
    pub p_drm_format_modifier_properties: *mut VkDrmFormatModifierProperties2EXT,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDrmFormatModifierProperties2EXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDrmFormatModifierProperties2EXT {
    pub drm_format_modifier: u64,
    pub drm_format_modifier_plane_count: u32,
    pub drm_format_modifier_tiling_features: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAndroidHardwareBufferFormatProperties2ANDROID.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAndroidHardwareBufferFormatProperties2ANDROID {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub format: NonDisposableHandle,
    pub external_format: u64,
    pub format_features: NonDisposableHandle,
    pub sampler_ycbcr_conversion_components: VkComponentMapping,
    pub suggested_ycbcr_model: NonDisposableHandle,
    pub suggested_ycbcr_range: NonDisposableHandle,
    pub suggested_xchroma_offset: NonDisposableHandle,
    pub suggested_ychroma_offset: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineRenderingCreateInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineRenderingCreateInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub view_mask: u32,
    pub color_attachment_count: u32,
    #[cdump(array(len = self.color_attachment_count))]
    pub p_color_attachment_formats: *const NonDisposableHandle,
    pub depth_attachment_format: NonDisposableHandle,
    pub stencil_attachment_format: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkRenderingInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkRenderingInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub render_area: VkRect2D,
    pub layer_count: u32,
    pub view_mask: u32,
    pub color_attachment_count: u32,
    #[cdump(array(len = self.color_attachment_count))]
    pub p_color_attachments: *const VkRenderingAttachmentInfo,
    pub p_depth_attachment: *const VkRenderingAttachmentInfo,
    pub p_stencil_attachment: *const VkRenderingAttachmentInfo,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkRenderingAttachmentInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkRenderingAttachmentInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub image_view: NonDisposableHandle,
    pub image_layout: NonDisposableHandle,
    pub resolve_mode: NonDisposableHandle,
    pub resolve_image_view: NonDisposableHandle,
    pub resolve_image_layout: NonDisposableHandle,
    pub load_op: NonDisposableHandle,
    pub store_op: NonDisposableHandle,
    pub clear_value: VkClearValue,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkRenderingFragmentShadingRateAttachmentInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkRenderingFragmentShadingRateAttachmentInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub image_view: NonDisposableHandle,
    pub image_layout: NonDisposableHandle,
    pub shading_rate_attachment_texel_size: VkExtent2D,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkRenderingFragmentDensityMapAttachmentInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkRenderingFragmentDensityMapAttachmentInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub image_view: NonDisposableHandle,
    pub image_layout: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceDynamicRenderingFeatures.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceDynamicRenderingFeatures {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub dynamic_rendering: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkCommandBufferInheritanceRenderingInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkCommandBufferInheritanceRenderingInfo {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub view_mask: u32,
    pub color_attachment_count: u32,
    #[cdump(array(len = self.color_attachment_count))]
    pub p_color_attachment_formats: *const NonDisposableHandle,
    pub depth_attachment_format: NonDisposableHandle,
    pub stencil_attachment_format: NonDisposableHandle,
    pub rasterization_samples: vk::SampleCountFlags,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAttachmentSampleCountInfoAMD.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAttachmentSampleCountInfoAMD {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub color_attachment_count: u32,
    #[cdump(array(len = self.color_attachment_count))]
    pub p_color_attachment_samples: *const u32,
    pub depth_stencil_attachment_samples: vk::SampleCountFlags,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMultiviewPerViewAttributesInfoNVX.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMultiviewPerViewAttributesInfoNVX {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub per_view_attributes: NonDisposableHandle,
    pub per_view_attributes_position_xonly: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceImageViewMinLodFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceImageViewMinLodFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub min_lod: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImageViewMinLodCreateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImageViewMinLodCreateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub min_lod: f32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub rasterization_order_color_attachment_access: NonDisposableHandle,
    pub rasterization_order_depth_attachment_access: NonDisposableHandle,
    pub rasterization_order_stencil_attachment_access: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceLinearColorAttachmentFeaturesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceLinearColorAttachmentFeaturesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub linear_color_attachment: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub graphics_pipeline_library: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub graphics_pipeline_library_fast_linking: NonDisposableHandle,
    pub graphics_pipeline_library_independent_interpolation_decoration: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkGraphicsPipelineLibraryCreateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkGraphicsPipelineLibraryCreateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub descriptor_set_host_mapping: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDescriptorSetBindingReferenceVALVE.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDescriptorSetBindingReferenceVALVE {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub descriptor_set_layout: NonDisposableHandle,
    pub binding: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDescriptorSetLayoutHostMappingInfoVALVE.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDescriptorSetLayoutHostMappingInfoVALVE {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub descriptor_offset: usize,
    pub descriptor_size: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceNestedCommandBufferFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceNestedCommandBufferFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub nested_command_buffer: NonDisposableHandle,
    pub nested_command_buffer_rendering: NonDisposableHandle,
    pub nested_command_buffer_simultaneous_use: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceNestedCommandBufferPropertiesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceNestedCommandBufferPropertiesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub max_command_buffer_nesting_level: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shader_module_identifier: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shader_module_identifier_algorithm_uuid: [u8; vk::UUID_SIZE],
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineShaderStageModuleIdentifierCreateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineShaderStageModuleIdentifierCreateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub identifier_size: u32,
    #[cdump(array(len = self.identifier_size))]
    pub p_identifier: *const u8,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkShaderModuleIdentifierEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkShaderModuleIdentifierEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub identifier_size: u32,
    #[cdump(array(len = self.identifier_size))]
    pub identifier: [u8; vk::MAX_SHADER_MODULE_IDENTIFIER_SIZE_EXT],
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImageCompressionControlEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImageCompressionControlEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub compression_control_plane_count: u32,
    #[cdump(array(len = self.compression_control_plane_count))]
    pub p_fixed_rate_flags: *mut NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceImageCompressionControlFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceImageCompressionControlFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub image_compression_control: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImageCompressionPropertiesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImageCompressionPropertiesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub image_compression_flags: NonDisposableHandle,
    pub image_compression_fixed_rate_flags: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub image_compression_control_swapchain: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImageSubresource2KHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImageSubresource2KHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub image_subresource: VkImageSubresource,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSubresourceLayout2KHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSubresourceLayout2KHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub subresource_layout: VkSubresourceLayout,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkRenderPassCreationControlEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkRenderPassCreationControlEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub disallow_merging: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkRenderPassCreationFeedbackInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkRenderPassCreationFeedbackInfoEXT {
    pub post_merge_subpass_count: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkRenderPassCreationFeedbackCreateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkRenderPassCreationFeedbackCreateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub p_render_pass_feedback: *mut VkRenderPassCreationFeedbackInfoEXT,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkRenderPassSubpassFeedbackInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkRenderPassSubpassFeedbackInfoEXT {
    pub subpass_merge_status: NonDisposableHandle,
    pub description: [c_char; vk::MAX_DESCRIPTION_SIZE],
    pub post_merge_index: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkRenderPassSubpassFeedbackCreateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkRenderPassSubpassFeedbackCreateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub p_subpass_feedback: *mut VkRenderPassSubpassFeedbackInfoEXT,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub subpass_merge_feedback: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMicromapBuildInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMicromapBuildInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub type_: NonDisposableHandle,
    pub flags: NonDisposableHandle,
    pub mode: NonDisposableHandle,
    pub dst_micromap: NonDisposableHandle,
    pub usage_counts_count: u32,
    #[cdump(array(len = self.usage_counts_count))]
    pub p_usage_counts: *const VkMicromapUsageEXT,
    #[cdump(array(len = self.usage_counts_count))]
    pub pp_usage_counts: *const *const VkMicromapUsageEXT,
    pub data: VkDeviceOrHostAddressConstKHR,
    pub scratch_data: VkDeviceOrHostAddressKHR,
    pub triangle_array: VkDeviceOrHostAddressConstKHR,
    pub triangle_array_stride: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMicromapCreateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMicromapCreateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub create_flags: NonDisposableHandle,
    pub buffer: NonDisposableHandle,
    pub offset: NonDisposableHandle,
    pub size: NonDisposableHandle,
    pub type_: NonDisposableHandle,
    pub device_address: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMicromapVersionInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMicromapVersionInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    #[cdump(array(len = 2 * vk::UUID_SIZE))]
    pub p_version_data: *const u8,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkCopyMicromapInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkCopyMicromapInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub src: NonDisposableHandle,
    pub dst: NonDisposableHandle,
    pub mode: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkCopyMicromapToMemoryInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkCopyMicromapToMemoryInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub src: NonDisposableHandle,
    pub dst: VkDeviceOrHostAddressKHR,
    pub mode: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkCopyMemoryToMicromapInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkCopyMemoryToMicromapInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub src: VkDeviceOrHostAddressConstKHR,
    pub dst: NonDisposableHandle,
    pub mode: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMicromapBuildSizesInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMicromapBuildSizesInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub micromap_size: NonDisposableHandle,
    pub build_scratch_size: NonDisposableHandle,
    pub discardable: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMicromapUsageEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMicromapUsageEXT {
    pub count: u32,
    pub subdivision_level: u32,
    pub format: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMicromapTriangleEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMicromapTriangleEXT {
    pub data_offset: u32,
    pub subdivision_level: u16,
    pub format: u16,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceOpacityMicromapFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceOpacityMicromapFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub micromap: NonDisposableHandle,
    pub micromap_capture_replay: NonDisposableHandle,
    pub micromap_host_commands: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceOpacityMicromapPropertiesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceOpacityMicromapPropertiesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub max_opacity2_state_subdivision_level: u32,
    pub max_opacity4_state_subdivision_level: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAccelerationStructureTrianglesOpacityMicromapEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAccelerationStructureTrianglesOpacityMicromapEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub index_type: NonDisposableHandle,
    pub index_buffer: VkDeviceOrHostAddressConstKHR,
    pub index_stride: NonDisposableHandle,
    pub base_triangle: u32,
    pub usage_counts_count: u32,
    #[cdump(array(len = self.usage_counts_count))]
    pub p_usage_counts: *const VkMicromapUsageEXT,
    #[cdump(array(len = self.usage_counts_count))]
    pub pp_usage_counts: *const *const VkMicromapUsageEXT,
    pub micromap: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceDisplacementMicromapFeaturesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceDisplacementMicromapFeaturesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub displacement_micromap: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceDisplacementMicromapPropertiesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceDisplacementMicromapPropertiesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub max_displacement_micromap_subdivision_level: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAccelerationStructureTrianglesDisplacementMicromapNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAccelerationStructureTrianglesDisplacementMicromapNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub displacement_bias_and_scale_format: NonDisposableHandle,
    pub displacement_vector_format: NonDisposableHandle,
    pub displacement_bias_and_scale_buffer: VkDeviceOrHostAddressConstKHR,
    pub displacement_bias_and_scale_stride: NonDisposableHandle,
    pub displacement_vector_buffer: VkDeviceOrHostAddressConstKHR,
    pub displacement_vector_stride: NonDisposableHandle,
    pub displaced_micromap_primitive_flags: VkDeviceOrHostAddressConstKHR,
    pub displaced_micromap_primitive_flags_stride: NonDisposableHandle,
    pub index_type: NonDisposableHandle,
    pub index_buffer: VkDeviceOrHostAddressConstKHR,
    pub index_stride: NonDisposableHandle,
    pub base_triangle: u32,
    pub usage_counts_count: u32,
    #[cdump(array(len = self.usage_counts_count))]
    pub p_usage_counts: *const VkMicromapUsageEXT,
    #[cdump(array(len = self.usage_counts_count))]
    pub pp_usage_counts: *const *const VkMicromapUsageEXT,
    pub micromap: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelinePropertiesIdentifierEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelinePropertiesIdentifierEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub pipeline_identifier: [u8; vk::UUID_SIZE],
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDevicePipelinePropertiesFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDevicePipelinePropertiesFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub pipeline_properties_identifier: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shader_early_and_late_fragment_tests: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkExternalMemoryAcquireUnmodifiedEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkExternalMemoryAcquireUnmodifiedEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub acquire_unmodified_memory: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkExportMetalObjectCreateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkExportMetalObjectCreateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub export_object_type: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkExportMetalObjectsInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkExportMetalObjectsInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkExportMetalDeviceInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkExportMetalDeviceInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub mtl_device: vk::MTLDevice_id,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkExportMetalCommandQueueInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkExportMetalCommandQueueInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub queue: NonDisposableHandle,
    pub mtl_command_queue: vk::MTLCommandQueue_id,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkExportMetalBufferInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkExportMetalBufferInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub memory: NonDisposableHandle,
    pub mtl_buffer: vk::MTLBuffer_id,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImportMetalBufferInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImportMetalBufferInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub mtl_buffer: vk::MTLBuffer_id,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkExportMetalTextureInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkExportMetalTextureInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub image: NonDisposableHandle,
    pub image_view: NonDisposableHandle,
    pub buffer_view: NonDisposableHandle,
    pub plane: NonDisposableHandle,
    pub mtl_texture: vk::MTLTexture_id,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImportMetalTextureInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImportMetalTextureInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub plane: NonDisposableHandle,
    pub mtl_texture: vk::MTLTexture_id,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkExportMetalIOSurfaceInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkExportMetalIOSurfaceInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub image: NonDisposableHandle,
    pub io_surface: usize,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImportMetalIOSurfaceInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImportMetalIOSurfaceInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub io_surface: usize,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkExportMetalSharedEventInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkExportMetalSharedEventInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub semaphore: NonDisposableHandle,
    pub event: NonDisposableHandle,
    pub mtl_shared_event: vk::MTLSharedEvent_id,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImportMetalSharedEventInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImportMetalSharedEventInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub mtl_shared_event: vk::MTLSharedEvent_id,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub non_seamless_cube_map: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDevicePipelineRobustnessFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDevicePipelineRobustnessFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub pipeline_robustness: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineRobustnessCreateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineRobustnessCreateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub storage_buffers: NonDisposableHandle,
    pub uniform_buffers: NonDisposableHandle,
    pub vertex_inputs: NonDisposableHandle,
    pub images: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDevicePipelineRobustnessPropertiesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDevicePipelineRobustnessPropertiesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub default_robustness_storage_buffers: NonDisposableHandle,
    pub default_robustness_uniform_buffers: NonDisposableHandle,
    pub default_robustness_vertex_inputs: NonDisposableHandle,
    pub default_robustness_images: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImageViewSampleWeightCreateInfoQCOM.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImageViewSampleWeightCreateInfoQCOM {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub filter_center: VkOffset2D,
    pub filter_size: VkExtent2D,
    pub num_phases: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceImageProcessingFeaturesQCOM.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceImageProcessingFeaturesQCOM {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub texture_sample_weighted: NonDisposableHandle,
    pub texture_box_filter: NonDisposableHandle,
    pub texture_block_match: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceImageProcessingPropertiesQCOM.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceImageProcessingPropertiesQCOM {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub max_weight_filter_phases: u32,
    pub max_weight_filter_dimension: VkExtent2D,
    pub max_block_match_region: VkExtent2D,
    pub max_box_filter_block_size: VkExtent2D,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceTilePropertiesFeaturesQCOM.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceTilePropertiesFeaturesQCOM {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub tile_properties: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkTilePropertiesQCOM.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkTilePropertiesQCOM {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub tile_size: VkExtent3D,
    pub apron_size: VkExtent2D,
    pub origin: VkOffset2D,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceAmigoProfilingFeaturesSEC.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceAmigoProfilingFeaturesSEC {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub amigo_profiling: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAmigoProfilingSubmitInfoSEC.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAmigoProfilingSubmitInfoSEC {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub first_draw_timestamp: u64,
    pub swap_buffer_timestamp: u64,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub attachment_feedback_loop_layout: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceDepthClampZeroOneFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceDepthClampZeroOneFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub depth_clamp_zero_one: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceAddressBindingReportFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceAddressBindingReportFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub report_address_binding: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDeviceAddressBindingCallbackDataEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDeviceAddressBindingCallbackDataEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub flags: NonDisposableHandle,
    pub base_address: NonDisposableHandle,
    pub size: NonDisposableHandle,
    pub binding_type: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceOpticalFlowFeaturesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceOpticalFlowFeaturesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub optical_flow: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceOpticalFlowPropertiesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceOpticalFlowPropertiesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub supported_output_grid_sizes: NonDisposableHandle,
    pub supported_hint_grid_sizes: NonDisposableHandle,
    pub hint_supported: NonDisposableHandle,
    pub cost_supported: NonDisposableHandle,
    pub bidirectional_flow_supported: NonDisposableHandle,
    pub global_flow_supported: NonDisposableHandle,
    pub min_width: u32,
    pub min_height: u32,
    pub max_width: u32,
    pub max_height: u32,
    pub max_num_regions_of_interest: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkOpticalFlowImageFormatInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkOpticalFlowImageFormatInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub usage: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkOpticalFlowImageFormatPropertiesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkOpticalFlowImageFormatPropertiesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub format: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkOpticalFlowSessionCreateInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkOpticalFlowSessionCreateInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub width: u32,
    pub height: u32,
    pub image_format: NonDisposableHandle,
    pub flow_vector_format: NonDisposableHandle,
    pub cost_format: NonDisposableHandle,
    pub output_grid_size: NonDisposableHandle,
    pub hint_grid_size: NonDisposableHandle,
    pub performance_level: NonDisposableHandle,
    pub flags: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkOpticalFlowSessionCreatePrivateDataInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkOpticalFlowSessionCreatePrivateDataInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub id: u32,
    pub size: u32,
    #[cdump(dynamic(serializer = unimplemented_serializer, deserializer = unimplemented_deserializer))]
    pub p_private_data: *const c_void,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkOpticalFlowExecuteInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkOpticalFlowExecuteInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub flags: NonDisposableHandle,
    pub region_count: u32,
    #[cdump(array(len = self.region_count))]
    pub p_regions: *const VkRect2D,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceFaultFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceFaultFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub device_fault: NonDisposableHandle,
    pub device_fault_vendor_binary: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDeviceFaultAddressInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDeviceFaultAddressInfoEXT {
    pub address_type: NonDisposableHandle,
    pub reported_address: NonDisposableHandle,
    pub address_precision: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDeviceFaultVendorInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDeviceFaultVendorInfoEXT {
    pub description: [c_char; vk::MAX_DESCRIPTION_SIZE],
    pub vendor_fault_code: u64,
    pub vendor_fault_data: u64,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDeviceFaultCountsEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDeviceFaultCountsEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub address_info_count: u32,
    pub vendor_info_count: u32,
    pub vendor_binary_size: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDeviceFaultInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDeviceFaultInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub description: [c_char; vk::MAX_DESCRIPTION_SIZE],
    pub p_address_infos: *mut VkDeviceFaultAddressInfoEXT,
    pub p_vendor_infos: *mut VkDeviceFaultVendorInfoEXT,
    #[cdump(dynamic(serializer = unimplemented_serializer, deserializer = unimplemented_deserializer_mut))]
    pub p_vendor_binary_data: *mut c_void,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDeviceFaultVendorBinaryHeaderVersionOneEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDeviceFaultVendorBinaryHeaderVersionOneEXT {
    pub header_size: u32,
    pub header_version: NonDisposableHandle,
    pub vendor_id: u32,
    pub device_id: u32,
    pub driver_version: u32,
    pub pipeline_cache_uuid: [u8; vk::UUID_SIZE],
    pub application_name_offset: u32,
    pub application_version: u32,
    pub engine_name_offset: u32,
    pub engine_version: u32,
    pub api_version: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub pipeline_library_group_handles: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDepthBiasInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDepthBiasInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub depth_bias_constant_factor: f32,
    pub depth_bias_clamp: f32,
    pub depth_bias_slope_factor: f32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDepthBiasRepresentationInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDepthBiasRepresentationInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub depth_bias_representation: NonDisposableHandle,
    pub depth_bias_exact: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDecompressMemoryRegionNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDecompressMemoryRegionNV {
    pub src_address: NonDisposableHandle,
    pub dst_address: NonDisposableHandle,
    pub compressed_size: NonDisposableHandle,
    pub decompressed_size: NonDisposableHandle,
    pub decompression_method: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shader_core_mask: u64,
    pub shader_core_count: u32,
    pub shader_warps_per_core: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shader_core_builtins: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkFrameBoundaryEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkFrameBoundaryEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub frame_id: u64,
    pub image_count: u32,
    #[cdump(array(len = self.image_count))]
    pub p_images: *const NonDisposableHandle,
    pub buffer_count: u32,
    #[cdump(array(len = self.buffer_count))]
    pub p_buffers: *const NonDisposableHandle,
    pub tag_name: u64,
    pub tag_size: usize,
    #[cdump(array(len = self.tag_size))]
    pub p_tag: *const u8,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceFrameBoundaryFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceFrameBoundaryFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub frame_boundary: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub dynamic_rendering_unused_attachments: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSurfacePresentModeEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSurfacePresentModeEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub present_mode: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSurfacePresentScalingCapabilitiesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSurfacePresentScalingCapabilitiesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub supported_present_scaling: NonDisposableHandle,
    pub supported_present_gravity_x: NonDisposableHandle,
    pub supported_present_gravity_y: NonDisposableHandle,
    pub min_scaled_image_extent: VkExtent2D,
    pub max_scaled_image_extent: VkExtent2D,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSurfacePresentModeCompatibilityEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSurfacePresentModeCompatibilityEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub present_mode_count: u32,
    #[cdump(array(len = self.present_mode_count))]
    pub p_present_modes: *mut NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub swapchain_maintenance1: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSwapchainPresentFenceInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSwapchainPresentFenceInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub swapchain_count: u32,
    #[cdump(array(len = self.swapchain_count))]
    pub p_fences: *const NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSwapchainPresentModesCreateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSwapchainPresentModesCreateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub present_mode_count: u32,
    #[cdump(array(len = self.present_mode_count))]
    pub p_present_modes: *const NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSwapchainPresentModeInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSwapchainPresentModeInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub swapchain_count: u32,
    #[cdump(array(len = self.swapchain_count))]
    pub p_present_modes: *const NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSwapchainPresentScalingCreateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSwapchainPresentScalingCreateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub scaling_behavior: NonDisposableHandle,
    pub present_gravity_x: NonDisposableHandle,
    pub present_gravity_y: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkReleaseSwapchainImagesInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkReleaseSwapchainImagesInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub swapchain: NonDisposableHandle,
    pub image_index_count: u32,
    #[cdump(array(len = self.image_index_count))]
    pub p_image_indices: *const u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceDepthBiasControlFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceDepthBiasControlFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub depth_bias_control: NonDisposableHandle,
    pub least_representable_value_force_unorm_representation: NonDisposableHandle,
    pub float_representation: NonDisposableHandle,
    pub depth_bias_exact: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub ray_tracing_invocation_reorder: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub ray_tracing_invocation_reorder_reordering_hint: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceExtendedSparseAddressSpaceFeaturesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceExtendedSparseAddressSpaceFeaturesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub extended_sparse_address_space: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceExtendedSparseAddressSpacePropertiesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceExtendedSparseAddressSpacePropertiesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub extended_sparse_address_space_size: NonDisposableHandle,
    pub extended_sparse_image_usage_flags: NonDisposableHandle,
    pub extended_sparse_buffer_usage_flags: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDirectDriverLoadingInfoLUNARG.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDirectDriverLoadingInfoLUNARG {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub flags: NonDisposableHandle,
    pub pfn_get_instance_proc_addr: vk::PFN_vkGetInstanceProcAddrLUNARG,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDirectDriverLoadingListLUNARG.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDirectDriverLoadingListLUNARG {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub mode: NonDisposableHandle,
    pub driver_count: u32,
    #[cdump(array(len = self.driver_count))]
    pub p_drivers: *const VkDirectDriverLoadingInfoLUNARG,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub multiview_per_view_viewports: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub ray_tracing_position_fetch: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDeviceImageSubresourceInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDeviceImageSubresourceInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub p_create_info: *const VkImageCreateInfo,
    pub p_subresource: *const VkImageSubresource2KHR,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderCorePropertiesARM.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceShaderCorePropertiesARM {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub pixel_rate: u32,
    pub texel_rate: u32,
    pub fma_rate: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub multiview_per_view_render_areas: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub per_view_render_area_count: u32,
    #[cdump(array(len = self.per_view_render_area_count))]
    pub p_per_view_render_areas: *const VkRect2D,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkQueryLowLatencySupportNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkQueryLowLatencySupportNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    #[cdump(dynamic(serializer = unimplemented_serializer, deserializer = unimplemented_deserializer_mut))]
    pub p_queried_low_latency_data: *mut c_void,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMemoryMapInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMemoryMapInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub memory: NonDisposableHandle,
    pub offset: NonDisposableHandle,
    pub size: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMemoryUnmapInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMemoryUnmapInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub memory: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderObjectFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceShaderObjectFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shader_object: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderObjectPropertiesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceShaderObjectPropertiesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shader_binary_uuid: [u8; vk::UUID_SIZE],
    pub shader_binary_version: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkShaderCreateInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkShaderCreateInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub stage: vk::ShaderStageFlags,
    pub next_stage: NonDisposableHandle,
    pub code_type: NonDisposableHandle,
    pub code_size: usize,
    #[cdump(array(len = self.code_size))]
    pub p_code: *const u8,
    pub p_name: *const c_char,
    pub set_layout_count: u32,
    #[cdump(array(len = self.set_layout_count))]
    pub p_set_layouts: *const NonDisposableHandle,
    pub push_constant_range_count: u32,
    #[cdump(array(len = self.push_constant_range_count))]
    pub p_push_constant_ranges: *const VkPushConstantRange,
    pub p_specialization_info: *const VkSpecializationInfo,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderTileImageFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceShaderTileImageFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shader_tile_image_color_read_access: NonDisposableHandle,
    pub shader_tile_image_depth_read_access: NonDisposableHandle,
    pub shader_tile_image_stencil_read_access: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderTileImagePropertiesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceShaderTileImagePropertiesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shader_tile_image_coherent_read_accelerated: NonDisposableHandle,
    pub shader_tile_image_read_sample_from_pixel_rate_invocation: NonDisposableHandle,
    pub shader_tile_image_read_from_helper_invocation: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkImportScreenBufferInfoQNX.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkImportScreenBufferInfoQNX {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub buffer: *mut usize,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkScreenBufferPropertiesQNX.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkScreenBufferPropertiesQNX {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub allocation_size: NonDisposableHandle,
    pub memory_type_bits: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkScreenBufferFormatPropertiesQNX.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkScreenBufferFormatPropertiesQNX {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub format: NonDisposableHandle,
    pub external_format: u64,
    pub screen_usage: u64,
    pub format_features: NonDisposableHandle,
    pub sampler_ycbcr_conversion_components: VkComponentMapping,
    pub suggested_ycbcr_model: NonDisposableHandle,
    pub suggested_ycbcr_range: NonDisposableHandle,
    pub suggested_xchroma_offset: NonDisposableHandle,
    pub suggested_ychroma_offset: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkExternalFormatQNX.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkExternalFormatQNX {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub external_format: u64,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceExternalMemoryScreenBufferFeaturesQNX.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceExternalMemoryScreenBufferFeaturesQNX {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub screen_buffer_import: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceCooperativeMatrixFeaturesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceCooperativeMatrixFeaturesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub cooperative_matrix: NonDisposableHandle,
    pub cooperative_matrix_robust_buffer_access: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkCooperativeMatrixPropertiesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkCooperativeMatrixPropertiesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub m_size: u32,
    pub n_size: u32,
    pub k_size: u32,
    pub a_type: NonDisposableHandle,
    pub b_type: NonDisposableHandle,
    pub c_type: NonDisposableHandle,
    pub result_type: NonDisposableHandle,
    pub saturating_accumulation: NonDisposableHandle,
    pub scope: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceCooperativeMatrixPropertiesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceCooperativeMatrixPropertiesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub cooperative_matrix_supported_stages: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderEnqueuePropertiesAMDX.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceShaderEnqueuePropertiesAMDX {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub max_execution_graph_depth: u32,
    pub max_execution_graph_shader_output_nodes: u32,
    pub max_execution_graph_shader_payload_size: u32,
    pub max_execution_graph_shader_payload_count: u32,
    pub execution_graph_dispatch_address_alignment: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderEnqueueFeaturesAMDX.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceShaderEnqueueFeaturesAMDX {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shader_enqueue: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkExecutionGraphPipelineCreateInfoAMDX.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkExecutionGraphPipelineCreateInfoAMDX {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub flags: NonDisposableHandle,
    pub stage_count: u32,
    #[cdump(array(len = self.stage_count))]
    pub p_stages: *const VkPipelineShaderStageCreateInfo,
    pub p_library_info: *const VkPipelineLibraryCreateInfoKHR,
    pub layout: NonDisposableHandle,
    pub base_pipeline_handle: NonDisposableHandle,
    pub base_pipeline_index: i32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPipelineShaderStageNodeCreateInfoAMDX.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPipelineShaderStageNodeCreateInfoAMDX {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub p_name: *const c_char,
    pub index: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkExecutionGraphPipelineScratchSizeAMDX.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkExecutionGraphPipelineScratchSizeAMDX {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub size: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDispatchGraphInfoAMDX.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDispatchGraphInfoAMDX {
    pub node_index: u32,
    pub payload_count: u32,
    pub payloads: VkDeviceOrHostAddressConstAMDX,
    pub payload_stride: u64,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDispatchGraphCountInfoAMDX.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDispatchGraphCountInfoAMDX {
    pub count: u32,
    pub infos: VkDeviceOrHostAddressConstAMDX,
    pub stride: u64,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBindMemoryStatusKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBindMemoryStatusKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub p_result: *mut NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBindDescriptorSetsInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBindDescriptorSetsInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub stage_flags: NonDisposableHandle,
    pub layout: NonDisposableHandle,
    pub first_set: u32,
    pub descriptor_set_count: u32,
    #[cdump(array(len = self.descriptor_set_count))]
    pub p_descriptor_sets: *const NonDisposableHandle,
    pub dynamic_offset_count: u32,
    #[cdump(array(len = self.dynamic_offset_count))]
    pub p_dynamic_offsets: *const u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPushConstantsInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPushConstantsInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub layout: NonDisposableHandle,
    pub stage_flags: NonDisposableHandle,
    pub offset: u32,
    pub size: u32,
    #[cdump(array(len = self.size))]
    pub p_values: *const u8,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPushDescriptorSetInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPushDescriptorSetInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub stage_flags: NonDisposableHandle,
    pub layout: NonDisposableHandle,
    pub set: u32,
    pub descriptor_write_count: u32,
    #[cdump(array(len = self.descriptor_write_count))]
    pub p_descriptor_writes: *const VkWriteDescriptorSet,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPushDescriptorSetWithTemplateInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPushDescriptorSetWithTemplateInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub descriptor_update_template: NonDisposableHandle,
    pub layout: NonDisposableHandle,
    pub set: u32,
    #[cdump(dynamic(serializer = unimplemented_serializer, deserializer = unimplemented_deserializer))]
    pub p_data: *const c_void,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSetDescriptorBufferOffsetsInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSetDescriptorBufferOffsetsInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub stage_flags: NonDisposableHandle,
    pub layout: NonDisposableHandle,
    pub first_set: u32,
    pub set_count: u32,
    #[cdump(array(len = self.set_count))]
    pub p_buffer_indices: *const u32,
    #[cdump(array(len = self.set_count))]
    pub p_offsets: *const NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBindDescriptorBufferEmbeddedSamplersInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBindDescriptorBufferEmbeddedSamplersInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub stage_flags: NonDisposableHandle,
    pub layout: NonDisposableHandle,
    pub set: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceCubicClampFeaturesQCOM.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceCubicClampFeaturesQCOM {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub cubic_range_clamp: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceYcbcrDegammaFeaturesQCOM.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceYcbcrDegammaFeaturesQCOM {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub ycbcr_degamma: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub enable_ydegamma: NonDisposableHandle,
    pub enable_cb_cr_degamma: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceCubicWeightsFeaturesQCOM.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceCubicWeightsFeaturesQCOM {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub selectable_cubic_weights: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSamplerCubicWeightsCreateInfoQCOM.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSamplerCubicWeightsCreateInfoQCOM {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub cubic_weights: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkBlitImageCubicWeightsInfoQCOM.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkBlitImageCubicWeightsInfoQCOM {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub cubic_weights: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceImageProcessing2FeaturesQCOM.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceImageProcessing2FeaturesQCOM {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub texture_block_match2: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceImageProcessing2PropertiesQCOM.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceImageProcessing2PropertiesQCOM {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub max_block_match_window: VkExtent2D,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSamplerBlockMatchWindowCreateInfoQCOM.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSamplerBlockMatchWindowCreateInfoQCOM {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub window_extent: VkExtent2D,
    pub window_compare_mode: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub descriptor_pool_overallocation: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceLayeredDriverPropertiesMSFT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceLayeredDriverPropertiesMSFT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub underlying_api: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDevicePerStageDescriptorSetFeaturesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDevicePerStageDescriptorSetFeaturesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub per_stage_descriptor_set: NonDisposableHandle,
    pub dynamic_pipeline_layout: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceExternalFormatResolveFeaturesANDROID.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceExternalFormatResolveFeaturesANDROID {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub external_format_resolve: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceExternalFormatResolvePropertiesANDROID.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceExternalFormatResolvePropertiesANDROID {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub null_color_attachment_with_external_format_resolve: NonDisposableHandle,
    pub external_format_resolve_chroma_offset_x: NonDisposableHandle,
    pub external_format_resolve_chroma_offset_y: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkAndroidHardwareBufferFormatResolvePropertiesANDROID.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkAndroidHardwareBufferFormatResolvePropertiesANDROID {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub color_attachment_format: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkLatencySleepModeInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkLatencySleepModeInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub low_latency_mode: NonDisposableHandle,
    pub low_latency_boost: NonDisposableHandle,
    pub minimum_interval_us: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkLatencySleepInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkLatencySleepInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub signal_semaphore: NonDisposableHandle,
    pub value: u64,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSetLatencyMarkerInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSetLatencyMarkerInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub present_id: u64,
    pub marker: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkGetLatencyMarkerInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkGetLatencyMarkerInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub timing_count: u32,
    #[cdump(array(len = self.timing_count))]
    pub p_timings: *mut VkLatencyTimingsFrameReportNV,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkLatencyTimingsFrameReportNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkLatencyTimingsFrameReportNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub present_id: u64,
    pub input_sample_time_us: u64,
    pub sim_start_time_us: u64,
    pub sim_end_time_us: u64,
    pub render_submit_start_time_us: u64,
    pub render_submit_end_time_us: u64,
    pub present_start_time_us: u64,
    pub present_end_time_us: u64,
    pub driver_start_time_us: u64,
    pub driver_end_time_us: u64,
    pub os_render_queue_start_time_us: u64,
    pub os_render_queue_end_time_us: u64,
    pub gpu_render_start_time_us: u64,
    pub gpu_render_end_time_us: u64,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkOutOfBandQueueTypeInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkOutOfBandQueueTypeInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub queue_type: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkLatencySubmissionPresentIdNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkLatencySubmissionPresentIdNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub present_id: u64,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkSwapchainLatencyCreateInfoNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkSwapchainLatencyCreateInfoNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub latency_mode_enable: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkLatencySurfaceCapabilitiesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkLatencySurfaceCapabilitiesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub present_mode_count: u32,
    #[cdump(array(len = self.present_mode_count))]
    pub p_present_modes: *mut NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceCudaKernelLaunchFeaturesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceCudaKernelLaunchFeaturesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub cuda_kernel_launch_features: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceCudaKernelLaunchPropertiesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceCudaKernelLaunchPropertiesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub compute_capability_minor: u32,
    pub compute_capability_major: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkDeviceQueueShaderCoreControlCreateInfoARM.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkDeviceQueueShaderCoreControlCreateInfoARM {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shader_core_count: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceSchedulingControlsFeaturesARM.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceSchedulingControlsFeaturesARM {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub scheduling_controls: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceSchedulingControlsPropertiesARM.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceSchedulingControlsPropertiesARM {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub scheduling_controls_flags: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceRelaxedLineRasterizationFeaturesIMG.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceRelaxedLineRasterizationFeaturesIMG {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub relaxed_line_rasterization: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceRenderPassStripedFeaturesARM.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceRenderPassStripedFeaturesARM {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub render_pass_striped: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceRenderPassStripedPropertiesARM.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceRenderPassStripedPropertiesARM {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub render_pass_stripe_granularity: VkExtent2D,
    pub max_render_pass_stripes: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkRenderPassStripeInfoARM.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkRenderPassStripeInfoARM {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub stripe_area: VkRect2D,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkRenderPassStripeBeginInfoARM.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkRenderPassStripeBeginInfoARM {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub stripe_info_count: u32,
    #[cdump(array(len = self.stripe_info_count))]
    pub p_stripe_infos: *const VkRenderPassStripeInfoARM,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkRenderPassStripeSubmitInfoARM.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkRenderPassStripeSubmitInfoARM {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub stripe_semaphore_info_count: u32,
    #[cdump(array(len = self.stripe_semaphore_info_count))]
    pub p_stripe_semaphore_infos: *const VkSemaphoreSubmitInfo,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderMaximalReconvergenceFeaturesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceShaderMaximalReconvergenceFeaturesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shader_maximal_reconvergence: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderSubgroupRotateFeaturesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceShaderSubgroupRotateFeaturesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shader_subgroup_rotate: NonDisposableHandle,
    pub shader_subgroup_rotate_clustered: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderExpectAssumeFeaturesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceShaderExpectAssumeFeaturesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shader_expect_assume: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderFloatControls2FeaturesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceShaderFloatControls2FeaturesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shader_float_controls2: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceDynamicRenderingLocalReadFeaturesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceDynamicRenderingLocalReadFeaturesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub dynamic_rendering_local_read: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkRenderingAttachmentLocationInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkRenderingAttachmentLocationInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub color_attachment_count: u32,
    #[cdump(array(len = self.color_attachment_count))]
    pub p_color_attachment_locations: *const u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkRenderingInputAttachmentIndexInfoKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkRenderingInputAttachmentIndexInfoKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    pub color_attachment_count: u32,
    #[cdump(array(len = self.color_attachment_count))]
    pub p_color_attachment_input_indices: *const u32,
    pub p_depth_input_attachment_index: *const u32,
    pub p_stencil_input_attachment_index: *const u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderQuadControlFeaturesKHR.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceShaderQuadControlFeaturesKHR {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shader_quad_control: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderAtomicFloat16VectorFeaturesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceShaderAtomicFloat16VectorFeaturesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shader_float16_vector_atomics: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceMapMemoryPlacedFeaturesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceMapMemoryPlacedFeaturesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub memory_map_placed: NonDisposableHandle,
    pub memory_map_range_placed: NonDisposableHandle,
    pub memory_unmap_reserve: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceMapMemoryPlacedPropertiesEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceMapMemoryPlacedPropertiesEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub min_placed_memory_map_alignment: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkMemoryMapPlacedInfoEXT.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkMemoryMapPlacedInfoEXT {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *const c_void,
    #[cdump(dynamic(serializer = unimplemented_serializer, deserializer = unimplemented_deserializer_mut))]
    pub p_placed_address: *mut c_void,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceRawAccessChainsFeaturesNV.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct VkPhysicalDeviceRawAccessChainsFeaturesNV {
    pub s_type: NonDisposableHandle,
    #[cdump(dynamic(serializer = p_next_serializer, deserializer = p_next_deserializer))]
    pub p_next: *mut c_void,
    pub shader_raw_access_chains: NonDisposableHandle,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoH264SpsVuiFlags.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoH264SpsVuiFlags {
    pub aspect_ratio_info_present_flag: u32,
    pub overscan_info_present_flag: u32,
    pub overscan_appropriate_flag: u32,
    pub video_signal_type_present_flag: u32,
    pub video_full_range_flag: u32,
    pub color_description_present_flag: u32,
    pub chroma_loc_info_present_flag: u32,
    pub timing_info_present_flag: u32,
    pub fixed_frame_rate_flag: u32,
    pub bitstream_restriction_flag: u32,
    pub nal_hrd_parameters_present_flag: u32,
    pub vcl_hrd_parameters_present_flag: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoH264HrdParameters.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoH264HrdParameters {
    pub cpb_cnt_minus1: u8,
    pub bit_rate_scale: u8,
    pub cpb_size_scale: u8,
    pub reserved1: u8,
    pub bit_rate_value_minus1: [u32; STD_VIDEO_H264_CPB_CNT_LIST_SIZE],
    pub cpb_size_value_minus1: [u32; STD_VIDEO_H264_CPB_CNT_LIST_SIZE],
    pub cbr_flag: [u8; STD_VIDEO_H264_CPB_CNT_LIST_SIZE],
    pub initial_cpb_removal_delay_length_minus1: u32,
    pub cpb_removal_delay_length_minus1: u32,
    pub dpb_output_delay_length_minus1: u32,
    pub time_offset_length: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoH264SequenceParameterSetVui.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoH264SequenceParameterSetVui {
    pub flags: StdVideoH264SpsVuiFlags,
    pub aspect_ratio_idc: vk::native::StdVideoH264AspectRatioIdc,
    pub sar_width: u16,
    pub sar_height: u16,
    pub video_format: u8,
    pub colour_primaries: u8,
    pub transfer_characteristics: u8,
    pub matrix_coefficients: u8,
    pub num_units_in_tick: u32,
    pub time_scale: u32,
    pub max_num_reorder_frames: u8,
    pub max_dec_frame_buffering: u8,
    pub chroma_sample_loc_type_top_field: u8,
    pub chroma_sample_loc_type_bottom_field: u8,
    pub reserved1: u32,
    pub p_hrd_parameters: *const StdVideoH264HrdParameters,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoH264SpsFlags.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoH264SpsFlags {
    pub constraint_set0_flag: u32,
    pub constraint_set1_flag: u32,
    pub constraint_set2_flag: u32,
    pub constraint_set3_flag: u32,
    pub constraint_set4_flag: u32,
    pub constraint_set5_flag: u32,
    pub direct_8x8_inference_flag: u32,
    pub mb_adaptive_frame_field_flag: u32,
    pub frame_mbs_only_flag: u32,
    pub delta_pic_order_always_zero_flag: u32,
    pub separate_colour_plane_flag: u32,
    pub gaps_in_frame_num_value_allowed_flag: u32,
    pub qpprime_y_zero_transform_bypass_flag: u32,
    pub frame_cropping_flag: u32,
    pub seq_scaling_matrix_present_flag: u32,
    pub vui_parameters_present_flag: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoH264ScalingLists.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoH264ScalingLists {
    pub scaling_list_present_mask: u16,
    pub use_default_scaling_matrix_mask: u16,
    pub scaling_list4x4: [u8; STD_VIDEO_H264_SCALING_LIST_4X4_NUM_LISTS],
    pub scaling_list8x8: [u8; STD_VIDEO_H264_SCALING_LIST_8X8_NUM_LISTS],
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoH264SequenceParameterSet.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoH264SequenceParameterSet {
    pub flags: StdVideoH264SpsFlags,
    pub profile_idc: vk::native::StdVideoH264ProfileIdc,
    pub level_idc: vk::native::StdVideoH264LevelIdc,
    pub chroma_format_idc: vk::native::StdVideoH264ChromaFormatIdc,
    pub seq_parameter_set_id: u8,
    pub bit_depth_luma_minus8: u8,
    pub bit_depth_chroma_minus8: u8,
    pub log2_max_frame_num_minus4: u8,
    pub pic_order_cnt_type: vk::native::StdVideoH264PocType,
    pub offset_for_non_ref_pic: i32,
    pub offset_for_top_to_bottom_field: i32,
    pub log2_max_pic_order_cnt_lsb_minus4: u8,
    pub num_ref_frames_in_pic_order_cnt_cycle: u8,
    pub max_num_ref_frames: u8,
    pub reserved1: u8,
    pub pic_width_in_mbs_minus1: u32,
    pub pic_height_in_map_units_minus1: u32,
    pub frame_crop_left_offset: u32,
    pub frame_crop_right_offset: u32,
    pub frame_crop_top_offset: u32,
    pub frame_crop_bottom_offset: u32,
    pub reserved2: u32,
    pub p_offset_for_ref_frame: *const i32,
    pub p_scaling_lists: *const StdVideoH264ScalingLists,
    pub p_sequence_parameter_set_vui: *const StdVideoH264SequenceParameterSetVui,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoH264PpsFlags.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoH264PpsFlags {
    pub transform_8x8_mode_flag: u32,
    pub redundant_pic_cnt_present_flag: u32,
    pub constrained_intra_pred_flag: u32,
    pub deblocking_filter_control_present_flag: u32,
    pub weighted_pred_flag: u32,
    pub bottom_field_pic_order_in_frame_present_flag: u32,
    pub entropy_coding_mode_flag: u32,
    pub pic_scaling_matrix_present_flag: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoH264PictureParameterSet.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoH264PictureParameterSet {
    pub flags: StdVideoH264PpsFlags,
    pub seq_parameter_set_id: u8,
    pub pic_parameter_set_id: u8,
    pub num_ref_idx_l0_default_active_minus1: u8,
    pub num_ref_idx_l1_default_active_minus1: u8,
    pub weighted_bipred_idc: vk::native::StdVideoH264WeightedBipredIdc,
    pub pic_init_qp_minus26: i8,
    pub pic_init_qs_minus26: i8,
    pub chroma_qp_index_offset: i8,
    pub second_chroma_qp_index_offset: i8,
    pub p_scaling_lists: *const StdVideoH264ScalingLists,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoDecodeH264PictureInfoFlags.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoDecodeH264PictureInfoFlags {
    pub field_pic_flag: u32,
    pub is_intra: u32,
    pub idr_pic_flag: u32,
    pub bottom_field_flag: u32,
    pub is_reference: u32,
    pub complementary_field_pair: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoDecodeH264PictureInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoDecodeH264PictureInfo {
    pub flags: StdVideoDecodeH264PictureInfoFlags,
    pub seq_parameter_set_id: u8,
    pub pic_parameter_set_id: u8,
    pub reserved1: u8,
    pub reserved2: u8,
    pub frame_num: u16,
    pub idr_pic_id: u16,
    pub pic_order_cnt: [i32; STD_VIDEO_DECODE_H264_FIELD_ORDER_COUNT_LIST_SIZE],
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoDecodeH264ReferenceInfoFlags.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoDecodeH264ReferenceInfoFlags {
    pub top_field_flag: u32,
    pub bottom_field_flag: u32,
    pub used_for_long_term_reference: u32,
    pub is_non_existing: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoDecodeH264ReferenceInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoDecodeH264ReferenceInfo {
    pub flags: StdVideoDecodeH264ReferenceInfoFlags,
    pub frame_num: u16,
    pub reserved: u16,
    pub pic_order_cnt: [i32; STD_VIDEO_DECODE_H264_FIELD_ORDER_COUNT_LIST_SIZE],
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoEncodeH264WeightTableFlags.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoEncodeH264WeightTableFlags {
    pub luma_weight_l0_flag: u32,
    pub chroma_weight_l0_flag: u32,
    pub luma_weight_l1_flag: u32,
    pub chroma_weight_l1_flag: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoEncodeH264WeightTable.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoEncodeH264WeightTable {
    pub flags: StdVideoEncodeH264WeightTableFlags,
    pub luma_log2_weight_denom: u8,
    pub chroma_log2_weight_denom: u8,
    pub luma_weight_l0: [i8; STD_VIDEO_H264_MAX_NUM_LIST_REF],
    pub luma_offset_l0: [i8; STD_VIDEO_H264_MAX_NUM_LIST_REF],
    pub chroma_weight_l0: [i8; STD_VIDEO_H264_MAX_NUM_LIST_REF],
    pub chroma_offset_l0: [i8; STD_VIDEO_H264_MAX_NUM_LIST_REF],
    pub luma_weight_l1: [i8; STD_VIDEO_H264_MAX_NUM_LIST_REF],
    pub luma_offset_l1: [i8; STD_VIDEO_H264_MAX_NUM_LIST_REF],
    pub chroma_weight_l1: [i8; STD_VIDEO_H264_MAX_NUM_LIST_REF],
    pub chroma_offset_l1: [i8; STD_VIDEO_H264_MAX_NUM_LIST_REF],
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoEncodeH264SliceHeaderFlags.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoEncodeH264SliceHeaderFlags {
    pub direct_spatial_mv_pred_flag: u32,
    pub num_ref_idx_active_override_flag: u32,
    pub reserved: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoEncodeH264PictureInfoFlags.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoEncodeH264PictureInfoFlags {
    pub idr_pic_flag: u32,
    pub is_reference: u32,
    pub no_output_of_prior_pics_flag: u32,
    pub long_term_reference_flag: u32,
    pub adaptive_ref_pic_marking_mode_flag: u32,
    pub reserved: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoEncodeH264ReferenceInfoFlags.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoEncodeH264ReferenceInfoFlags {
    pub used_for_long_term_reference: u32,
    pub reserved: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoEncodeH264ReferenceListsInfoFlags.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoEncodeH264ReferenceListsInfoFlags {
    pub ref_pic_list_modification_flag_l0: u32,
    pub ref_pic_list_modification_flag_l1: u32,
    pub reserved: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoEncodeH264RefListModEntry.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoEncodeH264RefListModEntry {
    pub modification_of_pic_nums_idc: vk::native::StdVideoH264ModificationOfPicNumsIdc,
    pub abs_diff_pic_num_minus1: u16,
    pub long_term_pic_num: u16,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoEncodeH264RefPicMarkingEntry.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoEncodeH264RefPicMarkingEntry {
    pub memory_management_control_operation: vk::native::StdVideoH264MemMgmtControlOp,
    pub difference_of_pic_nums_minus1: u16,
    pub long_term_pic_num: u16,
    pub long_term_frame_idx: u16,
    pub max_long_term_frame_idx_plus1: u16,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoEncodeH264ReferenceListsInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoEncodeH264ReferenceListsInfo {
    pub flags: StdVideoEncodeH264ReferenceListsInfoFlags,
    pub num_ref_idx_l0_active_minus1: u8,
    pub num_ref_idx_l1_active_minus1: u8,
    pub ref_pic_list0: [u8; STD_VIDEO_H264_MAX_NUM_LIST_REF],
    pub ref_pic_list1: [u8; STD_VIDEO_H264_MAX_NUM_LIST_REF],
    pub ref_list0_mod_op_count: u8,
    pub ref_list1_mod_op_count: u8,
    pub ref_pic_marking_op_count: u8,
    pub reserved1: [u8; 7],
    pub p_ref_list0_mod_operations: *const StdVideoEncodeH264RefListModEntry,
    pub p_ref_list1_mod_operations: *const StdVideoEncodeH264RefListModEntry,
    pub p_ref_pic_marking_operations: *const StdVideoEncodeH264RefPicMarkingEntry,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoEncodeH264PictureInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoEncodeH264PictureInfo {
    pub flags: StdVideoEncodeH264PictureInfoFlags,
    pub seq_parameter_set_id: u8,
    pub pic_parameter_set_id: u8,
    pub idr_pic_id: u16,
    pub primary_pic_type: vk::native::StdVideoH264PictureType,
    pub frame_num: u32,
    pub pic_order_cnt: i32,
    pub temporal_id: u8,
    pub reserved1: [u8; 3],
    pub p_ref_lists: *const StdVideoEncodeH264ReferenceListsInfo,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoEncodeH264ReferenceInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoEncodeH264ReferenceInfo {
    pub flags: StdVideoEncodeH264ReferenceInfoFlags,
    pub primary_pic_type: vk::native::StdVideoH264PictureType,
    pub frame_num: u32,
    pub pic_order_cnt: i32,
    pub long_term_pic_num: u16,
    pub long_term_frame_idx: u16,
    pub temporal_id: u8,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoEncodeH264SliceHeader.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoEncodeH264SliceHeader {
    pub flags: StdVideoEncodeH264SliceHeaderFlags,
    pub first_mb_in_slice: u32,
    pub slice_type: vk::native::StdVideoH264SliceType,
    pub slice_alpha_c0_offset_div2: i8,
    pub slice_beta_offset_div2: i8,
    pub slice_qp_delta: i8,
    pub reserved1: u8,
    pub cabac_init_idc: vk::native::StdVideoH264CabacInitIdc,
    pub disable_deblocking_filter_idc: vk::native::StdVideoH264DisableDeblockingFilterIdc,
    pub p_weight_table: *const StdVideoEncodeH264WeightTable,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoH265ProfileTierLevelFlags.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoH265ProfileTierLevelFlags {
    pub general_tier_flag: u32,
    pub general_progressive_source_flag: u32,
    pub general_interlaced_source_flag: u32,
    pub general_non_packed_constraint_flag: u32,
    pub general_frame_only_constraint_flag: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoH265ProfileTierLevel.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoH265ProfileTierLevel {
    pub flags: StdVideoH265ProfileTierLevelFlags,
    pub general_profile_idc: vk::native::StdVideoH265ProfileIdc,
    pub general_level_idc: vk::native::StdVideoH265LevelIdc,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoH265DecPicBufMgr.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoH265DecPicBufMgr {
    pub max_latency_increase_plus1: [u32; STD_VIDEO_H265_SUBLAYERS_LIST_SIZE],
    pub max_dec_pic_buffering_minus1: [u8; STD_VIDEO_H265_SUBLAYERS_LIST_SIZE],
    pub max_num_reorder_pics: [u8; STD_VIDEO_H265_SUBLAYERS_LIST_SIZE],
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoH265SubLayerHrdParameters.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoH265SubLayerHrdParameters {
    pub bit_rate_value_minus1: [u32; STD_VIDEO_H265_CPB_CNT_LIST_SIZE],
    pub cpb_size_value_minus1: [u32; STD_VIDEO_H265_CPB_CNT_LIST_SIZE],
    pub cpb_size_du_value_minus1: [u32; STD_VIDEO_H265_CPB_CNT_LIST_SIZE],
    pub bit_rate_du_value_minus1: [u32; STD_VIDEO_H265_CPB_CNT_LIST_SIZE],
    pub cbr_flag: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoH265HrdFlags.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoH265HrdFlags {
    pub nal_hrd_parameters_present_flag: u32,
    pub vcl_hrd_parameters_present_flag: u32,
    pub sub_pic_hrd_params_present_flag: u32,
    pub sub_pic_cpb_params_in_pic_timing_sei_flag: u32,
    pub fixed_pic_rate_general_flag: u32,
    pub fixed_pic_rate_within_cvs_flag: u32,
    pub low_delay_hrd_flag: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoH265HrdParameters.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoH265HrdParameters {
    pub flags: StdVideoH265HrdFlags,
    pub tick_divisor_minus2: u8,
    pub du_cpb_removal_delay_increment_length_minus1: u8,
    pub dpb_output_delay_du_length_minus1: u8,
    pub bit_rate_scale: u8,
    pub cpb_size_scale: u8,
    pub cpb_size_du_scale: u8,
    pub initial_cpb_removal_delay_length_minus1: u8,
    pub au_cpb_removal_delay_length_minus1: u8,
    pub dpb_output_delay_length_minus1: u8,
    pub cpb_cnt_minus1: [u8; STD_VIDEO_H265_SUBLAYERS_LIST_SIZE],
    pub elemental_duration_in_tc_minus1: [u16; STD_VIDEO_H265_SUBLAYERS_LIST_SIZE],
    pub reserved: [u16; 3],
    pub p_sub_layer_hrd_parameters_nal: *const StdVideoH265SubLayerHrdParameters,
    pub p_sub_layer_hrd_parameters_vcl: *const StdVideoH265SubLayerHrdParameters,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoH265VpsFlags.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoH265VpsFlags {
    pub vps_temporal_id_nesting_flag: u32,
    pub vps_sub_layer_ordering_info_present_flag: u32,
    pub vps_timing_info_present_flag: u32,
    pub vps_poc_proportional_to_timing_flag: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoH265VideoParameterSet.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoH265VideoParameterSet {
    pub flags: StdVideoH265VpsFlags,
    pub vps_video_parameter_set_id: u8,
    pub vps_max_sub_layers_minus1: u8,
    pub reserved1: u8,
    pub reserved2: u8,
    pub vps_num_units_in_tick: u32,
    pub vps_time_scale: u32,
    pub vps_num_ticks_poc_diff_one_minus1: u32,
    pub reserved3: u32,
    pub p_dec_pic_buf_mgr: *const StdVideoH265DecPicBufMgr,
    pub p_hrd_parameters: *const StdVideoH265HrdParameters,
    pub p_profile_tier_level: *const StdVideoH265ProfileTierLevel,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoH265ScalingLists.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoH265ScalingLists {
    pub scaling_list4x4: [u8; STD_VIDEO_H265_SCALING_LIST_4X4_NUM_LISTS],
    pub scaling_list8x8: [u8; STD_VIDEO_H265_SCALING_LIST_8X8_NUM_LISTS],
    pub scaling_list16x16: [u8; STD_VIDEO_H265_SCALING_LIST_16X16_NUM_LISTS],
    pub scaling_list32x32: [u8; STD_VIDEO_H265_SCALING_LIST_32X32_NUM_LISTS],
    pub scaling_list_dccoef16x16: [u8; STD_VIDEO_H265_SCALING_LIST_16X16_NUM_LISTS],
    pub scaling_list_dccoef32x32: [u8; STD_VIDEO_H265_SCALING_LIST_32X32_NUM_LISTS],
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoH265ShortTermRefPicSetFlags.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoH265ShortTermRefPicSetFlags {
    pub inter_ref_pic_set_prediction_flag: u32,
    pub delta_rps_sign: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoH265ShortTermRefPicSet.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoH265ShortTermRefPicSet {
    pub flags: StdVideoH265ShortTermRefPicSetFlags,
    pub delta_idx_minus1: u32,
    pub use_delta_flag: u16,
    pub abs_delta_rps_minus1: u16,
    pub used_by_curr_pic_flag: u16,
    pub used_by_curr_pic_s0_flag: u16,
    pub used_by_curr_pic_s1_flag: u16,
    pub reserved1: u16,
    pub reserved2: u8,
    pub reserved3: u8,
    pub num_negative_pics: u8,
    pub num_positive_pics: u8,
    pub delta_poc_s0_minus1: [u16; STD_VIDEO_H265_MAX_DPB_SIZE],
    pub delta_poc_s1_minus1: [u16; STD_VIDEO_H265_MAX_DPB_SIZE],
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoH265LongTermRefPicsSps.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoH265LongTermRefPicsSps {
    pub used_by_curr_pic_lt_sps_flag: u32,
    pub lt_ref_pic_poc_lsb_sps: [u32; STD_VIDEO_H265_MAX_LONG_TERM_REF_PICS_SPS],
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoH265SpsVuiFlags.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoH265SpsVuiFlags {
    pub aspect_ratio_info_present_flag: u32,
    pub overscan_info_present_flag: u32,
    pub overscan_appropriate_flag: u32,
    pub video_signal_type_present_flag: u32,
    pub video_full_range_flag: u32,
    pub colour_description_present_flag: u32,
    pub chroma_loc_info_present_flag: u32,
    pub neutral_chroma_indication_flag: u32,
    pub field_seq_flag: u32,
    pub frame_field_info_present_flag: u32,
    pub default_display_window_flag: u32,
    pub vui_timing_info_present_flag: u32,
    pub vui_poc_proportional_to_timing_flag: u32,
    pub vui_hrd_parameters_present_flag: u32,
    pub bitstream_restriction_flag: u32,
    pub tiles_fixed_structure_flag: u32,
    pub motion_vectors_over_pic_boundaries_flag: u32,
    pub restricted_ref_pic_lists_flag: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoH265SequenceParameterSetVui.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoH265SequenceParameterSetVui {
    pub flags: StdVideoH265SpsVuiFlags,
    pub aspect_ratio_idc: vk::native::StdVideoH265AspectRatioIdc,
    pub sar_width: u16,
    pub sar_height: u16,
    pub video_format: u8,
    pub colour_primaries: u8,
    pub transfer_characteristics: u8,
    pub matrix_coeffs: u8,
    pub chroma_sample_loc_type_top_field: u8,
    pub chroma_sample_loc_type_bottom_field: u8,
    pub reserved1: u8,
    pub reserved2: u8,
    pub def_disp_win_left_offset: u16,
    pub def_disp_win_right_offset: u16,
    pub def_disp_win_top_offset: u16,
    pub def_disp_win_bottom_offset: u16,
    pub vui_num_units_in_tick: u32,
    pub vui_time_scale: u32,
    pub vui_num_ticks_poc_diff_one_minus1: u32,
    pub min_spatial_segmentation_idc: u16,
    pub reserved3: u16,
    pub max_bytes_per_pic_denom: u8,
    pub max_bits_per_min_cu_denom: u8,
    pub log2_max_mv_length_horizontal: u8,
    pub log2_max_mv_length_vertical: u8,
    pub p_hrd_parameters: *const StdVideoH265HrdParameters,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoH265PredictorPaletteEntries.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoH265PredictorPaletteEntries {
    pub predictor_palette_entries: [u16; STD_VIDEO_H265_PREDICTOR_PALETTE_COMPONENTS_LIST_SIZE],
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoH265SpsFlags.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoH265SpsFlags {
    pub sps_temporal_id_nesting_flag: u32,
    pub separate_colour_plane_flag: u32,
    pub conformance_window_flag: u32,
    pub sps_sub_layer_ordering_info_present_flag: u32,
    pub scaling_list_enabled_flag: u32,
    pub sps_scaling_list_data_present_flag: u32,
    pub amp_enabled_flag: u32,
    pub sample_adaptive_offset_enabled_flag: u32,
    pub pcm_enabled_flag: u32,
    pub pcm_loop_filter_disabled_flag: u32,
    pub long_term_ref_pics_present_flag: u32,
    pub sps_temporal_mvp_enabled_flag: u32,
    pub strong_intra_smoothing_enabled_flag: u32,
    pub vui_parameters_present_flag: u32,
    pub sps_extension_present_flag: u32,
    pub sps_range_extension_flag: u32,
    pub transform_skip_rotation_enabled_flag: u32,
    pub transform_skip_context_enabled_flag: u32,
    pub implicit_rdpcm_enabled_flag: u32,
    pub explicit_rdpcm_enabled_flag: u32,
    pub extended_precision_processing_flag: u32,
    pub intra_smoothing_disabled_flag: u32,
    pub high_precision_offsets_enabled_flag: u32,
    pub persistent_rice_adaptation_enabled_flag: u32,
    pub cabac_bypass_alignment_enabled_flag: u32,
    pub sps_scc_extension_flag: u32,
    pub sps_curr_pic_ref_enabled_flag: u32,
    pub palette_mode_enabled_flag: u32,
    pub sps_palette_predictor_initializers_present_flag: u32,
    pub intra_boundary_filtering_disabled_flag: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoH265SequenceParameterSet.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoH265SequenceParameterSet {
    pub flags: StdVideoH265SpsFlags,
    pub chroma_format_idc: vk::native::StdVideoH265ChromaFormatIdc,
    pub pic_width_in_luma_samples: u32,
    pub pic_height_in_luma_samples: u32,
    pub sps_video_parameter_set_id: u8,
    pub sps_max_sub_layers_minus1: u8,
    pub sps_seq_parameter_set_id: u8,
    pub bit_depth_luma_minus8: u8,
    pub bit_depth_chroma_minus8: u8,
    pub log2_max_pic_order_cnt_lsb_minus4: u8,
    pub log2_min_luma_coding_block_size_minus3: u8,
    pub log2_diff_max_min_luma_coding_block_size: u8,
    pub log2_min_luma_transform_block_size_minus2: u8,
    pub log2_diff_max_min_luma_transform_block_size: u8,
    pub max_transform_hierarchy_depth_inter: u8,
    pub max_transform_hierarchy_depth_intra: u8,
    pub num_short_term_ref_pic_sets: u8,
    pub num_long_term_ref_pics_sps: u8,
    pub pcm_sample_bit_depth_luma_minus1: u8,
    pub pcm_sample_bit_depth_chroma_minus1: u8,
    pub log2_min_pcm_luma_coding_block_size_minus3: u8,
    pub log2_diff_max_min_pcm_luma_coding_block_size: u8,
    pub reserved1: u8,
    pub reserved2: u8,
    pub palette_max_size: u8,
    pub delta_palette_max_predictor_size: u8,
    pub motion_vector_resolution_control_idc: u8,
    pub sps_num_palette_predictor_initializers_minus1: u8,
    pub conf_win_left_offset: u32,
    pub conf_win_right_offset: u32,
    pub conf_win_top_offset: u32,
    pub conf_win_bottom_offset: u32,
    pub p_profile_tier_level: *const StdVideoH265ProfileTierLevel,
    pub p_dec_pic_buf_mgr: *const StdVideoH265DecPicBufMgr,
    pub p_scaling_lists: *const StdVideoH265ScalingLists,
    pub p_short_term_ref_pic_set: *const StdVideoH265ShortTermRefPicSet,
    pub p_long_term_ref_pics_sps: *const StdVideoH265LongTermRefPicsSps,
    pub p_sequence_parameter_set_vui: *const StdVideoH265SequenceParameterSetVui,
    pub p_predictor_palette_entries: *const StdVideoH265PredictorPaletteEntries,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoH265PpsFlags.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoH265PpsFlags {
    pub dependent_slice_segments_enabled_flag: u32,
    pub output_flag_present_flag: u32,
    pub sign_data_hiding_enabled_flag: u32,
    pub cabac_init_present_flag: u32,
    pub constrained_intra_pred_flag: u32,
    pub transform_skip_enabled_flag: u32,
    pub cu_qp_delta_enabled_flag: u32,
    pub pps_slice_chroma_qp_offsets_present_flag: u32,
    pub weighted_pred_flag: u32,
    pub weighted_bipred_flag: u32,
    pub transquant_bypass_enabled_flag: u32,
    pub tiles_enabled_flag: u32,
    pub entropy_coding_sync_enabled_flag: u32,
    pub uniform_spacing_flag: u32,
    pub loop_filter_across_tiles_enabled_flag: u32,
    pub pps_loop_filter_across_slices_enabled_flag: u32,
    pub deblocking_filter_control_present_flag: u32,
    pub deblocking_filter_override_enabled_flag: u32,
    pub pps_deblocking_filter_disabled_flag: u32,
    pub pps_scaling_list_data_present_flag: u32,
    pub lists_modification_present_flag: u32,
    pub slice_segment_header_extension_present_flag: u32,
    pub pps_extension_present_flag: u32,
    pub cross_component_prediction_enabled_flag: u32,
    pub chroma_qp_offset_list_enabled_flag: u32,
    pub pps_curr_pic_ref_enabled_flag: u32,
    pub residual_adaptive_colour_transform_enabled_flag: u32,
    pub pps_slice_act_qp_offsets_present_flag: u32,
    pub pps_palette_predictor_initializers_present_flag: u32,
    pub monochrome_palette_flag: u32,
    pub pps_range_extension_flag: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoH265PictureParameterSet.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoH265PictureParameterSet {
    pub flags: StdVideoH265PpsFlags,
    pub pps_pic_parameter_set_id: u8,
    pub pps_seq_parameter_set_id: u8,
    pub sps_video_parameter_set_id: u8,
    pub num_extra_slice_header_bits: u8,
    pub num_ref_idx_l0_default_active_minus1: u8,
    pub num_ref_idx_l1_default_active_minus1: u8,
    pub init_qp_minus26: i8,
    pub diff_cu_qp_delta_depth: u8,
    pub pps_cb_qp_offset: i8,
    pub pps_cr_qp_offset: i8,
    pub pps_beta_offset_div2: i8,
    pub pps_tc_offset_div2: i8,
    pub log2_parallel_merge_level_minus2: u8,
    pub log2_max_transform_skip_block_size_minus2: u8,
    pub diff_cu_chroma_qp_offset_depth: u8,
    pub chroma_qp_offset_list_len_minus1: u8,
    pub cb_qp_offset_list: [i8; STD_VIDEO_H265_CHROMA_QP_OFFSET_LIST_SIZE],
    pub cr_qp_offset_list: [i8; STD_VIDEO_H265_CHROMA_QP_OFFSET_LIST_SIZE],
    pub log2_sao_offset_scale_luma: u8,
    pub log2_sao_offset_scale_chroma: u8,
    pub pps_act_y_qp_offset_plus5: i8,
    pub pps_act_cb_qp_offset_plus5: i8,
    pub pps_act_cr_qp_offset_plus3: i8,
    pub pps_num_palette_predictor_initializers: u8,
    pub luma_bit_depth_entry_minus8: u8,
    pub chroma_bit_depth_entry_minus8: u8,
    pub num_tile_columns_minus1: u8,
    pub num_tile_rows_minus1: u8,
    pub reserved1: u8,
    pub reserved2: u8,
    pub column_width_minus1: [u16; STD_VIDEO_H265_CHROMA_QP_OFFSET_TILE_COLS_LIST_SIZE],
    pub row_height_minus1: [u16; STD_VIDEO_H265_CHROMA_QP_OFFSET_TILE_ROWS_LIST_SIZE],
    pub reserved3: u32,
    pub p_scaling_lists: *const StdVideoH265ScalingLists,
    pub p_predictor_palette_entries: *const StdVideoH265PredictorPaletteEntries,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoDecodeH265PictureInfoFlags.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoDecodeH265PictureInfoFlags {
    pub irap_pic_flag: u32,
    pub idr_pic_flag: u32,
    pub is_reference: u32,
    pub short_term_ref_pic_set_sps_flag: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoDecodeH265PictureInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoDecodeH265PictureInfo {
    pub flags: StdVideoDecodeH265PictureInfoFlags,
    pub sps_video_parameter_set_id: u8,
    pub pps_seq_parameter_set_id: u8,
    pub pps_pic_parameter_set_id: u8,
    pub num_delta_pocs_of_ref_rps_idx: u8,
    pub pic_order_cnt_val: i32,
    pub num_bits_for_stref_pic_set_in_slice: u16,
    pub reserved: u16,
    pub ref_pic_set_st_curr_before: [u8; STD_VIDEO_DECODE_H265_REF_PIC_SET_LIST_SIZE],
    pub ref_pic_set_st_curr_after: [u8; STD_VIDEO_DECODE_H265_REF_PIC_SET_LIST_SIZE],
    pub ref_pic_set_lt_curr: [u8; STD_VIDEO_DECODE_H265_REF_PIC_SET_LIST_SIZE],
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoDecodeH265ReferenceInfoFlags.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoDecodeH265ReferenceInfoFlags {
    pub used_for_long_term_reference: u32,
    pub unused_for_reference: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoDecodeH265ReferenceInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoDecodeH265ReferenceInfo {
    pub flags: StdVideoDecodeH265ReferenceInfoFlags,
    pub pic_order_cnt_val: i32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoEncodeH265WeightTableFlags.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoEncodeH265WeightTableFlags {
    pub luma_weight_l0_flag: u16,
    pub chroma_weight_l0_flag: u16,
    pub luma_weight_l1_flag: u16,
    pub chroma_weight_l1_flag: u16,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoEncodeH265WeightTable.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoEncodeH265WeightTable {
    pub flags: StdVideoEncodeH265WeightTableFlags,
    pub luma_log2_weight_denom: u8,
    pub delta_chroma_log2_weight_denom: i8,
    pub delta_luma_weight_l0: [i8; STD_VIDEO_H265_MAX_NUM_LIST_REF],
    pub luma_offset_l0: [i8; STD_VIDEO_H265_MAX_NUM_LIST_REF],
    pub delta_chroma_weight_l0: [i8; STD_VIDEO_H265_MAX_NUM_LIST_REF],
    pub delta_chroma_offset_l0: [i8; STD_VIDEO_H265_MAX_NUM_LIST_REF],
    pub delta_luma_weight_l1: [i8; STD_VIDEO_H265_MAX_NUM_LIST_REF],
    pub luma_offset_l1: [i8; STD_VIDEO_H265_MAX_NUM_LIST_REF],
    pub delta_chroma_weight_l1: [i8; STD_VIDEO_H265_MAX_NUM_LIST_REF],
    pub delta_chroma_offset_l1: [i8; STD_VIDEO_H265_MAX_NUM_LIST_REF],
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoEncodeH265LongTermRefPics.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoEncodeH265LongTermRefPics {
    pub num_long_term_sps: u8,
    pub num_long_term_pics: u8,
    pub lt_idx_sps: [u8; STD_VIDEO_H265_MAX_LONG_TERM_REF_PICS_SPS],
    pub poc_lsb_lt: [u8; STD_VIDEO_H265_MAX_LONG_TERM_PICS],
    pub used_by_curr_pic_lt_flag: u16,
    pub delta_poc_msb_present_flag: [u8; STD_VIDEO_H265_MAX_DELTA_POC],
    pub delta_poc_msb_cycle_lt: [u8; STD_VIDEO_H265_MAX_DELTA_POC],
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoEncodeH265SliceSegmentHeaderFlags.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoEncodeH265SliceSegmentHeaderFlags {
    pub first_slice_segment_in_pic_flag: u32,
    pub dependent_slice_segment_flag: u32,
    pub slice_sao_luma_flag: u32,
    pub slice_sao_chroma_flag: u32,
    pub num_ref_idx_active_override_flag: u32,
    pub mvd_l1_zero_flag: u32,
    pub cabac_init_flag: u32,
    pub cu_chroma_qp_offset_enabled_flag: u32,
    pub deblocking_filter_override_flag: u32,
    pub slice_deblocking_filter_disabled_flag: u32,
    pub collocated_from_l0_flag: u32,
    pub slice_loop_filter_across_slices_enabled_flag: u32,
    pub reserved: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoEncodeH265SliceSegmentHeader.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoEncodeH265SliceSegmentHeader {
    pub flags: StdVideoEncodeH265SliceSegmentHeaderFlags,
    pub slice_type: vk::native::StdVideoH265SliceType,
    pub slice_segment_address: u32,
    pub collocated_ref_idx: u8,
    pub max_num_merge_cand: u8,
    pub slice_cb_qp_offset: i8,
    pub slice_cr_qp_offset: i8,
    pub slice_beta_offset_div2: i8,
    pub slice_tc_offset_div2: i8,
    pub slice_act_y_qp_offset: i8,
    pub slice_act_cb_qp_offset: i8,
    pub slice_act_cr_qp_offset: i8,
    pub slice_qp_delta: i8,
    pub reserved1: u16,
    pub p_weight_table: *const StdVideoEncodeH265WeightTable,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoEncodeH265ReferenceListsInfoFlags.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoEncodeH265ReferenceListsInfoFlags {
    pub ref_pic_list_modification_flag_l0: u32,
    pub ref_pic_list_modification_flag_l1: u32,
    pub reserved: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoEncodeH265ReferenceListsInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoEncodeH265ReferenceListsInfo {
    pub flags: StdVideoEncodeH265ReferenceListsInfoFlags,
    pub num_ref_idx_l0_active_minus1: u8,
    pub num_ref_idx_l1_active_minus1: u8,
    pub ref_pic_list0: [u8; STD_VIDEO_H265_MAX_NUM_LIST_REF],
    pub ref_pic_list1: [u8; STD_VIDEO_H265_MAX_NUM_LIST_REF],
    pub list_entry_l0: [u8; STD_VIDEO_H265_MAX_NUM_LIST_REF],
    pub list_entry_l1: [u8; STD_VIDEO_H265_MAX_NUM_LIST_REF],
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoEncodeH265PictureInfoFlags.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoEncodeH265PictureInfoFlags {
    pub is_reference: u32,
    pub irap_pic_flag: u32,
    pub used_for_long_term_reference: u32,
    pub discardable_flag: u32,
    pub cross_layer_bla_flag: u32,
    pub pic_output_flag: u32,
    pub no_output_of_prior_pics_flag: u32,
    pub short_term_ref_pic_set_sps_flag: u32,
    pub slice_temporal_mvp_enabled_flag: u32,
    pub reserved: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoEncodeH265PictureInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoEncodeH265PictureInfo {
    pub flags: StdVideoEncodeH265PictureInfoFlags,
    pub pic_type: vk::native::StdVideoH265PictureType,
    pub sps_video_parameter_set_id: u8,
    pub pps_seq_parameter_set_id: u8,
    pub pps_pic_parameter_set_id: u8,
    pub short_term_ref_pic_set_idx: u8,
    pub pic_order_cnt_val: i32,
    pub temporal_id: u8,
    pub reserved1: [u8; 7],
    pub p_ref_lists: *const StdVideoEncodeH265ReferenceListsInfo,
    pub p_short_term_ref_pic_set: *const StdVideoH265ShortTermRefPicSet,
    pub p_long_term_ref_pics: *const StdVideoEncodeH265LongTermRefPics,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoEncodeH265ReferenceInfoFlags.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoEncodeH265ReferenceInfoFlags {
    pub used_for_long_term_reference: u32,
    pub unused_for_reference: u32,
    pub reserved: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoEncodeH265ReferenceInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoEncodeH265ReferenceInfo {
    pub flags: StdVideoEncodeH265ReferenceInfoFlags,
    pub pic_type: vk::native::StdVideoH265PictureType,
    pub pic_order_cnt_val: i32,
    pub temporal_id: u8,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoAV1ColorConfigFlags.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoAV1ColorConfigFlags {
    pub mono_chrome: u32,
    pub color_range: u32,
    pub separate_uv_delta_q: u32,
    pub color_description_present_flag: u32,
    pub reserved: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoAV1ColorConfig.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoAV1ColorConfig {
    pub flags: StdVideoAV1ColorConfigFlags,
    pub bit_depth: u8,
    pub subsampling_x: u8,
    pub subsampling_y: u8,
    pub reserved1: u8,
    pub color_primaries: vk::native::StdVideoAV1ColorPrimaries,
    pub transfer_characteristics: vk::native::StdVideoAV1TransferCharacteristics,
    pub matrix_coefficients: vk::native::StdVideoAV1MatrixCoefficients,
    pub chroma_sample_position: vk::native::StdVideoAV1ChromaSamplePosition,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoAV1TimingInfoFlags.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoAV1TimingInfoFlags {
    pub equal_picture_interval: u32,
    pub reserved: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoAV1TimingInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoAV1TimingInfo {
    pub flags: StdVideoAV1TimingInfoFlags,
    pub num_units_in_display_tick: u32,
    pub time_scale: u32,
    pub num_ticks_per_picture_minus_1: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoAV1SequenceHeaderFlags.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoAV1SequenceHeaderFlags {
    pub still_picture: u32,
    pub reduced_still_picture_header: u32,
    pub use_128x128_superblock: u32,
    pub enable_filter_intra: u32,
    pub enable_intra_edge_filter: u32,
    pub enable_interintra_compound: u32,
    pub enable_masked_compound: u32,
    pub enable_warped_motion: u32,
    pub enable_dual_filter: u32,
    pub enable_order_hint: u32,
    pub enable_jnt_comp: u32,
    pub enable_ref_frame_mvs: u32,
    pub frame_id_numbers_present_flag: u32,
    pub enable_superres: u32,
    pub enable_cdef: u32,
    pub enable_restoration: u32,
    pub film_grain_params_present: u32,
    pub timing_info_present_flag: u32,
    pub initial_display_delay_present_flag: u32,
    pub reserved: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoAV1SequenceHeader.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoAV1SequenceHeader {
    pub flags: StdVideoAV1SequenceHeaderFlags,
    pub seq_profile: vk::native::StdVideoAV1Profile,
    pub frame_width_bits_minus_1: u8,
    pub frame_height_bits_minus_1: u8,
    pub max_frame_width_minus_1: u16,
    pub max_frame_height_minus_1: u16,
    pub delta_frame_id_length_minus_2: u8,
    pub additional_frame_id_length_minus_1: u8,
    pub order_hint_bits_minus_1: u8,
    pub seq_force_integer_mv: u8,
    pub seq_force_screen_content_tools: u8,
    pub reserved1: [u8; 5],
    pub p_color_config: *const StdVideoAV1ColorConfig,
    pub p_timing_info: *const StdVideoAV1TimingInfo,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoAV1LoopFilterFlags.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoAV1LoopFilterFlags {
    pub loop_filter_delta_enabled: u32,
    pub loop_filter_delta_update: u32,
    pub reserved: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoAV1LoopFilter.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoAV1LoopFilter {
    pub flags: StdVideoAV1LoopFilterFlags,
    pub loop_filter_level: [u8; STD_VIDEO_AV1_MAX_LOOP_FILTER_STRENGTHS],
    pub loop_filter_sharpness: u8,
    pub update_ref_delta: u8,
    pub loop_filter_ref_deltas: [i8; STD_VIDEO_AV1_TOTAL_REFS_PER_FRAME],
    pub update_mode_delta: u8,
    pub loop_filter_mode_deltas: [i8; STD_VIDEO_AV1_LOOP_FILTER_ADJUSTMENTS],
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoAV1QuantizationFlags.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoAV1QuantizationFlags {
    pub using_qmatrix: u32,
    pub diff_uv_delta: u32,
    pub reserved: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoAV1Quantization.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoAV1Quantization {
    pub flags: StdVideoAV1QuantizationFlags,
    pub base_q_idx: u8,
    pub delta_qydc: i8,
    pub delta_qudc: i8,
    pub delta_quac: i8,
    pub delta_qvdc: i8,
    pub delta_qvac: i8,
    pub qm_y: u8,
    pub qm_u: u8,
    pub qm_v: u8,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoAV1Segmentation.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoAV1Segmentation {
    pub feature_enabled: [u8; STD_VIDEO_AV1_MAX_SEGMENTS],
    pub feature_data: [i16; STD_VIDEO_AV1_MAX_SEGMENTS],
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoAV1TileInfoFlags.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoAV1TileInfoFlags {
    pub uniform_tile_spacing_flag: u32,
    pub reserved: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoAV1TileInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoAV1TileInfo {
    pub flags: StdVideoAV1TileInfoFlags,
    pub tile_cols: u8,
    pub tile_rows: u8,
    pub context_update_tile_id: u16,
    pub tile_size_bytes_minus_1: u8,
    pub reserved1: [u8; 7],
    pub p_mi_col_starts: *const u16,
    pub p_mi_row_starts: *const u16,
    pub p_width_in_sbs_minus1: *const u16,
    pub p_height_in_sbs_minus1: *const u16,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoAV1CDEF.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoAV1CDEF {
    pub cdef_damping_minus_3: u8,
    pub cdef_bits: u8,
    pub cdef_y_pri_strength: [u8; STD_VIDEO_AV1_MAX_CDEF_FILTER_STRENGTHS],
    pub cdef_y_sec_strength: [u8; STD_VIDEO_AV1_MAX_CDEF_FILTER_STRENGTHS],
    pub cdef_uv_pri_strength: [u8; STD_VIDEO_AV1_MAX_CDEF_FILTER_STRENGTHS],
    pub cdef_uv_sec_strength: [u8; STD_VIDEO_AV1_MAX_CDEF_FILTER_STRENGTHS],
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoAV1LoopRestoration.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoAV1LoopRestoration {
    pub frame_restoration_type:
        [vk::native::StdVideoAV1FrameRestorationType; STD_VIDEO_AV1_MAX_NUM_PLANES],
    pub loop_restoration_size: [u16; STD_VIDEO_AV1_MAX_NUM_PLANES],
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoAV1GlobalMotion.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoAV1GlobalMotion {
    pub gm_type: [u8; STD_VIDEO_AV1_NUM_REF_FRAMES],
    pub gm_params: [i32; STD_VIDEO_AV1_NUM_REF_FRAMES],
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoAV1FilmGrainFlags.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoAV1FilmGrainFlags {
    pub chroma_scaling_from_luma: u32,
    pub overlap_flag: u32,
    pub clip_to_restricted_range: u32,
    pub update_grain: u32,
    pub reserved: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoAV1FilmGrain.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoAV1FilmGrain {
    pub flags: StdVideoAV1FilmGrainFlags,
    pub grain_scaling_minus_8: u8,
    pub ar_coeff_lag: u8,
    pub ar_coeff_shift_minus_6: u8,
    pub grain_scale_shift: u8,
    pub grain_seed: u16,
    pub film_grain_params_ref_idx: u8,
    pub num_y_points: u8,
    pub point_y_value: [u8; STD_VIDEO_AV1_MAX_NUM_Y_POINTS],
    pub point_y_scaling: [u8; STD_VIDEO_AV1_MAX_NUM_Y_POINTS],
    pub num_cb_points: u8,
    pub point_cb_value: [u8; STD_VIDEO_AV1_MAX_NUM_CB_POINTS],
    pub point_cb_scaling: [u8; STD_VIDEO_AV1_MAX_NUM_CB_POINTS],
    pub num_cr_points: u8,
    pub point_cr_value: [u8; STD_VIDEO_AV1_MAX_NUM_CR_POINTS],
    pub point_cr_scaling: [u8; STD_VIDEO_AV1_MAX_NUM_CR_POINTS],
    pub ar_coeffs_y_plus_128: [i8; STD_VIDEO_AV1_MAX_NUM_POS_LUMA],
    pub ar_coeffs_cb_plus_128: [i8; STD_VIDEO_AV1_MAX_NUM_POS_CHROMA],
    pub ar_coeffs_cr_plus_128: [i8; STD_VIDEO_AV1_MAX_NUM_POS_CHROMA],
    pub cb_mult: u8,
    pub cb_luma_mult: u8,
    pub cb_offset: u16,
    pub cr_mult: u8,
    pub cr_luma_mult: u8,
    pub cr_offset: u16,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoDecodeAV1PictureInfoFlags.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoDecodeAV1PictureInfoFlags {
    pub error_resilient_mode: u32,
    pub disable_cdf_update: u32,
    pub use_superres: u32,
    pub render_and_frame_size_different: u32,
    pub allow_screen_content_tools: u32,
    pub is_filter_switchable: u32,
    pub force_integer_mv: u32,
    pub frame_size_override_flag: u32,
    pub buffer_removal_time_present_flag: u32,
    pub allow_intrabc: u32,
    pub frame_refs_short_signaling: u32,
    pub allow_high_precision_mv: u32,
    pub is_motion_mode_switchable: u32,
    pub use_ref_frame_mvs: u32,
    pub disable_frame_end_update_cdf: u32,
    pub allow_warped_motion: u32,
    pub reduced_tx_set: u32,
    pub reference_select: u32,
    pub skip_mode_present: u32,
    pub delta_q_present: u32,
    pub delta_lf_present: u32,
    pub delta_lf_multi: u32,
    pub segmentation_enabled: u32,
    pub segmentation_update_map: u32,
    pub segmentation_temporal_update: u32,
    pub segmentation_update_data: u32,
    pub uses_lr: u32,
    pub uses_chroma_lr: u32,
    pub apply_grain: u32,
    pub reserved: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoDecodeAV1PictureInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoDecodeAV1PictureInfo {
    pub flags: StdVideoDecodeAV1PictureInfoFlags,
    pub frame_type: vk::native::StdVideoAV1FrameType,
    pub current_frame_id: u32,
    pub order_hint: u8,
    pub primary_ref_frame: u8,
    pub refresh_frame_flags: u8,
    pub reserved1: u8,
    pub interpolation_filter: vk::native::StdVideoAV1InterpolationFilter,
    pub tx_mode: vk::native::StdVideoAV1TxMode,
    pub delta_q_res: u8,
    pub delta_lf_res: u8,
    pub skip_mode_frame: [u8; STD_VIDEO_AV1_SKIP_MODE_FRAMES],
    pub coded_denom: u8,
    pub reserved2: [u8; 3],
    pub order_hints: [u8; STD_VIDEO_AV1_NUM_REF_FRAMES],
    pub expected_frame_id: [u32; STD_VIDEO_AV1_NUM_REF_FRAMES],
    pub p_tile_info: *const StdVideoAV1TileInfo,
    pub p_quantization: *const StdVideoAV1Quantization,
    pub p_segmentation: *const StdVideoAV1Segmentation,
    pub p_loop_filter: *const StdVideoAV1LoopFilter,
    pub p_cdef: *const StdVideoAV1CDEF,
    pub p_loop_restoration: *const StdVideoAV1LoopRestoration,
    pub p_global_motion: *const StdVideoAV1GlobalMotion,
    pub p_film_grain: *const StdVideoAV1FilmGrain,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoDecodeAV1ReferenceInfoFlags.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoDecodeAV1ReferenceInfoFlags {
    pub disable_frame_end_update_cdf: u32,
    pub segmentation_enabled: u32,
    pub reserved: u32,
}

#[doc = "https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/StdVideoDecodeAV1ReferenceInfo.html"]
#[derive(Debug, Clone, Copy, CDeserialize, CSerialize)]
#[repr(C)]
pub struct StdVideoDecodeAV1ReferenceInfo {
    pub flags: StdVideoDecodeAV1ReferenceInfoFlags,
    pub frame_type: u8,
    pub ref_frame_sign_bias: u8,
    pub order_hint: u8,
    pub saved_order_hints: [u8; STD_VIDEO_AV1_NUM_REF_FRAMES],
}
